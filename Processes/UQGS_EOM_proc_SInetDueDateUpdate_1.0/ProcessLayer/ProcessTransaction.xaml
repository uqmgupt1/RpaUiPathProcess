<Activity mc:Ignorable="sap sap2010 sads" x:Class="ProcessTransaction"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_wbParentPath" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_TransactionItem" Type="InOutArgument(ui:QueueItem)" />
    <x:Property Name="in_TransactionNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="in_RetryNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="in_studentID" Type="InArgument(x:String)" />
    <x:Property Name="in_caseID" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <TryCatch sap2010:Annotation.AnnotationText="##Business Process Layer##&#xA;Description: In this file all other process specific files will be invoked. If an application exception occurs, the current transaction can be retried. If a BRE is thrown, the transaction will be skipped. Can be a flowchart or sequence. " DisplayName="wbProcess" sap2010:WorkflowViewState.IdRef="TryCatch_4">
    <TryCatch.Variables>
      <Variable x:TypeArguments="x:String" Name="wbPath" />
      <Variable x:TypeArguments="x:String" Name="wbName" />
      <Variable x:TypeArguments="s:DateTime" Name="wbStartTime" />
    </TryCatch.Variables>
    <TryCatch.Try>
      <Sequence DisplayName="Try processing wbProcess" sap2010:WorkflowViewState.IdRef="Sequence_47">
        <Sequence sap2010:Annotation.AnnotationText="During block startup, information about the path are constructed. It will be passed to any child workblock.&#xA;You should also publish the input arguments that you want to make available in the log" DisplayName="wbStartup" sap2010:WorkflowViewState.IdRef="Sequence_65">
          <Assign sap2010:Annotation.AnnotationText="Edit to assign a name of your choosing" DisplayName="Assign workblock its name" sap2010:WorkflowViewState.IdRef="Assign_10">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[wbName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">ProcessTransaction</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Create current workblock path. This will be passed to children wb, if any" DisplayName="Create workblock path" sap2010:WorkflowViewState.IdRef="Assign_11">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[wbPath]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[if (string.IsNullOrEmpty(in_wbParentPath), wbName, in_wbParentPath+"|"+wbName)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Assign template start time. " DisplayName="Assign start time" sap2010:WorkflowViewState.IdRef="Assign_12">
            <Assign.To>
              <OutArgument x:TypeArguments="s:DateTime">[wbStartTime]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:DateTime">[datetime.Now]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:AddLogFields sap2010:Annotation.AnnotationText="Default wb fields&#xA;wbName&#xA;wbParentName&#xA;wbKey&#xA;wbPath&#xA;wbLevel&#xA;wbStartTime&#xA;wbState" DisplayName="Publish default wb fields" sap2010:WorkflowViewState.IdRef="AddLogFields_27">
            <ui:AddLogFields.Fields>
              <InArgument x:TypeArguments="x:String" x:Key="wbName">[wbName]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="wbParentName">[if(wbPath.Count(Function(x) x="|") = 0, string.Empty, wbPath.Split("|".ToCharArray)(wbPath.Count(Function(x) x="|")-1))]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="wbKey">[Guid.NewGuid.ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="wbPath">[wbPath]</InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="wbLevel">[wbPath.Count(Function(x) x="|")]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="wbState">Executing</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="wbStartTime">[wbStartTime.ToString("yyyyMMdd HH:mm:ss.fff")]</InArgument>
            </ui:AddLogFields.Fields>
          </ui:AddLogFields>
          <ui:AddLogFields sap2010:Annotation.AnnotationText="Publish input fields&#xA;wbRetriesLeft" DisplayName="Add log fields" sap2010:WorkflowViewState.IdRef="AddLogFields_28">
            <ui:AddLogFields.Fields>
              <InArgument x:TypeArguments="x:Int32" x:Key="wbRetriesLeft">[cint(in_Config.Item("MaxRetryNumber"))-in_RetryNumber]</InArgument>
            </ui:AddLogFields.Fields>
          </ui:AddLogFields>
          <ui:LogMessage DisplayName="Log execution started message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[wbPath + &quot; execution started.&quot;]" />
        </Sequence>
        <Sequence DisplayName="Process" sap2010:WorkflowViewState.IdRef="Sequence_69">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="updatedDueDate" />
            <Variable x:TypeArguments="x:Boolean" Default="False" Name="emailOnSuccess" />
            <Variable x:TypeArguments="x:String" Name="toEmailAddress" />
            <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;Environment&quot;).ToString]" Name="environment" />
          </Sequence.Variables>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke NavToChecklistManagementPage workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="SI-net\NavToChecklistManagementPage.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke NavToChecklistManagementStudent workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="SI-net\NavToChecklistManagementStudent.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_checkListCode">CANCON</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_studentID">[in_studentID]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_caseID">[in_caseID]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateChecklistIManagement_1 workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="SI-net\UpdateChecklistIManagement_1.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_transactionItem">[io_TransactionItem]</InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_partTimeExtension">[Convert.ToInt32 (in_Config("partTimeExtension").ToString)]</InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_fullTimeExtension">[Convert.ToInt32 (in_Config("fullTimeExtension").ToString)]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_dueDateNew">[updatedDueDate]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_studentID">[in_studentID]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_caseID">[in_caseID]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateChecklistManagement_2 workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="SI-net\UpdateChecklistManagement_2.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_studentID">[in_studentID]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_dueDateNew">[updatedDueDate]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_caseID">[in_caseID]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_responsibleID">[io_transactionItem.SpecificContent("UserID").ToString]</InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_config">[in_Config]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <TryCatch DisplayName="Try Catch - Read Asset and send email" sap2010:WorkflowViewState.IdRef="TryCatch_5">
            <TryCatch.Try>
              <Sequence DisplayName="Read asset and send email" sap2010:WorkflowViewState.IdRef="Sequence_70">
                <Assign DisplayName="Assign - emailOnSuccess" sap2010:WorkflowViewState.IdRef="Assign_15">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[emailOnSuccess]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">[Convert.ToBoolean(in_Config("EmailOnSuccessFlag"))]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[io_TransactionItem.SpecificContent(&quot;AssigneeEmailAddress&quot;).ToString.ToUpper.EndsWith(&quot;@UQ.EDU.AU&quot;)]" DisplayName="If email address in transaction item is invalid use address from config file" sap2010:WorkflowViewState.IdRef="If_11">
                  <If.Then>
                    <Assign DisplayName="Email address from content" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[toEmailAddress]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[io_TransactionItem.SpecificContent("AssigneeEmailAddress").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                  <If.Else>
                    <Assign DisplayName="Email address from config" sap2010:WorkflowViewState.IdRef="Assign_14">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[toEmailAddress]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[in_Config("exceptionEmailAddress_" + environment).ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
                <If Condition="[emailOnSuccess]" DisplayName="If flag is set to true send email" sap2010:WorkflowViewState.IdRef="If_12">
                  <If.Then>
                    <Sequence DisplayName="email on success asset true" sap2010:WorkflowViewState.IdRef="Sequence_73">
                      <ui:LogMessage DisplayName="Log Message - Email on success" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Email on success asset set True - sending email&quot;]" />
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendEmail workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Support\SendEmail.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="receiverAddress">[toEmailAddress]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="body">You are receiving this email from UiPath RPA Robot as a result of having successfully processed an item in the queue.</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="subject">["EoM Successfully processed queue item with case ID: '" + in_caseID + "' and student ID: '" + in_studentID + "'"]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="attachmentPath" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <ui:LogMessage DisplayName="Log Message - No email on success" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Email on success asset set False - not sending email&quot;]" />
                  </If.Else>
                </If>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:LogMessage DisplayName="Log Message - Error sending email" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Warn" Message="[&quot;Error sending email&quot;]" />
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <TryCatch DisplayName="Try Catch - Update UniTask API" sap2010:WorkflowViewState.IdRef="TryCatch_6">
            <TryCatch.Try>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateUniTaskAPI workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Support\UpdateUniTaskAPI.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_caseID">[in_caseID]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_status">completed</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_failedReason">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_result" />
                  <OutArgument x:TypeArguments="x:Int32" x:Key="out_statusCode" />
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Throw DisplayName="Throw BRE" Exception="[new businessruleexception(&quot;Case ID: '&quot; + in_caseID + &quot;' with student ID: '&quot; + in_studentID + &quot;'. Successfully updated mySI-net, but failed updating UniTask API&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
        <Sequence sap2010:Annotation.AnnotationText="Successful logging for workblock. &#xA;You should also publish the output arguments that you want to make available in the log." DisplayName="wb Logging Successful" sap2010:WorkflowViewState.IdRef="Sequence_66">
          <ui:AddLogFields sap2010:Annotation.AnnotationText="Default wb fields&#xA;wbStatus&#xA;wbState&#xA;wbDurationSec" DisplayName="Publish default wb fields" sap2010:WorkflowViewState.IdRef="AddLogFields_29">
            <ui:AddLogFields.Fields>
              <InArgument x:TypeArguments="x:String" x:Key="wbStatus">Successful</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="wbState">Ended</InArgument>
              <InArgument x:TypeArguments="x:Double" x:Key="wbDurationSec">[convert.ToDouble(now.Subtract(wbStartTime).TotalSeconds)]</InArgument>
            </ui:AddLogFields.Fields>
          </ui:AddLogFields>
          <ui:AddLogFields sap2010:Annotation.AnnotationText="Publish output fields" DisplayName="Add log fields" sap2010:WorkflowViewState.IdRef="AddLogFields_30">
            <ui:AddLogFields.Fields>
              <scg:Dictionary x:TypeArguments="x:String, InArgument" />
            </ui:AddLogFields.Fields>
          </ui:AddLogFields>
          <ui:SetTransactionStatus ContinueOnError="{x:Null}" Reason="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Successful" DisplayName="Set transaction status" ErrorType="Application" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_9" Status="Successful" TransactionItem="[io_TransactionItem]">
            <ui:SetTransactionStatus.Output>
              <scg:Dictionary x:TypeArguments="x:String, InArgument" />
            </ui:SetTransactionStatus.Output>
          </ui:SetTransactionStatus>
          <ui:LogMessage DisplayName="Log execution ended message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[wbPath + &quot; execution ended with success.&quot;]" />
        </Sequence>
      </Sequence>
    </TryCatch.Try>
    <TryCatch.Catches>
      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_7">
        <ActivityAction x:TypeArguments="s:Exception">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Catch, log and rethrow" sap2010:WorkflowViewState.IdRef="Sequence_68">
            <Sequence sap2010:Annotation.AnnotationText="Failed logging for workblock. &#xA;You should only set transaction status if you use a QueueItem, otherwise failed logging should remain unchanged." DisplayName="wb Logging Failed" sap2010:WorkflowViewState.IdRef="Sequence_67">
              <ui:AddLogFields sap2010:Annotation.AnnotationText="Default wb fields&#xA;wbStatus&#xA;wbState&#xA;wbDurationSec&#xA;wbExceptionType&#xA;wbExceptionMessage" DisplayName="Publish default wb fields" sap2010:WorkflowViewState.IdRef="AddLogFields_31">
                <ui:AddLogFields.Fields>
                  <InArgument x:TypeArguments="x:String" x:Key="wbStatus">Failed</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="wbState">Ended</InArgument>
                  <InArgument x:TypeArguments="x:Double" x:Key="wbDurationSec">[convert.ToDouble(now.Subtract(wbStartTime).TotalSeconds)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="wbExceptionType">[exception.GetType.Name]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="wbExceptionMessage">[exception.Message]</InArgument>
                </ui:AddLogFields.Fields>
              </ui:AddLogFields>
              <ui:LogMessage DisplayName="Log execution ended message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[wbPath + &quot; execution ended with exception message: &quot;+exception.Message]" />
              <If Condition="[If (exception IsNot Nothing AndAlso exception.GetType.Name = &quot;BusinessRuleException&quot;, True, False) OR (exception IsNot Nothing  And io_TransactionItem.RetryNo &gt;= Convert.ToInt16(in_Config(&quot;MaxRetryNumber&quot;).ToString))]" DisplayName="If AppEx Or BRE" sap2010:WorkflowViewState.IdRef="If_10">
                <If.Then>
                  <Sequence DisplayName="BRE" sap2010:WorkflowViewState.IdRef="Sequence_71">
                    <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Business Rule exception" DisplayName="Set transaction status" ErrorType="Business" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_14" Reason="[exception.Message]" Status="Failed" TransactionItem="[io_TransactionItem]">
                      <ui:SetTransactionStatus.Output>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                      </ui:SetTransactionStatus.Output>
                    </ui:SetTransactionStatus>
                    <Throw DisplayName="Throw BRE" Exception="[new businessruleexception(&quot;Business Rule Exception: &quot; + exception.Message + &quot; source: &quot; + exception.Source)]" sap2010:WorkflowViewState.IdRef="Throw_2" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Application Exception" sap2010:WorkflowViewState.IdRef="Sequence_72">
                    <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="System exception" DisplayName="Set transaction status" ErrorType="Application" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_15" Reason="[exception.Message]" Status="Failed" TransactionItem="[io_TransactionItem]">
                      <ui:SetTransactionStatus.Output>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                      </ui:SetTransactionStatus.Output>
                    </ui:SetTransactionStatus>
                    <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_13" />
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </Catch>
    </TryCatch.Catches>
    <sads:DebugSymbol.Symbol>d4YBQzpcVXNlcnNcdXFzam9zZTZcd29ya3NwYWNlc1xGT1JLXFJwYVVpUGF0aFByb2Nlc3NcUHJvY2Vzc2VzXFVRR1NfRU9NX3Byb2NfU0luZXREdWVEYXRlVXBkYXRlXzEuMFxQcm9jZXNzTGF5ZXJcUHJvY2Vzc1RyYW5zYWN0aW9uLnhhbWx4VAPNAg4CAQFbB50CEgIBIaUCC8gCFgIBAlwJhgEUAwGFAYcBCYgCFAIBLokCCZwCFAIBIqYCDccCGAIBA10LZBQDAaQBZQtsFAMBnAFtC3QUAwGYAXULfx0DAY0BgAELhAEdAwGJAYUBC4UBuQEDAYYBigE7igFCAgExjAE6jAFpAgEvjgELkgEjAwGBAZMBC5kBIwIBepoBC6MBIwIBbqQBC6wBIwIBY60BC+0BFgIBPe4BC4cCFgIBMooCC5ACHQIBKpECC5UCHQIBKZYCC5oCJQIBJpsCC5sCwgECASOnAg+vAiECARmwAg+wAuQBAgEVsQIPxgIUAgEEYjZiSAMBpwFfN18/AwGlAWo2aoYBAwGfAWc3Zz8DAZ0BcjhyRgMBmwFvOW9GAwGZAXlEeVsDAZcBeEt4xAEDAZYBfUp9eQMBlAF3RXdNAwGSAXpFek0DAZABfEZ8TwMBjwF7RXtmAwGOAYIBS4IBggEDAYoBhQGKAYUBtgEDAYcBkAFikAFtAwGDAY4BzwGOAfkBAwGCAZcBSJcBUwIBf5YBS5YBWQIBfZUBT5UBVQIBfJMB0gGTAf8BAgF7oQFIoQFTAgF4oAFLoAFZAgF2nQFSnQGNAQIBdZ8BTp8BXgIBc54BUp4BjQECAXKcAVWcAWkCAXCaAc8BmgH5AQIBb6gBSKgBUwIBbKYBS6YBWQIBaqcBTKcBXAIBaKkBT6kBhgECAWekAc4BpAH3AQIBZqoBYqoBbQIBZK8BD+EBGgIBQOkBE+kBvAECAT7wAQ/7AScCATWDAhODAqwCAgEzjAJHjAJRAgEtjQJGjQJLAgEsjgJMjgKGAQIBK5YCzQKWAuMCAgEnmwKIAZsCvwECASSpAkupAlECASCqAkqqAk8CAR+tAlWtAmgCAR2rAlCrAooBAgEcrAJSrAJqAgEasAKNAbAC4QECARaxAh2xApACAgEFswITugIeAgENvQITxAIeAgEGsAERtwEaAgFfuAERzQEWAgFTzgER4AEWAgFB6QGWAekBuQECAT/yAUzyAVcCATv1ARX1AUQCATr3AWb3AXECATjzAUzzAVUCATfwAccB8AHmAQIBNoMCPIMC/wECATS0AhW4Ai8CARC5AhW5Au4BAgEOvgIVwgIvAgEIwwIVwwJNAgEHtQE9tQFxAgFisgE+sgFOAgFguAEfuAGZAQIBVLoBFcEBHgIBW8QBFcsBHgIBVc4BH84BMQIBQtABFdsBIAIBRt4BFd4B3wECAUS0ArMCtALIAgIBE7QC6QK0Av8CAgERuQI+uQLBAQIBD74CrwK+AsQCAgELvgLlAr4C+wICAQm/AUC/AYUBAgFevAFBvAFRAgFcyQFAyQF8AgFYxgFBxgFRAgFW0QEX0QHZAQIBUdIBF9oBLwIBR94BmAHeAdwBAgFF0QGXAdEB1gECAVLWAU/WAcQBAgFQ1QFa1QFqAgFO1wFS1wHEAQIBS9QBbtQBeQIBSdIByAHSAeABAgFI</sads:DebugSymbol.Symbol>
  </TryCatch>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="314,107.333333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="314,107.333333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="314,90.6666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddLogFields_27" sap:VirtualizedContainerService.HintSize="314,167.333333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddLogFields_28" sap:VirtualizedContainerService.HintSize="314,67.3333333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,94.6666666666667" />
      <sap2010:ViewStateData Id="Sequence_65" sap:VirtualizedContainerService.HintSize="737.333333333333,1037.33333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="715.333333333333,86.6666666666667" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="715.333333333333,86.6666666666667" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="715.333333333333,86.6666666666667" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="715.333333333333,86.6666666666667" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="674.666666666667,62" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="675,208" />
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_6" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_73" sap:VirtualizedContainerService.HintSize="336,342">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="675,490" />
      <sap2010:ViewStateData Id="Sequence_70" sap:VirtualizedContainerService.HintSize="696.666666666667,964">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_8" sap:VirtualizedContainerService.HintSize="701,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="715.333333333333,1444">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_9" sap:VirtualizedContainerService.HintSize="404,104">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_6" sap:VirtualizedContainerService.HintSize="549,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_69" sap:VirtualizedContainerService.HintSize="737.333333333333,2165.33333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddLogFields_29" sap:VirtualizedContainerService.HintSize="314,94">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddLogFields_30" sap:VirtualizedContainerService.HintSize="314,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SetTransactionStatus_9" sap:VirtualizedContainerService.HintSize="314,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_66" sap:VirtualizedContainerService.HintSize="571,584">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_47" sap:VirtualizedContainerService.HintSize="759.333333333333,3990.66666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddLogFields_31" sap:VirtualizedContainerService.HintSize="469,124">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="469,91" />
      <sap2010:ViewStateData Id="SetTransactionStatus_14" sap:VirtualizedContainerService.HintSize="200,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_71" sap:VirtualizedContainerService.HintSize="222,235">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SetTransactionStatus_15" sap:VirtualizedContainerService.HintSize="200,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Rethrow_13" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_72" sap:VirtualizedContainerService.HintSize="222,235">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="469,383" />
      <sap2010:ViewStateData Id="Sequence_67" sap:VirtualizedContainerService.HintSize="491,859">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_68" sap:VirtualizedContainerService.HintSize="513,983">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_7" sap:VirtualizedContainerService.HintSize="597,1052">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="778,5424.66666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ProcessTransaction_1" sap:VirtualizedContainerService.HintSize="818,5504.66666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>