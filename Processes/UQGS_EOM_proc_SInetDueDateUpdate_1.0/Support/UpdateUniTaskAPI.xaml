<Activity mc:Ignorable="sap sap2010 sads" x:Class="UpdateUniTaskAPI"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_caseID" Type="InArgument(x:String)" />
    <x:Property Name="in_status" Type="InArgument(x:String)" />
    <x:Property Name="in_failedReason" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_result" Type="OutArgument(x:String)" />
    <x:Property Name="out_statusCode" Type="OutArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>UpdateUniTaskAPI_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Text</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This file will attempt to update UniTask through a HTTP request. First we read credentials from Orchestrator and convert them to Base64, any failures at this point will throw an application exception.&#xA;If we were succesfull in converting the credentials we attempt the API call in a retry block untill we are returned a status code of 200, all others are considered a failure.&#xA;Inputs:&#xA;caseID&#xA;status - 'failed'or 'completed&#xA;failedReason - BRE message&#xA;Config&#xA;Outputs:&#xA;statusCode&#xA;result" DisplayName="UpdateUniTaskAPI" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="uniTaskUserName" />
      <Variable x:TypeArguments="ss:SecureString" Name="uniTaskPassword" />
      <Variable x:TypeArguments="x:String" Name="cipUserName" />
      <Variable x:TypeArguments="ss:SecureString" Name="cipPassword" />
      <Variable x:TypeArguments="x:String" Name="cipPasswordStr" />
      <Variable x:TypeArguments="x:String" Name="uniTaskPasswordStr" />
      <Variable x:TypeArguments="x:String" Name="uniTaskBase64" />
      <Variable x:TypeArguments="x:String" Name="cipBase64" />
      <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;Environment&quot;).ToString]" Name="environment" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log Message - updating UniTask API" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Updating UniTask API for case ID: '&quot; + in_caseID + &quot;'&quot;]" />
    <TryCatch DisplayName="Try and get credentials from Orchestrator" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="Get credentials from Orchestrator" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[in_Config(&quot;UNITASK_Authorization&quot;).ToString]" DisplayName="Get Credential - UniTask Authorization" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[uniTaskPassword]" Username="[uniTaskUserName]" />
          <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[in_Config(&quot;CIP_Authorization&quot;).ToString]" DisplayName="Get Credential - CIP Authorization" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[cipPassword]" Username="[cipUserName]" />
          <Assign DisplayName="UniTask password to string" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[uniTaskPasswordStr]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, uniTaskPassword).Password]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="CIP password to string" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[cipPasswordStr]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, cipPassword).Password]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Convert UniTask User:Password to Base64" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[uniTaskBase64]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(uniTaskUserName + ":" + uniTaskPasswordStr))]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Convert CIP User:Password to Base64" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[cipBase64]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(cipUserName + ":" + cipPasswordStr))]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Orchestrator call failed" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <ui:LogMessage DisplayName="Log Message - Failed" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Error" Message="[&quot;Failed to get UniTask API credentials from Orchestrator for case ID: '&quot; + in_caseID + &quot;'&quot;]" />
              <Throw DisplayName="Throw Exception" Exception="[new applicationexception(&quot;Failed to get UniTask API credentials from Orchestrator&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <TryCatch DisplayName="Try and update UniTask through API" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <TryCatch.Try>
        <Sequence DisplayName="Update UniTask through API" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <ui:RetryScope DisplayName="Retry - updating UniTask API" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:01:00">
            <ui:RetryScope.ActivityBody>
              <ActivityAction>
                <Sequence DisplayName="Update API" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <ui:LogMessage DisplayName="Log Message - updating UniTask API" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Attempting API call&quot;]" />
                  <ui:HttpClient ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" Body="[&quot;{ &quot;&quot;case_id&quot;&quot;: &quot;&quot;&quot; + in_caseID + &quot;&quot;&quot;, &quot;&quot;status&quot;&quot;: &quot;&quot;&quot; + in_status + &quot;&quot;&quot;, &quot;&quot;error_reason&quot;&quot;: &quot;&quot;&quot; + in_failedReason + &quot;&quot;&quot; }&quot;]" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request" EndPoint="[in_Config(&quot;API_endPoint_&quot; + environment).ToString]" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="PUT" Result="[out_result]" StatusCode="[out_statusCode]" TimeoutMS="6000">
                    <ui:HttpClient.Attachments>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Attachments>
                    <ui:HttpClient.Headers>
                      <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="UNITASK-Authorization">["Basic " + uniTaskBase64]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="Authorization">["Basic " + cipBase64]</InArgument>
                    </ui:HttpClient.Headers>
                    <ui:HttpClient.Parameters>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Parameters>
                    <ui:HttpClient.UrlSegments>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.UrlSegments>
                  </ui:HttpClient>
                </Sequence>
              </ActivityAction>
            </ui:RetryScope.ActivityBody>
            <ui:RetryScope.Condition>
              <ActivityFunc x:TypeArguments="x:Boolean">
                <p:IsTrue DisplayName="Is true" sap2010:WorkflowViewState.IdRef="IsTrue_1" Input="[out_statusCode = 200]" />
              </ActivityFunc>
            </ui:RetryScope.Condition>
          </ui:RetryScope>
          <ui:LogMessage DisplayName="Log Message - Successful" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Successfully updated status to UniTask API for case ID: '&quot; + in_caseID + &quot;'&quot;]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="API call failed" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <ui:LogMessage DisplayName="Log Message - Failed" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[&quot;Failed to update status to UniTask API with code: '&quot; + out_statusCode.ToString + &quot;' description: '&quot; + out_result + &quot;'&quot;]" />
              <Throw DisplayName="Throw Exception" Exception="[new applicationexception(&quot;Failed in call to UniTask API&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_2" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <sads:DebugSymbol.Symbol>d2dDOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcVVFHU19FT01fcHJvY19TSW5ldER1ZURhdGVVcGRhdGVfMS4wXFN1cHBvcnRcVXBkYXRlVW5pVGFza0FQSS54YW1sO1QDyQEOAgEBXjReYwIBAmAFYNsBAgFVYQWVARACAS2WAQXHARACAQRgiQFg2AECAVZjCYYBFAIBNI4BDZEBGAIBLpgBCbgBFAIBDMABDcMBGAIBBWQLZKMCAgFOZQtlkwICAUdmC20UAgFCbgt1FAIBPXYLfRQCATl+C4UBFAIBNY8BD48B+wECATGQAQ+QAcwBAgEvmQELtgEbAgEQtwELtwHtAQIBDcEBD8EBogICAQjCAQ/CAbIBAgEGZEFkegIBU2SNAmSgAgIBUWTwAWSDAgIBT2VBZXYCAUxlgQJlkAICAUpl6AFl9wECAUhrNmuAAQIBRWg3aEsCAUNzNnN8AgFAcDdwRwIBPns2e54BAgE8eDd4RgIBOoMBNoMBlgECATiAATeAAUICATaPAYYBjwH4AQIBMpABPpABnwECATCZAZYBmQGgAQIBLJkBhAGZAYcBAgErnAERrgEcAgEUswERswF9AgERtwGFAbcB6gECAQ7BAYYBwQGfAgIBCcIBPsIBhQECAQedAROdAb0BAgEpngETrQEjAgEVswFiswF6AgESnQGXAZ0BugECASqkAVykAXYCASeeAYcFngGSBQIBJp4B8QaeAfcGAgElngGSAp4BsAQCASGlAVSlAWoCAR+eAboGngHIBgIBHZ4BtwWeAfYFAgEangHhBJ4B7AQCARmeAdQGngHmBgIBF6MBU6MBYwIBFg==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="GetRobotCredential_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="GetRobotCredential_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="264,608">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,346">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="418,1264">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="HttpClient_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsTrue_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_1" sap:VirtualizedContainerService.HintSize="358,458" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="358,91" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="380,713">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="404,346">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="418,1369" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="440,3150">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UpdateUniTaskAPI_1" sap:VirtualizedContainerService.HintSize="480,3230">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>