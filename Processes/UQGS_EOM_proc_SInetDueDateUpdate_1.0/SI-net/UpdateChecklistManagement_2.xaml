<Activity mc:Ignorable="sap sap2010 sads" x:Class="UpdateChecklistManagement_2"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_dueDateNew" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_transactionItem" Type="InArgument(ui:QueueItem)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>UpdateChecklistManagement_2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This file will update the second tab on the 'Checklist Management - Person' page. On this page we update the 'Item', 'Due Date' and 'Responsible ID' fields. The 'Item' field is updated depending on it's current value, if that value is unexpected we throw a BRE.&#xA;Because the 'Responsible ID' field is part of the 'Extra Details' drop down we first check to see if we can find the element before clicking the drop down arrow.&#xA;On completion we should have successfully updated all fields, saved the changes and navigated back to the home page. If there was an error trying to save, we won't successfully navigate to the home page in which case we throw a BRE.&#xA;Inputs:&#xA;studentID&#xA;caseID&#xA;responsibleID&#xA;dueDateNew - this is the updated due date passed in from update checklist tab 1" DisplayName="UpdateChecklistManagement_2" sap2010:WorkflowViewState.IdRef="Sequence_12">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="responsibleID" />
      <Variable x:TypeArguments="x:String" Name="studentID" />
      <Variable x:TypeArguments="x:String" Name="caseID" />
    </Sequence.Variables>
    <Assign DisplayName="Assign UserID" sap2010:WorkflowViewState.IdRef="Assign_27">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[responsibleID]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_transactionItem.SpecificContent("UserID").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign - Student ID" sap2010:WorkflowViewState.IdRef="Assign_28">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[studentID]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_transactionItem.SpecificContent("StudentId").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign - Case ID" sap2010:WorkflowViewState.IdRef="Assign_29">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[caseID]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_transactionItem.SpecificContent("CaseID").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser 'chrome.exe Checklist'" sap2010:WorkflowViewState.IdRef="BrowserScope_1" Selector="&lt;html app='chrome.exe' title='Checklist Management - Person' /&gt;">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Update 'Checklist Management 2' fields" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="homePageFound" />
              <Variable x:TypeArguments="x:String" Name="itemValueNew" />
              <Variable x:TypeArguments="x:Boolean" Name="responsibleIdFound" />
              <Variable x:TypeArguments="x:String" Name="allowedDueDate" />
              <Variable x:TypeArguments="x:String" Name="allowedItem">
                <Variable.Default>
                  <Literal x:TypeArguments="x:String" Value="" />
                </Variable.Default>
              </Variable>
              <Variable x:TypeArguments="x:Int32" Name="allowedIndex" />
              <Variable x:TypeArguments="x:String" Name="itemValueCurrent" />
              <Variable x:TypeArguments="ui:GenericValue" Name="textAfter" />
              <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="checklistItems" />
              <Variable x:TypeArguments="x:Int32" Name="index" />
              <Variable x:TypeArguments="x:String" Name="resetDueDate" />
              <Variable x:TypeArguments="x:Boolean" Name="isItemMatch" />
              <Variable x:TypeArguments="x:Boolean" Name="isDueDateEmpty" />
            </Sequence.Variables>
            <ui:LogMessage DisplayName="Log Message - updating 'Checklist Management 2' tab" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Updating 'Checklist Management 2' page&quot;]" />
            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Checklist Management 2' tab" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl aaname='Checklist Management 2' /&gt;" WaitForReady="COMPLETE" />
              </ui:Click.Target>
            </ui:Click>
            <ui:FindChildren Children="[checklistItems]" DisplayName="Find Checklist Items" Filter="&lt;webctrl id='PERSON_CHK_ITEM_CHKLST_ITEM_CD$*' tag='INPUT' /&gt;" sap2010:WorkflowViewState.IdRef="FindChildren_1" Scope="FIND_DESCENDANTS">
              <ui:FindChildren.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl id='ptifrmtgtframe' tag='IFRAME' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:FindChildren.Target>
            </ui:FindChildren>
            <ui:ForEach x:TypeArguments="ui:UiElement" CurrentIndex="[index]" DisplayName="For each item found" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[checklistItems]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="ui:UiElement">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:UiElement" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Get the Item value and check in allowed item list from config file" sap2010:WorkflowViewState.IdRef="Sequence_18">
                    <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get 'Item' value" sap2010:WorkflowViewState.IdRef="GetValue_9">
                      <ui:GetValue.Target>
                        <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[item]" WaitForReady="COMPLETE" />
                      </ui:GetValue.Target>
                      <ui:GetValue.Value>
                        <OutArgument x:TypeArguments="x:String">[itemValueCurrent]</OutArgument>
                      </ui:GetValue.Value>
                    </ui:GetValue>
                    <If Condition="[in_Config(&quot;allowedItemList&quot;).ToString.Contains(itemValueCurrent)]" sap2010:WorkflowViewState.IdRef="If_9">
                      <If.Then>
                        <Sequence DisplayName="If the Item value is allowed store the index and find the due date" sap2010:WorkflowViewState.IdRef="Sequence_17">
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_25">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[allowedItem]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[itemValueCurrent]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_26">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[allowedIndex]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[index]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get 'Due Date' value" sap2010:WorkflowViewState.IdRef="GetValue_12">
                            <ui:GetValue.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[&quot;&lt;webctrl id='PERSON_CHK_ITEM_DUE_DT$&quot; &amp; index &amp; &quot;' tag='INPUT' /&gt;&quot;]" WaitForReady="COMPLETE" />
                            </ui:GetValue.Target>
                            <ui:GetValue.Value>
                              <OutArgument x:TypeArguments="x:String">[allowedDueDate]</OutArgument>
                            </ui:GetValue.Value>
                          </ui:GetValue>
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <Switch x:TypeArguments="x:String" DisplayName="Switch - get update for current 'Item' value" Expression="[allowedItem.ToUpper]" sap2010:WorkflowViewState.IdRef="Switch`1_1">
              <Switch.Default>
                <Sequence DisplayName="'Item' value is invalid" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <ui:LogMessage DisplayName="Log Message - Invalid 'Item' code" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Error" Message="[&quot;All Item code(s) present in 'Checklist Item Table' are invalid&quot;]" />
                  <Throw DisplayName="Throw BRE" Exception="[new businessruleexception(&quot;Case ID: '&quot; + caseID + &quot;' with student ID: '&quot; + studentID + &quot;'. All the Item code(s) present in 'Checklist Item Table' are invalid&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_6" />
                </Sequence>
              </Switch.Default>
              <Assign x:Key="CONFIR" sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[itemValueNew]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">EXTCON</InArgument>
                </Assign.Value>
              </Assign>
              <Assign x:Key="EXTCON" sap2010:WorkflowViewState.IdRef="Assign_10">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[itemValueNew]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">FINCON</InArgument>
                </Assign.Value>
              </Assign>
              <Assign x:Key="MIDREV" sap2010:WorkflowViewState.IdRef="Assign_11">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[itemValueNew]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">EXTMID</InArgument>
                </Assign.Value>
              </Assign>
              <Assign x:Key="EXTMID" sap2010:WorkflowViewState.IdRef="Assign_12">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[itemValueNew]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">FINMID</InArgument>
                </Assign.Value>
              </Assign>
              <Assign x:Key="THEREV" sap2010:WorkflowViewState.IdRef="Assign_13">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[itemValueNew]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">EXTTHE</InArgument>
                </Assign.Value>
              </Assign>
              <Assign x:Key="EXTTHE" sap2010:WorkflowViewState.IdRef="Assign_14">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[itemValueNew]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">FINTHE</InArgument>
                </Assign.Value>
              </Assign>
              <Assign x:Key="SUBMDL" sap2010:WorkflowViewState.IdRef="Assign_15">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[itemValueNew]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">EXTSUB</InArgument>
                </Assign.Value>
              </Assign>
              <Assign x:Key="EXTSUB" sap2010:WorkflowViewState.IdRef="Assign_16">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[itemValueNew]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">FINSUB</InArgument>
                </Assign.Value>
              </Assign>
            </Switch>
            <ui:LogMessage DisplayName="Log Message - update 'Item' value" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Updating 'Item' value from: '&quot; + allowedItem + &quot;' to: '&quot; + itemValueNew + &quot;'&quot;]" />
            <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_1" Text="ITSADSSD-19693 - Add 'Tab' to activate validation for ITEM filed and introduce retry activity for entering ITEM and DueDate value  " />
            <ui:RetryScope DisplayName="Retry Scope - Update item" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="5" RetryInterval="00:00:05">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <Sequence DisplayName="Update Item and validate description change and date field reset" sap2010:WorkflowViewState.IdRef="Sequence_19">
                    <ui:TypeInto DelayBefore="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="True" DelayBetweenKeys="50" DisplayName="Update 'Item' value" EmptyField="True" sap2010:WorkflowViewState.IdRef="TypeInto_2" SendWindowMessages="False" SimulateType="False" Text="[itemValueNew+ &quot;[k(tab)]&quot;]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[&quot;&lt;webctrl id='PERSON_CHK_ITEM_CHKLST_ITEM_CD$&quot; &amp; allowedIndex &amp; &quot;' tag='INPUT' /&gt;&quot;]" WaitForReady="COMPLETE" />
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                    <ui:LogMessage DisplayName="Log Message - update 'Item' value" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Info" Message="[&quot;Updated 'Item' value to : &quot; + itemValueNew + &quot; successfully&quot;]" />
                    <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text of Item to Verify" sap2010:WorkflowViewState.IdRef="GetValue_8">
                      <ui:GetValue.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[&quot;&lt;webctrl id='PERSON_CHK_ITEM_CHKLST_ITEM_CD$&quot; &amp; allowedIndex &amp; &quot;' tag='INPUT' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                      </ui:GetValue.Target>
                      <ui:GetValue.Value>
                        <OutArgument x:TypeArguments="ui:GenericValue">[textAfter]</OutArgument>
                      </ui:GetValue.Value>
                    </ui:GetValue>
                    <p:IsEqualString Pattern="{x:Null}" DisplayName="Is Item updated as expected" sap2010:WorkflowViewState.IdRef="IsEqualString_2" Input="[itemValueNew]" Result="[isItemMatch]" Text="[textAfter]" />
                    <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get 'Due Date' value" sap2010:WorkflowViewState.IdRef="GetValue_15">
                      <ui:GetValue.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[&quot;&lt;webctrl id='PERSON_CHK_ITEM_DUE_DT$&quot; &amp; index &amp; &quot;' tag='INPUT' /&gt;&quot;]" WaitForReady="COMPLETE" />
                      </ui:GetValue.Target>
                      <ui:GetValue.Value>
                        <OutArgument x:TypeArguments="x:String">[resetDueDate]</OutArgument>
                      </ui:GetValue.Value>
                    </ui:GetValue>
                    <p:IsEmptyString DisplayName="Is DueDate field reset to blank" sap2010:WorkflowViewState.IdRef="IsEmptyString_1" Input="[resetDueDate]" Result="[isDueDateEmpty]" />
                  </Sequence>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsTrue DisplayName="isItemMatch and isDueDateEmpty" sap2010:WorkflowViewState.IdRef="IsTrue_1" Input="[isItemMatch AndAlso isDueDateEmpty]" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <ui:LogMessage DisplayName="Log Message - 'Item' text" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Info" Message="[&quot;Text after setting item : &quot;+textAfter]" />
            <ui:LogMessage DisplayName="Log Message - update 'Due Date'" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Updating 'Due Date' from: '&quot; + allowedDueDate + &quot;' to: '&quot; + in_dueDateNew + &quot;'&quot;]" />
            <ui:RetryScope DisplayName="Retry Scope - Update Due Date" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="5" RetryInterval="00:00:05">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_22">
                    <ui:TypeInto DelayBefore="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="True" DelayBetweenKeys="50" DisplayName="Enter new Due Date" EmptyField="True" sap2010:WorkflowViewState.IdRef="TypeInto_1" SendWindowMessages="False" SimulateType="False" Text="[in_dueDateNew]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[&quot;&lt;webctrl id='PERSON_CHK_ITEM_DUE_DT$&quot; &amp; allowedIndex &amp; &quot;' tag='INPUT' /&gt;&quot;]" WaitForReady="COMPLETE" />
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                    <ui:LogMessage DisplayName="Log Message - update 'Due date' value" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info" Message="[&quot;Updated 'Due date' value to : &quot; + in_dueDateNew + &quot; successfully&quot;]" />
                    <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text of Due Date to Verify" sap2010:WorkflowViewState.IdRef="GetValue_7">
                      <ui:GetValue.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[&quot;&lt;webctrl id='PERSON_CHK_ITEM_DUE_DT$&quot; &amp; allowedIndex &amp; &quot;' tag='INPUT' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                      </ui:GetValue.Target>
                      <ui:GetValue.Value>
                        <OutArgument x:TypeArguments="ui:GenericValue">[textAfter]</OutArgument>
                      </ui:GetValue.Value>
                    </ui:GetValue>
                  </Sequence>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsEqualString Pattern="{x:Null}" DisplayName="Is Due Date updated as expected" sap2010:WorkflowViewState.IdRef="IsEqualString_1" Input="[in_dueDateNew]" Text="[textAfter]" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <ui:LogMessage DisplayName="Log Message - 'Due date' text" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Info" Message="[&quot;Text after setting due date : &quot;+textAfter]" />
            <ui:LogMessage DisplayName="Log Message - update 'Responsible ID'" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="[&quot;Updating Responsible ID : '&quot; + responsibleID + &quot;'&quot;]" />
            <ui:UiElementExists DisplayName="Element Exists 'Responsible ID'" Exists="[responsibleIdFound]" sap2010:WorkflowViewState.IdRef="UiElementExists_5">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="d8c621b0034f08b1a6fa82521adefd72" Selector="&lt;webctrl aaname='Responsible ID' /&gt;" TimeoutMS="5000" WaitForReady="COMPLETE" />
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <If Condition="[NOT responsibleIdFound]" DisplayName="If element NOT found click 'Extra Details'" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="dynamicSelector" />
                    <Variable x:TypeArguments="x:Boolean" Name="elementExists" />
                  </Sequence.Variables>
                  <Assign DisplayName="Create a dynamic selector for allowed 'Extra Details' section" sap2010:WorkflowViewState.IdRef="Assign_24">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[dynamicSelector]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["&lt;webctrl id='"+"*UQ_DRV_CHKLIST_UQ_CHK_ITM_ASN*$"+allowedIndex.ToString+"' tag='A' /&gt;"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:UiElementExists DisplayName="Element Exists 'Extra Details Section'" Exists="[elementExists]" sap2010:WorkflowViewState.IdRef="UiElementExists_7">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="bdc4ea1149ca909a76ec3a43ed83e617" Selector="[dynamicSelector]" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
                    </ui:UiElementExists.Target>
                  </ui:UiElementExists>
                  <If Condition="[elementExists]" sap2010:WorkflowViewState.IdRef="If_8">
                    <If.Then>
                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Extra Details'" sap2010:WorkflowViewState.IdRef="Click_9" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[dynamicSelector]" WaitForReady="COMPLETE" />
                        </ui:Click.Target>
                      </ui:Click>
                    </If.Then>
                  </If>
                </Sequence>
              </If.Then>
            </If>
            <ui:WaitUiElementAppear FoundElement="{x:Null}" DisplayName="Find Element 'Responsible ID'" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_1" WaitActive="False" WaitVisible="False">
              <ui:WaitUiElementAppear.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;webctrl aaname='Responsible ID' /&gt;" TimeoutMS="10000" WaitForReady="COMPLETE" />
              </ui:WaitUiElementAppear.Target>
            </ui:WaitUiElementAppear>
            <ui:TypeInto DelayBefore="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="True" DelayBetweenKeys="50" DisplayName="Update 'Responsible ID'" EmptyField="True" sap2010:WorkflowViewState.IdRef="TypeInto_3" SendWindowMessages="False" SimulateType="False" Text="[responsibleID+ &quot;[k(tab)]&quot;]">
              <ui:TypeInto.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="4ae99de72b7d06e75d1bb9a650c71c4b" Selector="&lt;webctrl tag='INPUT' aaname='Responsible ID' /&gt;" WaitForReady="COMPLETE" />
              </ui:TypeInto.Target>
            </ui:TypeInto>
            <ui:Click ClickType="CLICK_SINGLE" DelayBefore="2000" DelayMS="3000" DisplayName="Click 'Yes' to save changes" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl tag='INPUT' aaname='Save (Alt+1)' /&gt;" WaitForReady="COMPLETE" />
              </ui:Click.Target>
            </ui:Click>
            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Home' button" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl aaname='Home' /&gt;" WaitForReady="COMPLETE" />
              </ui:Click.Target>
            </ui:Click>
            <ui:UiElementExists DisplayName="mySI-net Home page found" Exists="[homePageFound]" sap2010:WorkflowViewState.IdRef="UiElementExists_4">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;html app='chrome.exe' title='Homepage' /&gt;&lt;webctrl aaname='mySI-net Staff Homepage' /&gt;" TimeoutMS="10000" WaitForReady="COMPLETE" />
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <If Condition="[NOT homePageFound]" DisplayName="If cannot navigating to home page there was an error saving" sap2010:WorkflowViewState.IdRef="If_4">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <ui:LogMessage DisplayName="Log Message - Error saving" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Error" Message="[&quot;Error saving update to case ID: '&quot; + caseID + &quot;' with student ID: '&quot; + studentID + &quot;'&quot;]" />
                  <Throw DisplayName="Throw BRE" Exception="[new businessruleexception(&quot;Case ID: '&quot; + caseID + &quot;' with student ID: '&quot; + studentID + &quot;'. Failed to save changes in mySI-net&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_5" />
                </Sequence>
              </If.Then>
              <If.Else>
                <ui:LogMessage DisplayName="Log Message - Successfully saved" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Successfully saved update to case ID: '&quot; + caseID + &quot;' with student ID: '&quot; + studentID + &quot;'&quot;]" />
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
    </ui:BrowserScope>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="711,60" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="711,60" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="711,60" />
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="Click_4" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="FindChildren_1" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="GetValue_9" sap:VirtualizedContainerService.HintSize="464,68" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="GetValue_12" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="336,392">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="464,539" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="486,771">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="675,904" />
      <sap2010:ViewStateData Id="LogMessage_28" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Throw_6" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Switch`1_1" sap:VirtualizedContainerService.HintSize="675,1460">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="Comment_1" sap:VirtualizedContainerService.HintSize="675,93" />
      <sap2010:ViewStateData Id="TypeInto_2" sap:VirtualizedContainerService.HintSize="314,96" />
      <sap2010:ViewStateData Id="LogMessage_26" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="GetValue_8" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="IsEqualString_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="GetValue_15" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="IsEmptyString_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="336,691">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsTrue_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_1" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_33" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="TypeInto_1" sap:VirtualizedContainerService.HintSize="314,96" />
      <sap2010:ViewStateData Id="LogMessage_27" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="GetValue_7" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="336,459">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsEqualString_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_2" sap:VirtualizedContainerService.HintSize="675,640">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_29" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="LogMessage_19" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="UiElementExists_5" sap:VirtualizedContainerService.HintSize="675,106" />
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="UiElementExists_7" sap:VirtualizedContainerService.HintSize="464,106" />
      <sap2010:ViewStateData Id="Click_9" sap:VirtualizedContainerService.HintSize="314,68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="464,215" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="486,585">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="675,732" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_1" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="TypeInto_3" sap:VirtualizedContainerService.HintSize="675,134" />
      <sap2010:ViewStateData Id="Click_6" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="Click_7" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="UiElementExists_4" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Throw_5" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="675,424" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="697,6422">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BrowserScope_1" sap:VirtualizedContainerService.HintSize="711,6530" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="733,7131">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UpdateChecklistManagement_2_1" sap:VirtualizedContainerService.HintSize="773,6623">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>