<Activity mc:Ignorable="sap sap2010 sads" x:Class="UpdateDueDate"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_transactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="in_partTimeExtension" Type="InArgument(x:Int32)" />
    <x:Property Name="in_fullTimeExtension" Type="InArgument(x:Int32)" />
    <x:Property Name="out_dueDateNew" Type="OutArgument(x:String)" />
    <x:Property Name="in_studentID" Type="InArgument(x:String)" />
    <x:Property Name="in_caseID" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>UpdateDueDate_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This file will update the first tab on the 'Checklist Management  - Person' page. First we check the 'Comments' field to see if this case ID has already been completed, if not we update the 'Due Date' depending if the study type is Master of Philosophy, full time or part time and the 'Comments' field to reflect the changes that we have made.&#xA;In the case where the study type is Master of Philisophy where get the extend to due date from the transaction item's content which should be in the format yyyy-MM-dd, if not we throw a BRE.&#xA;Inputs:&#xA;transactionItem&#xA;partTimeExtension - how many months to add to current date for part time study&#xA;fullTimeExtension - how many months to add for fullt time study&#xA;studentID&#xA;caseID&#xA;Outputs:&#xA;dueDateNew - updated 'Due Date' that we pass through to the second tab" DisplayName="UpdateChecklistManagement_1" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser 'chrome.exe Checklist'" sap2010:WorkflowViewState.IdRef="BrowserScope_1" Selector="&lt;html app='chrome.exe' title='Checklist Management - Person' /&gt;">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Update 'Checklist Management 1' fields" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="dueDateCurrent" />
              <Variable x:TypeArguments="x:String" Name="commentsField" />
              <Variable x:TypeArguments="s:DateTime" Name="dueDateNew" />
              <Variable x:TypeArguments="x:String" Name="regularExpression" />
              <Variable x:TypeArguments="str:Match" Name="regExMatch" />
              <Variable x:TypeArguments="s:DateTime" Name="currentDate" />
              <Variable x:TypeArguments="x:String" Default="[in_transactionItem.SpecificContent(&quot;Type&quot;).ToString]" Name="studyType" />
              <Variable x:TypeArguments="x:String" Default="[in_transactionItem.SpecificContent(&quot;UserID&quot;).ToString]" Name="userID" />
              <Variable x:TypeArguments="x:String" Default="[If(isNothing(in_transactionItem.SpecificContent(&quot;NumberOfMonthsFTE&quot;)),&quot;&quot;,in_transactionItem.SpecificContent(&quot;NumberOfMonthsFTE&quot;).ToString)]" Name="numberOfMonthsFTE" />
              <Variable x:TypeArguments="x:String" Default="[in_transactionItem.SpecificContent(&quot;Milestone&quot;).ToString]" Name="mileStone" />
              <Variable x:TypeArguments="x:String" Name="commentsFieldNewline" />
              <Variable x:TypeArguments="x:String" Default="[if(isNothing(in_transactionItem.SpecificContent(&quot;ExtendMilestoneDueDateTo&quot;)),&quot;&quot;,in_transactionItem.SpecificContent(&quot;ExtendMilestoneDueDateTo&quot;).ToString)]" Name="extendDueDateTo" />
              <Variable x:TypeArguments="x:String" Default="[in_transactionItem.SpecificContent(&quot;UserName&quot;).ToString]" Name="userName" />
            </Sequence.Variables>
            <ui:LogMessage DisplayName="Log Message - updating 'Checklist Management 1' tab" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Updating 'Checklist Management 1' page&quot;]" />
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;extendedDueDateTo value received from queue payload: &quot; + extendDueDateTo]" />
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="[&quot;numberOfMonthsFTE value received from queue payload: &quot; + numberOfMonthsFTE]" />
            <ui:Click DelayBefore="{x:Null}" ClickType="CLICK_SINGLE" DelayMS="2000" DisplayName="Click 'Checklist Management 1' tab" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl aaname='Checklist Management 1' /&gt;" WaitForReady="COMPLETE" />
              </ui:Click.Target>
            </ui:Click>
            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'Comments'" sap2010:WorkflowViewState.IdRef="GetValue_2">
              <ui:GetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl id='ptifrmtgtframe' tag='IFRAME' /&gt;&lt;webctrl tag='TEXTAREA' /&gt;" WaitForReady="COMPLETE" />
              </ui:GetValue.Target>
              <ui:GetValue.Value>
                <OutArgument x:TypeArguments="x:String">[commentsField]</OutArgument>
              </ui:GetValue.Value>
            </ui:GetValue>
            <Assign sap2010:Annotation.AnnotationText="Match on first line only that contains Case ID caseID. Case does not matter." DisplayName="Assign regular expressions" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[regularExpression]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">["^.+CASE\s*ID\s*" + in_caseID + "[^\n]*"]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Try and match RegEx to 'Comments'" sap2010:WorkflowViewState.IdRef="Assign_6">
              <Assign.To>
                <OutArgument x:TypeArguments="str:Match">[regExMatch]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="str:Match">[Regex.Match(commentsField.ToUpper, regularExpression)]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[regExMatch.Success]" DisplayName="If match is successful item has already been processed" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Sequence DisplayName="Item already processed" sap2010:WorkflowViewState.IdRef="Sequence_11">
                  <ui:LogMessage DisplayName="Log Message - already processed" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;Comments field indicates this case has already been processed&quot;]" />
                  <Throw DisplayName="Throw BRE" Exception="[new businessruleexception(&quot;Case ID: '&quot; + in_caseID + &quot;' with student ID: '&quot; + in_studentID + &quot;'. Comments field indicates this case has already been processed&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_3" />
                </Sequence>
              </If.Then>
            </If>
            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'Due Date'" sap2010:WorkflowViewState.IdRef="GetValue_4">
              <ui:GetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl id='PERSON_CHECKLST_DUE_DT' /&gt;" WaitForReady="COMPLETE" />
              </ui:GetValue.Target>
              <ui:GetValue.Value>
                <OutArgument x:TypeArguments="x:String">[dueDateCurrent]</OutArgument>
              </ui:GetValue.Value>
            </ui:GetValue>
            <If sap2010:Annotation.AnnotationText="If the course type that is contained within the queue content under 'Type' ends with the code '7500' then it is a Master of Philosophy and the updated Due Date comes from the queue item content.&#xA;All other courses the Due Date is updated depending on whether the study is full time or part time. " Condition="[studyType.EndsWith(&quot;7500&quot;)]" DisplayName="If study type equals MPhil then get 'Due Date' from queue content" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Then>
                <TryCatch DisplayName="Try and read 'Due Date' from queue content" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                  <TryCatch.Try>
                    <Sequence DisplayName="Update MPhil Due Date" sap2010:WorkflowViewState.IdRef="Sequence_17">
                      <ui:LogMessage DisplayName="Log Message - up date 'Due Date' for MPhil" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Updating 'Due Date' for MPhil&quot;]" />
                      <Assign DisplayName="Convert string to date" sap2010:WorkflowViewState.IdRef="Assign_16">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:DateTime">[dueDateNew]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(extendDueDateTo, "yyyy-MM-dd", Nothing)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Extend Due Date Exception" sap2010:WorkflowViewState.IdRef="Sequence_18">
                          <ui:LogMessage DisplayName="Log Message - invalid 'Extend Milestone Due Date'" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Error" Message="[&quot;Extend to due date: '&quot; + extendDueDateTo + &quot;' from queue content was not in format yyyy-MM-dd&quot;]" />
                          <Throw DisplayName="Throw BRE" Exception="[new businessruleexception(&quot;Case ID: '&quot; + in_caseID + &quot;' with student ID: '&quot; + in_studentID + &quot;'. Has an invalid extend to due date: '&quot; + extendDueDateTo + &quot;' for MPhil study type&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_6" />
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Study type is NOT MPhil so add fixed number of months" sap2010:WorkflowViewState.IdRef="Sequence_22">
                  <Assign DisplayName="Convert string to date" sap2010:WorkflowViewState.IdRef="Assign_17">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:DateTime">[dueDateNew]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(dueDateCurrent, "dd/MM/yyyy", Nothing)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[studyType.Replace(&quot; &quot;, &quot;&quot;).ToUpper.Substring(0,9)]" sap2010:WorkflowViewState.IdRef="Switch`1_3">
                    <Switch.Default>
                      <Sequence DisplayName="Cannot match on study type" sap2010:WorkflowViewState.IdRef="Sequence_19">
                        <ui:LogMessage DisplayName="Log Message - invalid study type" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Error" Message="[&quot;Cound not match on study type: '&quot; + studyType + &quot;'&quot;]" />
                        <Throw DisplayName="Throw BRE" Exception="[new businessruleexception(&quot;Case ID: '&quot; + in_caseID + &quot;' with student ID: '&quot; + in_studentID + &quot;'. Has an invalid study type: '&quot; + studyType + &quot;'&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_7" />
                      </Sequence>
                    </Switch.Default>
                    <Sequence x:Key="FULL-TIME" DisplayName="Update full time Due Date" sap2010:WorkflowViewState.IdRef="Sequence_20">
                      <ui:LogMessage DisplayName="Log Message - up date 'Due Date' for Full-Time Phd" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Updating 'Due Date' for Full-Time Phd&quot;]" />
                      <Assign DisplayName="Added months to 'Due Date' (full time)" sap2010:WorkflowViewState.IdRef="Assign_18">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:DateTime">[dueDateNew]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:DateTime">[dueDateNew.AddMonths(in_fullTimeExtension)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence x:Key="PART-TIME" DisplayName="Update part time due date" sap2010:WorkflowViewState.IdRef="Sequence_21">
                      <ui:LogMessage DisplayName="Log Message - up date 'Due Date' for Part-Time Phd" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Updating 'Due Date' for Part-Time Phd&quot;]" />
                      <Assign DisplayName="Added months to 'Due Date' (part time)" sap2010:WorkflowViewState.IdRef="Assign_19">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:DateTime">[dueDateNew]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:DateTime">[dueDateNew.AddMonths(in_partTimeExtension)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </Switch>
                </Sequence>
              </If.Else>
            </If>
            <ui:LogMessage DisplayName="Log Message - Updating 'Due Date'" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Updating 'Due Date' from: '&quot; + dueDateCurrent + &quot;' to: '&quot; + dueDateNew.ToString(&quot;dd/MM/yyyy&quot;) + &quot;'&quot;]" />
            <ui:SetValue ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Update 'Due Date'" sap2010:WorkflowViewState.IdRef="SetValue_4" Text="[dueDateNew.ToString(&quot;dd/MM/yyyy&quot;)]">
              <ui:SetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl id='PERSON_CHECKLST_DUE_DT' /&gt;" WaitForReady="COMPLETE" />
              </ui:SetValue.Target>
            </ui:SetValue>
            <Assign DisplayName="Assign'Due Date' to out argument" sap2010:WorkflowViewState.IdRef="Assign_20">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[out_dueDateNew]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[dueDateNew.ToString("dd/MM/yyyy")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Get current date" sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="s:DateTime">[currentDate]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:DateTime">[Now]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign - new 'Comments' line" sap2010:WorkflowViewState.IdRef="Assign_21">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[commentsFieldNewline]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[currentDate.ToString("dd/MM/yyyy") + " " + userName + "/GS: " + mileStone + " extension approved WP, new due date " + dueDateNew.ToString("dd/MM/yyyy") + ", at " + numberOfMonthsFTE + " months FTE, [RPA] Case ID " + in_caseID]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message - new 'Comments' line" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Adding new line to 'Comments' field: '&quot; + commentsFieldNewline + &quot;'&quot;]" />
            <ui:SetValue ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Update 'Comments'" sap2010:WorkflowViewState.IdRef="SetValue_5" Text="[commentsFieldNewline + vbNewLine + commentsField]">
              <ui:SetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl id='ptifrmtgtframe' tag='IFRAME' /&gt;&lt;webctrl tag='TEXTAREA' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:SetValue.Target>
            </ui:SetValue>
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
    </ui:BrowserScope>
    <sads:DebugSymbol.Symbol>d3JDOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcVVFHU19FT01fcHJvY19TSW5ldER1ZURhdGVVcGRhdGVfMS4wXFNJLW5ldFxVcGRhdGVDaGVja2xpc3RJTWFuYWdlbWVudF8xLnhhbWxeUQOVAg4CAQFSBZMCFwIBAlLtAVK0AgMBgAFYC5ACFgIBA2A8YH0CAQlhPGF/AgEIYjxi6AECAQdjPGOCAQIBBmU8ZfYBAgEFZjxmgQECAQRoDWjcAQIBfmkNadUBAgF7ag1q1wECAXhrDXkYAgF1eg2BARsCAXGCAQ2JARYCAWyKAQ2RARYCAWiSAQ2ZARICAWCaAQ2hARsCAVyiAQ3rARICASvsAQ3sAaQCAgEn7QEN8QEbAgEj8gEN+QEWAgEe+gENgQIWAgEaggINiQIWAgEQigINigLxAQIBDYsCDY8CGwIBCmijAWjZAQIBf2l7adIBAgF8antq1AECAXl3Z3eaAQIBd2tPa1UCAXZ/OX9IAgFyfGd8uwECAXSHATiHAWICAW+EATmEAUwCAW2PATmPAXACAWuMATqMAUYCAWmSARuSATECAWGUARGXARwCAWOfATmfAUkCAV2cAWecAZYBAgFfogHrAqIBkwMCASykARG/ARwCAU7CARHpARwCAS7sAZEB7AGhAgIBKO0BtAHtAeMBAgEk7wFn7wGWAQIBJvcBOPcBWwIBIfQBOfQBSQIBH/8BOv8BPwIBHfwBO/wBSAIBG4cCOIcCmwICAROEAjmEAk8CARGKApEBigLuAQIBDosCtAGLAugBAgELjQJnjQK7AQIBDJUBE5UB5QECAWaWAROWAasCAgFkpgEVsAEgAgFVuAEZuwEkAgFPwwETygEcAgFKywET6AEcAgEvlQGVAZUB4gECAWeWATyWAf4BAgFlpwEXpwHUAQIBWqgBF68BIAIBVrkBG7kBqgICAVK6ARu6AdECAgFQyAFAyAF8AgFNxQFBxQFNAgFLywFWywGfAQIBMNIBFdwBIAIBQd0BFecBIAIBOM0BF9ABIgIBMqcBpAGnAdEBAgFbrQFErQGBAQIBWaoBRaoBUQIBV7kBsAG5AacCAgFTugFEugGkAgIBUdMBF9MB5AECAUjUARfbASACAULeARfeAeQBAgE/3wEX5gEgAgE5zgEZzgHsAQIBNc8BGc8BrAICATPTAawB0wHhAQIBSdkBRNkBcAIBRdYBRdYBUQIBQ94BrAHeAeEBAgFA5AFE5AFwAgE84QFF4QFRAgE6zgGdAc4B6QECATbPAULPAf8BAgE0</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_15" sap:VirtualizedContainerService.HintSize="942,91" />
      <sap2010:ViewStateData Id="LogMessage_18" sap:VirtualizedContainerService.HintSize="942,91" />
      <sap2010:ViewStateData Id="LogMessage_19" sap:VirtualizedContainerService.HintSize="942,91" />
      <sap2010:ViewStateData Id="Click_4" sap:VirtualizedContainerService.HintSize="942,68" />
      <sap2010:ViewStateData Id="GetValue_2" sap:VirtualizedContainerService.HintSize="942,68" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="942,102">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="942,60" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Throw_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="942,424" />
      <sap2010:ViewStateData Id="GetValue_4" sap:VirtualizedContainerService.HintSize="942,68" />
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Throw_6" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,346">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="418,971" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="477,60" />
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Throw_7" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_13" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_14" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Switch`1_3" sap:VirtualizedContainerService.HintSize="477,1202" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="499,1426">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="942,1630">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_16" sap:VirtualizedContainerService.HintSize="942,91" />
      <sap2010:ViewStateData Id="SetValue_4" sap:VirtualizedContainerService.HintSize="942,96" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="942,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="942,60" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="942,60" />
      <sap2010:ViewStateData Id="LogMessage_17" sap:VirtualizedContainerService.HintSize="942,91" />
      <sap2010:ViewStateData Id="SetValue_5" sap:VirtualizedContainerService.HintSize="942,96" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="964,4011">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BrowserScope_1" sap:VirtualizedContainerService.HintSize="978,4119" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="1000,4435">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UpdateDueDate_1" sap:VirtualizedContainerService.HintSize="1040,4515">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>