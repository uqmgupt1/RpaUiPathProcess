<Activity mc:Ignorable="sap sap2010 sads" x:Class="SendJobReport"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="in_SystemErrorMsg" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>SendJobReport_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Security.Principal</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: Generates a list of all items processed, will send of an email or can can save a transaction log to a folder. If the folder is dropped straight into the project directory then there should be minimal changes required.&#xA;&#xA;NOTE: When setting a transaction status, the item in orchestrator is updated but not the one used by the robot. To use this reporting the transaction must be updated upon setting the transaction status. Example provided below.&#xA;&#xA;Required Inputs:&#xA;in_TransactionData (List&lt;QueueItem&gt;): List of transaction items processed during the job, to set up this declare a New List(Of QueueItem) in your main workflow and add each transaction to the list after setting the status.&#xA;&#xA;Optional Arguments:&#xA;All optional arguments are assigned to the specific variable if it's assigned, or they will take the value specified in the configuration file if its specified is a key, or there will be a default value to handle the argument being ommitted, all values are strings.&#xA;in_Argument (String)&#xA;in_Config(&quot;Argument&quot;).ToString&#xA;&quot;Argument&quot;&#xA;&#xA;in_Config (Dictionary&lt;String, Object&gt;): Configuration file where all settings can be declared.&#xA;&#xA;in_ProcessName (String): The name of the process\robot, will use the robot machine\username if not provided.&#xA;in_HtmlTemplate (String): Path to email template.&#xA;in_HtmlLogo (String): Path to robot logo.&#xA;in_EmailCredentials (String): Credential asset in orchestrator to use in exchange.&#xA;in_EmailRecipients (String): String asset in orchestrator with a list of semicolon separated email addresses. (eg. &quot;test@email.com;email@test.com&quot;)&#xA;in_LogWorkbook (String): Path to a transaction log workbook.&#xA;in_LogSheet (String): Name of the transaction log worksheet, will use in_ProcessName if not provided.&#xA;&#xA;Outputs: NA&#xA;&#xA;Pre Condition:&#xA;TransactionLog must be initialised.&#xA;RobotSupport (TBC) asset must exist in orchestrator.&#xA;&#xA;Post Condition:&#xA;Some notice sent to to the team." DisplayName="SendJobReport" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="templateHTML" />
    </Sequence.Variables>
    <TryCatch DisplayName="Try Catch - Send Mail" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <TryCatch.Try>
        <Sequence DisplayName="Try - SendMail" sap2010:WorkflowViewState.IdRef="Sequence_65">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="subject" />
            <Variable x:TypeArguments="x:String" Name="senderName" />
            <Variable x:TypeArguments="s:String[]" Name="files" />
            <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="attachments" />
            <Variable x:TypeArguments="x:Boolean" Default="True" Name="sending" />
            <Variable x:TypeArguments="x:Int32" Default="60000" Name="timeout" />
          </Sequence.Variables>
          <If Condition="[Directory.Exists(&quot;Exceptions_Screenshots&quot;)]" DisplayName="If exceptions folder exists" sap2010:WorkflowViewState.IdRef="If_51">
            <If.Then>
              <Sequence DisplayName="Get attachment screenshots" sap2010:WorkflowViewState.IdRef="Sequence_60">
                <Assign DisplayName="Assign exception files" sap2010:WorkflowViewState.IdRef="Assign_117">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:String[]">[files]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("Exceptions_Screenshots")]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Info" Message="[&quot;Found &quot; &amp; files.Length &amp; &quot; in Exceptions_Screenshots folder&quot;]" />
                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Exception Screenshot" sap2010:WorkflowViewState.IdRef="ForEach`1_14" Values="[files]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:String">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                      </ActivityAction.Argument>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_59">
                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Trace" Message="[&quot;Attaching &quot; + Path.GetFileName(item)]" />
                        <AddToCollection x:TypeArguments="x:String" Collection="[attachments]" DisplayName="Add Screenshot To Attachments" sap2010:WorkflowViewState.IdRef="AddToCollection`1_13" Item="[Path.GetFullPath(item)]" />
                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Trace" Message="[&quot;Attachments size is &quot; &amp; attachments.Sum(Function(a) New FileInfo(a).Length)]" />
                        <If Condition="[attachments.Sum(Function(a) New FileInfo(a).Length) &gt; 25000000]" DisplayName="If file length over limit" sap2010:WorkflowViewState.IdRef="If_50">
                          <If.Then>
                            <Sequence DisplayName="Reduce size below limit and exit" sap2010:WorkflowViewState.IdRef="Sequence_58">
                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_35" Level="Info" Message="[&quot;Removing last attached screenshot due to email attachment size constraint&quot;]" />
                              <RemoveFromCollection x:TypeArguments="x:String" Collection="[attachments]" DisplayName="Remove Last Attachment" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_3" Item="[attachments.Last]" />
                              <ui:Break sap2010:WorkflowViewState.IdRef="Break_3" />
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </Sequence>
            </If.Then>
            <If.Else>
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Info" Message="[&quot;Couldn't find Exceptions_Screenshots folder&quot;]" />
            </If.Else>
          </If>
          <If Condition="[in_Config(&quot;OperatingEnvironment&quot;) = &quot;PROD&quot;]" DisplayName="Check if operating environment is PRODUCTION " sap2010:WorkflowViewState.IdRef="If_53">
            <If.Then>
              <Sequence DisplayName="PROD -  Subject and Sender " sap2010:WorkflowViewState.IdRef="Sequence_61">
                <Assign DisplayName="Subject for prod environment" sap2010:WorkflowViewState.IdRef="Assign_118">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[subject]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[in_Config("PROD_Subject")]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Sender name for prod" sap2010:WorkflowViewState.IdRef="Assign_119">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[senderName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[in_Config("EmailSenderDisplayName")]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="NonPROD - Subject and Sender " sap2010:WorkflowViewState.IdRef="Sequence_62">
                <Assign DisplayName="Subject for non prod environment" sap2010:WorkflowViewState.IdRef="Assign_120">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[subject]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[String.Format(in_Config("NonPROD_Subject"), StrConv(in_Config("OperatingEnvironment"),VbStrConv.ProperCase))]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Sender name for non prod" sap2010:WorkflowViewState.IdRef="Assign_121">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[senderName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[String.Format(in_Config("EmailSenderDisplayName_NP"), StrConv(in_Config("OperatingEnvironment"),VbStrConv.ProperCase))]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="[&quot;Sending email to &quot; + in_Config(&quot;exceptionEmailAddress_&quot;+ in_Config(&quot;OperatingEnvironment&quot;))]" />
          <ui:ReadTextFile Content="[templateHTML]" DisplayName="Read Text File" FileName="Data\email_template.html" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
          <Assign sap2010:WorkflowViewState.IdRef="Assign_122">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[templateHTML]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[templateHTML.Replace("{messageContent}", in_SystemErrorMsg)]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[attachments.Count &gt; 0]" DisplayName="If screenshot available" sap2010:WorkflowViewState.IdRef="If_54">
            <If.Then>
              <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[attachments]" Body="[templateHTML]" DisplayName="Send SMTP Mail Message - Attachment" EnableSSL="True" From="[in_Config(&quot;SenderEmailID&quot;)]" sap2010:WorkflowViewState.IdRef="SendMail_2" IsBodyHtml="True" Name="[senderName]" Port="[cint(in_Config(&quot;UQ_SMTP_PORT&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;UQ_SMTP_SERVER&quot;)]" Subject="[subject]" To="[in_Config(&quot;exceptionEmailAddress_&quot;+ in_Config(&quot;OperatingEnvironment&quot;))]">
                <ui:SendMail.Files>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                </ui:SendMail.Files>
              </ui:SendMail>
            </If.Then>
            <If.Else>
              <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" TimeoutMS="{x:Null}" Body="[templateHTML]" DisplayName="Send SMTP Mail Message - No Attachment" EnableSSL="True" From="[in_Config(&quot;SenderEmailID&quot;)]" sap2010:WorkflowViewState.IdRef="SendMail_1" IsBodyHtml="True" Name="[senderName]" Port="[cint(in_Config(&quot;UQ_SMTP_PORT&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;UQ_SMTP_SERVER&quot;)]" Subject="[subject]" To="[in_Config(&quot;exceptionEmailAddress_&quot;+ in_Config(&quot;OperatingEnvironment&quot;))]">
                <ui:SendMail.Files>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                </ui:SendMail.Files>
              </ui:SendMail>
            </If.Else>
          </If>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Info" Message="[&quot;Email successfully sent!&quot;]" />
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Delete from local drive " sap2010:WorkflowViewState.IdRef="ForEach`1_15" Values="[attachments]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                </ActivityAction.Argument>
                <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete exception screenshots" sap2010:WorkflowViewState.IdRef="Delete_5" Path="[item]" />
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_66">
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Error" Message="[&quot;Failed to send email!&quot;]" />
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_34" Level="Error" Message="[&quot;Error message: &quot; + exception.Message]" />
              <Throw DisplayName="Throw BRE" Exception="[new BusinessRuleException(&quot;Failed to send email. Exception: '&quot; + exception.Message + &quot;'&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <sads:DebugSymbol.Symbol>d11DOlxVc2Vyc1x1cW1ndXB0MVxEb2N1bWVudHNcVWlQYXRoXFJwYVVpUGF0aFByb2Nlc3NcUHJvY2Vzc2VzXElBQV9WZXZvQ2hlY2tcRW5kSm9iUmVwb3J0LnhhbWxbTAPlAQ4CAQFQBeMBEAIBAlIJ0wEUAgEL2wEN3wEYAgEDV0RXWwIBDlg7WEECAQ1ZOVlAAgEMWwuDARACAWGEAQutARACAUquAQuuAfoBAgFGrwELrwGpAQIBQrABC7cBFAIBPLgBC8cBEAIBF8gBC8gBpAECARXJAQvSARgCAQ/cAQ/cAaYBAgEJ3QEP3QG0AQIBBt4BD94B1gECAQRbGVtRAgFiXQ9+GgIBZYEBD4EBuwECAWOEARmEAVsCAUuGAQ+XARoCAVaaAQ+rARoCAU2uAXmuAfcBAgFHrwFbrwF1AgFFrwEkrwE0AgFDtQE2tQFzAgE/sgE3sgFFAgE9uAEZuAE1AgEYugEPvgEdAgEqwQEPxQEdAgEayAF5yAGhAQIBFskBpwHJAbYBAgETzwERzwGdAQIBENwBftwBowECAQrdAX7dAbEBAgEH3gE43gGpAQIBBV4RZRoCAX9mEWbfAQIBfGcRfR4CAWaBAX2BAbgBAgFkhwERjgEaAgFcjwERlgEaAgFXmwERogEaAgFSowERqgEaAgFOugGdBLoB+wQCATm6AaABugGvAQIBN7oBtQG6AcUBAgE1ugGOBLoBmQQCATO6AY4CugG2AgIBMboBjwO6AbwDAgEvugHcA7oBhQQCAS26AfsCugGJAwIBK8EB+gPBAdgEAgEnwQGPAcEBnwECASXBAesDwQH2AwIBI8EB6wHBAZMCAgEhwQHsAsEBmQMCAR/BAbkDwQHiAwIBHcEB2ALBAeYCAgEbzwGSAc8BmgECARFjPmNsAwGCAWA/YEYDAYABZn9m3AECAX1nsgFnuwECAXptF3oiAgFnjAE8jAFXAgFfiQE9iQFGAgFdlAE8lAFhAgFakQE9kQFJAgFYoAE8oAGqAQIBVZ0BPZ0BRgIBU6gBPKgBtAECAVGlAT2lAUkCAU9uGW6+AQIBeG8Zb+UBAgF0cBlw6QECAXJxGXkeAgFobogBbrsBAgF5b1BvXwIBdm/IAW/iAQIBdXCIAXDmAQIBc3EncWwCAWlzHXcoAgFqdB906QECAXB1H3XnAQIBbHYfdlUCAWt0jQF05gECAXF1W3VqAgFuddABdeQBAgFt</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_117" sap:VirtualizedContainerService.HintSize="502,60" />
      <sap2010:ViewStateData Id="LogMessage_26" sap:VirtualizedContainerService.HintSize="502,91" />
      <sap2010:ViewStateData Id="LogMessage_27" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="AddToCollection`1_13" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="LogMessage_28" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="LogMessage_35" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="RemoveFromCollection`1_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Break_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_58" sap:VirtualizedContainerService.HintSize="336,339">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_50" sap:VirtualizedContainerService.HintSize="464,487" />
      <sap2010:ViewStateData Id="Sequence_59" sap:VirtualizedContainerService.HintSize="486,935">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_14" sap:VirtualizedContainerService.HintSize="502,1069">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_60" sap:VirtualizedContainerService.HintSize="524,1424">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_29" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_51" sap:VirtualizedContainerService.HintSize="863,1572">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_118" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_119" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_61" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_120" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_121" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_62" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_53" sap:VirtualizedContainerService.HintSize="863,432">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_30" sap:VirtualizedContainerService.HintSize="863,91" />
      <sap2010:ViewStateData Id="ReadTextFile_1" sap:VirtualizedContainerService.HintSize="863,59" />
      <sap2010:ViewStateData Id="Assign_122" sap:VirtualizedContainerService.HintSize="863,60" />
      <sap2010:ViewStateData Id="SendMail_2" sap:VirtualizedContainerService.HintSize="314,145" />
      <sap2010:ViewStateData Id="SendMail_1" sap:VirtualizedContainerService.HintSize="314,145" />
      <sap2010:ViewStateData Id="If_54" sap:VirtualizedContainerService.HintSize="863,293">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_32" sap:VirtualizedContainerService.HintSize="863,91" />
      <sap2010:ViewStateData Id="Delete_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ForEach`1_15" sap:VirtualizedContainerService.HintSize="863,194" />
      <sap2010:ViewStateData Id="Sequence_65" sap:VirtualizedContainerService.HintSize="885,3196">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_33" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_34" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_66" sap:VirtualizedContainerService.HintSize="336,408">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="889,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="903,3423">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="925,4084">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendJobReport_1" sap:VirtualizedContainerService.HintSize="965,4164" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>