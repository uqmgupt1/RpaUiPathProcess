<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetVevoCheckDetails"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_caseReference" Type="InArgument(x:String)" />
    <x:Property Name="out_FamilyName" Type="OutArgument(x:String)" />
    <x:Property Name="out_PassportNumber" Type="OutArgument(x:String)" />
    <x:Property Name="out_DateOfBirth" Type="OutArgument(x:String)" />
    <x:Property Name="out_CountryOfDocument" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetVevoCheckDetails_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: This is the first method called in Process transaction state. This will open case reference obtained from TranscationItem.Reference and validate if all required Vevo details avaiable to perform serach. If not, this will throw BusinessRuleException depending on corresponding label/value missing  &#xA;&#xA;&#xA;Inputs: &#xA;in_CaseReference (String): First Case reference from CRM&#xA;&#xA;Outputs: &#xA;out_FamilyName (String) : Value of family name obtained from ticket details.&#xA;out_PassportNumber (String) : Value of passport number obtained from ticket details.&#xA;out_DateOfBirth (String) : Value of date of birth obtained from ticket details.&#xA;out_CountryOfDocument (String) : Value of ountry of document obtained from ticket details.&#xA;&#xA;Pre Condition:&#xA;Robot should be logged in (CRM) and default dashboard should be visible  &#xA;&#xA;Post Condition:&#xA;NA" DisplayName="GetVevoCheckInputData" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="VevoInputData">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="ui:BusinessRuleException" Name="errorCode" />
      <Variable x:TypeArguments="x:String" Name="textData" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="regexOutput" />
      <Variable x:TypeArguments="x:Boolean" Name="isDoBValid" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Start GetVevoCheckInputData.xaml&quot;]" />
    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser Oracle CRM" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="31ad616ce4dc336c9ca135f59d56735c" Selector="&lt;html app='chrome.exe' title='Oracle ® Service Cloud*' /&gt;">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Extract Vevo Check details" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Default="False" Name="isFamilyNameAvailable" />
              <Variable x:TypeArguments="x:Boolean" Default="False" Name="isDoBAvailable" />
              <Variable x:TypeArguments="x:Boolean" Default="False" Name="isPassportNoAvailable" />
              <Variable x:TypeArguments="x:Boolean" Default="False" Name="isCountryAvailable" />
              <Variable x:TypeArguments="x:String" Name="caseRefInticketDetails" />
              <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="caseUpdateList" />
            </Sequence.Variables>
            <ui:RetryScope DisplayName="Retry Scope" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:05">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_23">
                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_DOUBLE" DisplayName="Open Case reference" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                      <ui:Click.CursorPosition>
                        <ui:CursorPosition Position="Center">
                          <ui:CursorPosition.OffsetX>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetX>
                          <ui:CursorPosition.OffsetY>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetY>
                        </ui:CursorPosition>
                      </ui:Click.CursorPosition>
                      <ui:Click.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[&quot;&lt;html app='chrome.exe' title='Oracle ® Service Cloud*' /&gt;&lt;webctrl tag='SPAN' aaname='&quot; + in_caseReference + &quot;' class='oj-datagrid-cell-text oj-flex' /&gt;&quot;]" WaitForReady="COMPLETE" />
                      </ui:Click.Target>
                    </ui:Click>
                  </Sequence>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists - Enquiry Information" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b42418585bc7d71645874488b748bce9" Selector="&lt;webctrl tag='LABEL' aaname='Enquiry Information' /&gt;" TimeoutMS="90000" WaitForReady="INTERACTIVE" />
                    </ui:UiElementExists.Target>
                  </ui:UiElementExists>
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <ui:Click ClickType="CLICK_SINGLE" DelayBefore="3000" DelayMS="3000" DisplayName="Click  Refresh " sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="62630ec792d8e1309d7f80291e09bb66" Selector="&lt;webctrl tag='BUTTON' aaname='Refresh*' /&gt;" WaitForReady="COMPLETE" />
              </ui:Click.Target>
            </ui:Click>
            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Case ref from ticket details " sap2010:WorkflowViewState.IdRef="GetValue_1">
              <ui:GetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="a7c3c04a7acced49212ae0f212e30cff" Selector="&lt;webctrl tag='INPUT' aaname='Reference*' type='text' /&gt;" WaitForReady="COMPLETE" />
              </ui:GetValue.Target>
              <ui:GetValue.Value>
                <OutArgument x:TypeArguments="x:String">[caseRefInticketDetails]</OutArgument>
              </ui:GetValue.Value>
            </ui:GetValue>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Trace" Message="[&quot;Case Reference  &quot; +caseRefInticketDetails]" />
            <If Condition="[caseRefInticketDetails.Trim.Equals(in_caseReference)]" DisplayName="Check if transaction reference and open ticket is same" sap2010:WorkflowViewState.IdRef="If_12">
              <If.Then>
                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Trace" Message="[&quot;Orchestrator transaction reference and CRM case reference is same&quot;]" />
              </If.Then>
              <If.Else>
                <Throw DisplayName="Throw ApplicationException" Exception="[new ApplicationException (&quot;Orchestrator transaction reference is :&quot;+in_caseReference +vbNewLine+ &quot;Oracle CRM case reference is :&quot; +caseRefInticketDetails +vbNewLine +&quot;Both are different, throwing application exception&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_3" />
              </If.Else>
            </If>
            <ui:FindChildren Children="[caseUpdateList]" DisplayName="Find items in thread list " Filter="&lt;webctrl /&gt;" sap2010:WorkflowViewState.IdRef="FindChildren_1" Scope="FIND_CHILDREN">
              <ui:FindChildren.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="d24084a9fce2633e8c03ffc5bd344f32" Selector="&lt;html app='chrome.exe' title='Oracle ® Service Cloud*' /&gt;&lt;webctrl tag='UL' parentclass='threadsList' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:FindChildren.Target>
            </ui:FindChildren>
            <Sequence DisplayName="ThreadList for each entry" sap2010:WorkflowViewState.IdRef="Sequence_29">
              <ui:ForEach x:TypeArguments="ui:UiElement" CurrentIndex="{x:Null}" DisplayName="For Each in thread list" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[caseUpdateList]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="ui:UiElement">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:UiElement" Name="item" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Check if thread contains Vevo details" sap2010:WorkflowViewState.IdRef="Sequence_27">
                      <ui:ElementScope UiElement="{x:Null}" DisplayName="Element Scope - to single update  (one entry in thread list)" sap2010:WorkflowViewState.IdRef="ElementScope_1">
                        <ui:ElementScope.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Check Vevo details " sap2010:WorkflowViewState.IdRef="Sequence_26">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="inlineDetails" />
                              </Sequence.Variables>
                              <Assign DisplayName="Assign text data to blank" sap2010:WorkflowViewState.IdRef="Assign_45">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[textData]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:GetFullText DisplayName="Get text from case details section" sap2010:WorkflowViewState.IdRef="GetFullText_2" IgnoreHidden="False">
                                <ui:GetFullText.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                </ui:GetFullText.Target>
                                <ui:GetFullText.Text>
                                  <OutArgument x:TypeArguments="x:String">[textData]</OutArgument>
                                </ui:GetFullText.Text>
                              </ui:GetFullText>
                              <If Condition="[textData.Contains(&quot;Date of Birth&quot;) OR textData.Contains(&quot;Family Name&quot;) OR textData.Contains(&quot;Passport Number&quot;) OR textData.Contains(&quot;Country of Document:&quot;)]" DisplayName="Check if Vevo Input details available" sap2010:WorkflowViewState.IdRef="If_29">
                                <If.Then>
                                  <Sequence DisplayName="Get textData string to array " sap2010:WorkflowViewState.IdRef="Sequence_25">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="ui:GenericValue" Name="isFamily" />
                                      <Variable x:TypeArguments="x:String" Name="isP" />
                                    </Sequence.Variables>
                                    <Assign DisplayName="Replace &amp;nbsp to space" sap2010:WorkflowViewState.IdRef="Assign_96">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[textData]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(textData, ChrW(160)," ")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="ConvertTextData String to VevoInputArray" sap2010:WorkflowViewState.IdRef="Assign_50">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[VevoInputData]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(textData, “[^a-zA-Z0-9\/\:\-\.\'\(\) ]”, “”)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:Break sap2010:WorkflowViewState.IdRef="Break_6" />
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ui:ElementScope.Body>
                        <ui:ElementScope.Target>
                          <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[item]" WaitForReady="INTERACTIVE" />
                        </ui:ElementScope.Target>
                      </ui:ElementScope>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
    </ui:BrowserScope>
    <If Condition="[VevoInputData.Trim.Length &gt; 0]" DisplayName="Check if Vevo input details is not empty" sap2010:WorkflowViewState.IdRef="If_44">
      <If.Then>
        <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Invoke code to validate if all input labels  are available or not? If any of the lables is missing, throw business rule exception for corresponding label. " Code="If Not text_data_input.Contains(&quot;Family Name:&quot;)  Then &#xA;     errorCode_label= New BusinessRuleException(&quot;FN_Label_Missing&quot;)&#xA;ElseIf Not text_data_input.Contains(&quot;Date of Birth:&quot;)  Then&#xA;     errorCode_label= New BusinessRuleException(&quot;DoB_Label_Missing&quot;)&#xA; ElseIf Not text_data_input.Contains(&quot;Passport Number:&quot;)  Then&#xA;     errorCode_label= New BusinessRuleException(&quot;PN_Label_Missing&quot;)&#xA;ElseIf Not text_data_input.Contains(&quot;Country of Document:&quot;)  Then&#xA;     errorCode_label= New BusinessRuleException(&quot;CoD_Label_Missing&quot;)&#xA;End If&#xA;" DisplayName="Check if all labels are present" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
          <ui:InvokeCode.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="text_data_input">[VevoInputData]</InArgument>
            <OutArgument x:TypeArguments="ui:BusinessRuleException" x:Key="errorCode_label">[errorCode]</OutArgument>
          </ui:InvokeCode.Arguments>
        </ui:InvokeCode>
      </If.Then>
      <If.Else>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_90">
          <Assign.To>
            <OutArgument x:TypeArguments="ui:BusinessRuleException">[errorCode]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException("FN_Label_Missing")]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <If Condition="[errorCode isNot Nothing]" DisplayName="BRE if any label missing" sap2010:WorkflowViewState.IdRef="If_28">
      <If.Then>
        <Throw DisplayName="Throw BusinessRuleException" Exception="[new BusinessRuleException(errorCode.Message)]" sap2010:WorkflowViewState.IdRef="Throw_5" />
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Trace" Message="[&quot;All input labels are available&quot;]" />
      </If.Else>
    </If>
    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This method extract value of family name, date of birth, passport number and country from ticket details using regular expression. If any of the value is missing, it'll throw business rule exception accordingly" Code="Dim expr As String = &quot;Family Name:(.*)Date of Birth:(.*)Passport Number:(.*)Country of Document:(.*)&quot;&#xD;&#xA;Dim mc As MatchCollection = Regex.Matches(vevoInput, expr)&#xD;&#xA;If mc.Count &gt; 0 Then&#xD;&#xA;	familyName = mc(0).Groups(1).Value.Trim&#xD;&#xA;	dob = mc(0).Groups(2).Value.Trim&#xD;&#xA;	passportNumber = mc(0).Groups(3).Value.Trim&#xD;&#xA;	country = mc(0).Groups(4).Value.Trim.ToUpper&#xD;&#xA;	&#xD;&#xA;	If familyName IsNot Nothing AndAlso familyName.Length &gt; 0 Then&#xD;&#xA; 		familyName = System.Text.RegularExpressions.Regex.Replace(familyName, &quot;[^a-zA-Z\-\'\. ]&quot;, &quot;&quot;)&#xD;&#xA;	Else&#xD;&#xA; 		errorCode_Value=New BusinessRuleException(&quot;FN_Value_Missing&quot;)&#xD;&#xA;	End If&#xD;&#xA;&#xD;&#xA;	If dob IsNot Nothing AndAlso dob.Length &gt; 0 Then&#xD;&#xA; 		dob = System.Text.RegularExpressions.Regex.Replace(dob, &quot;[^\d\/]&quot;, &quot;&quot;)&#xD;&#xA;	ElseIf errorCode_Value Is Nothing&#xD;&#xA; 		errorCode_Value=New BusinessRuleException(&quot;DoB_Value_Missing&quot;)&#xD;&#xA;	End If&#xD;&#xA;&#xD;&#xA;	If passportNumber IsNot Nothing AndAlso passportNumber.Length &gt; 0 Then&#xD;&#xA; 		passportNumber = System.Text.RegularExpressions.Regex.Replace(passportNumber, &quot;[^a-zA-Z0-9]&quot;, &quot;&quot;)&#xD;&#xA;	ElseIf errorCode_Value Is Nothing&#xD;&#xA; 		errorCode_Value=New BusinessRuleException(&quot;PN_Value_Missing&quot;)&#xD;&#xA;	End If&#xD;&#xA;&#xD;&#xA;	If country IsNot Nothing AndAlso country.Length &gt; 0 Then&#xD;&#xA; 		country = System.Text.RegularExpressions.Regex.Replace(country, &quot;[^a-zA-Z0-9\-\.\'\(\) ]&quot;, &quot;&quot;)&#xD;&#xA;	ElseIf errorCode_Value Is Nothing&#xD;&#xA; 		errorCode_Value=New BusinessRuleException(&quot;CoD_Value_Missing&quot;)&#xD;&#xA;	End If&#xD;&#xA;Else&#xD;&#xA;	errorCode_Value=New BusinessRuleException(&quot;RegEx_Error&quot;)&#xD;&#xA;End If&#xD;&#xA;" DisplayName="Extract Vevo input details" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="vevoInput">[VevoInputData]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="familyName">[out_FamilyName]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="passportNumber">[out_PassportNumber]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="country">[out_CountryOfDocument]</OutArgument>
        <OutArgument x:TypeArguments="ui:BusinessRuleException" x:Key="errorCode_Value">[errorCode]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="dob">[out_DateOfBirth]</OutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:IsMatch DisplayName="Validate Date of Birth format" sap2010:WorkflowViewState.IdRef="IsMatch_4" Input="[out_DateOfBirth]" Pattern="^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$" RegexOption="IgnoreCase, Compiled" Result="[isDoBValid]" />
    <If Condition="[isDoBValid AndAlso errorCode is nothing]" DisplayName="Check if DoB format is as expected" sap2010:WorkflowViewState.IdRef="If_46">
      <If.Then>
        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Trace" Message="[&quot;Date of Birth format is as expected, Case Ref : &quot; +in_caseReference]" />
      </If.Then>
      <If.Else>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_97">
          <Assign.To>
            <OutArgument x:TypeArguments="ui:BusinessRuleException">[errorCode]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException("DoB_IncorrectFormat")]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <If Condition="[errorCode isNot Nothing]" DisplayName="BRE if any value is missing" sap2010:WorkflowViewState.IdRef="If_45">
      <If.Then>
        <Throw DisplayName="Throw BusinessRuleException" Exception="[new BusinessRuleException(errorCode.Message)]" sap2010:WorkflowViewState.IdRef="Throw_6" />
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;End GetVevoCheckInputData.xaml for Case Ref : &quot; +in_caseReference]" />
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>d2pDOlxVc2Vyc1x1cW1ndXB0MVxEb2N1bWVudHNcVWlQYXRoXFJwYVVpUGF0aFByb2Nlc3NcUHJvY2Vzc2VzXElBQV9WZXZvQ2hlY2tcQ1JNXEdldFZldm9DaGVja0lucHV0RGF0YS54YW1sY00DvAIOAgEBUQtROgIBAlkFWaUBAwGAAVoF/AEXAgE4/QEFkAIKAgEskQIFmAIKAgEmmQIFogIVAgEZowIFowKEAgIBE6QCBbICCgIBCrMCBboCCgIBA1lyWaIBAwGBAVqaAlrbAgIBf2AL+QEWAgE5/QET/QE3AgEt/wEJhAIZAgEzhwIJjgISAgEvkQITkQIuAgEnkwIJkwKhAQIBKpYCCZYCqQECASifAlmfAmQCASSgAj2gAk4CASKeAkGeAlgCASCbAkKbAlECAR6cAkScAlQCARydAkidAlwCARqjAm+jAoIBAgEXowLzAaMCgQICARWjAosBowLIAQIBFKQCE6QCPgIBC6YCCaYCzQECARCpAgmwAhICAQyzAhOzAi4CAQS1Agm1AqEBAgEIuAIJuALJAQIBBWI9YkQCAT1jPWNEAgE8ZD1kRAIBO2U9ZUQCATppDYgBHQIBdYkBDZcBGAIBcZgBDZ8BGwIBbaABDaABtwECAWqhAQ2oARICAWKpAQ2tAR8CAV6uAQ34ARgCAT6CAl2CAmgCATaBAkyBAlsCATSMAkSMAnMCATKJAkWJAlACATCTAkSTAnQCASuWAniWAqYBAgEppgJ4pgLKAQIBEa4CRK4CdgIBD6sCRasCUAIBDbUCRLUCdAIBCbgCdrgCxgECAQZphwFpkQECAX5pdWl4AgF9bBN8HgIBeYEBE4UBKAIBdpUBoAGVAdIBAgF0iQFLiQFRAgFziQE8iQFCAgFynQE5nQFRAgFumgGgAZoB3wECAXCgAXygAbQBAgFroQEboQFTAgFjowERowHUAQIBaKYBEaYB9QICAWarAaABqwGVAgIBYakBaqkBfQIBYKkBJ6kBOQIBX68BD/cBHAIBP20VeyACAXqDAZEBgwHNAQIBeIMB2AGDAd8BAgF3owGAAaMB0QECAWmmAUumAcgCAgFnrwGtAa8BvwECAV21ARX0ASACAUB5b3msAgIBe7YBF/MBKQIBQfEBcfEBeQIBW7wBHe0BKAIBQsABH8kBKAIBV8oBH9EBMAIBVNIBH+wBJAIBQ8YBJcYBVAIBWsIBS8IBVQIBWM8BS88BVQIBVdIBLdIB9AECAUTUASPqAS4CAUnZASXgAS4CAVDhASXoAS4CAUvpASXpAVsCAUreAVDeAZcBAgFT2wFR2wFbAgFR5gFQ5gGrAQIBTuMBUeMBYAIBTA==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="596,91" />
      <sap2010:ViewStateData Id="Click_1" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="336,192">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UiElementExists_1" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="RetryScope_1" sap:VirtualizedContainerService.HintSize="560,457" />
      <sap2010:ViewStateData Id="Click_3" sap:VirtualizedContainerService.HintSize="560,106" />
      <sap2010:ViewStateData Id="GetValue_1" sap:VirtualizedContainerService.HintSize="560,106">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_19" sap:VirtualizedContainerService.HintSize="560,91" />
      <sap2010:ViewStateData Id="LogMessage_14" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Throw_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="560,238">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FindChildren_1" sap:VirtualizedContainerService.HintSize="560,106" />
      <sap2010:ViewStateData Id="Assign_45" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="GetFullText_2" sap:VirtualizedContainerService.HintSize="464,68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_96" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_50" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Break_6" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="264,346">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_29" sap:VirtualizedContainerService.HintSize="464,493">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="486,825">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ElementScope_1" sap:VirtualizedContainerService.HintSize="500,933" />
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="522,1057">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_4" sap:VirtualizedContainerService.HintSize="538,1190" />
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="560,1314">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="582,2782">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BrowserScope_1" sap:VirtualizedContainerService.HintSize="596,2928">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeCode_1" sap:VirtualizedContainerService.HintSize="314,236">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_90" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_44" sap:VirtualizedContainerService.HintSize="596,384" />
      <sap2010:ViewStateData Id="Throw_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="LogMessage_23" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_28" sap:VirtualizedContainerService.HintSize="596,239">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeCode_2" sap:VirtualizedContainerService.HintSize="596,251">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsMatch_4" sap:VirtualizedContainerService.HintSize="596,22" />
      <sap2010:ViewStateData Id="LogMessage_24" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_97" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_46" sap:VirtualizedContainerService.HintSize="596,239">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_45" sap:VirtualizedContainerService.HintSize="596,239">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="618,5094">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetVevoCheckDetails_1" sap:VirtualizedContainerService.HintSize="1030,7385" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>