<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetVevoCheckDetails" this:GetVevoCheckDetails.in_caseReference="191129-000010"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_caseReference" Type="InArgument(x:String)" />
    <x:Property Name="out_FamilyName" Type="OutArgument(x:String)" />
    <x:Property Name="out_PassportNumber" Type="OutArgument(x:String)" />
    <x:Property Name="out_DateOfBirth" Type="OutArgument(x:String)" />
    <x:Property Name="out_CountryOfDocument" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetVevoCheckDetails_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: This is the first method called in Process transaction state. This will open case reference obtained from TranscationItem.Reference and validate if all required Vevo details avaiable to perform serach. If not, this will throw BusinessRuleException depending on corresponding label/value missing  &#xA;&#xA;&#xA;Inputs: &#xA;in_CaseReference (String): First Case reference from CRM&#xA;&#xA;Outputs: &#xA;out_FamilyName (String) : Value of family name obtained from ticket details.&#xA;out_PassportNumber (String) : Value of passport number obtained from ticket details.&#xA;out_DateOfBirth (String) : Value of date of birth obtained from ticket details.&#xA;out_CountryOfDocument (String) : Value of ountry of document obtained from ticket details.&#xA;&#xA;Pre Condition:&#xA;Robot should be logged (in CRM) default dashboard should be visible  &#xA;&#xA;Post Condition:&#xA;NA" DisplayName="GetVevoCheckInputData" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="VevoInputArray" />
      <Variable x:TypeArguments="ui:BusinessRuleException" Name="out_ErrorCode" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Start GetVevoCheckInputData.xaml&quot;]" />
    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser Oracle CRM" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="31ad616ce4dc336c9ca135f59d56735c" Selector="&lt;html app='chrome.exe' title='Oracle ® Service Cloud*' /&gt;">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Extract Vevo Check details" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="textData" />
              <Variable x:TypeArguments="x:Boolean" Default="False" Name="isFamilyNameAvailable" />
              <Variable x:TypeArguments="x:Boolean" Default="False" Name="isDoBAvailable" />
              <Variable x:TypeArguments="x:Boolean" Default="False" Name="isPassportNoAvailable" />
              <Variable x:TypeArguments="x:Boolean" Default="False" Name="isCountryAvailable" />
              <Variable x:TypeArguments="x:String" Name="caseRefInticketDetails" />
              <Variable x:TypeArguments="ui:GenericValue" Name="textData1" />
            </Sequence.Variables>
            <ui:RetryScope DisplayName="Retry Scope" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:05">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_23">
                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_DOUBLE" DisplayName="Open Case reference" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                      <ui:Click.CursorPosition>
                        <ui:CursorPosition Position="Center">
                          <ui:CursorPosition.OffsetX>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetX>
                          <ui:CursorPosition.OffsetY>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetY>
                        </ui:CursorPosition>
                      </ui:Click.CursorPosition>
                      <ui:Click.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[&quot;&lt;html app='chrome.exe' title='Oracle ® Service Cloud*' /&gt;&lt;webctrl tag='SPAN' aaname='&quot; + in_caseReference + &quot;' class='oj-datagrid-cell-text oj-flex' /&gt;&quot;]" WaitForReady="COMPLETE" />
                      </ui:Click.Target>
                    </ui:Click>
                  </Sequence>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists - Enquiry Information" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b42418585bc7d71645874488b748bce9" Selector="&lt;webctrl tag='LABEL' aaname='Enquiry Information' /&gt;" TimeoutMS="15000" WaitForReady="INTERACTIVE" />
                    </ui:UiElementExists.Target>
                  </ui:UiElementExists>
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <ui:Click ClickType="CLICK_SINGLE" DelayBefore="3000" DelayMS="3000" DisplayName="Click  Refresh " sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="62630ec792d8e1309d7f80291e09bb66" Selector="&lt;webctrl tag='BUTTON' aaname='Refresh*' /&gt;" WaitForReady="COMPLETE" />
              </ui:Click.Target>
            </ui:Click>
            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Case ref from ticket details " sap2010:WorkflowViewState.IdRef="GetValue_1">
              <ui:GetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="a7c3c04a7acced49212ae0f212e30cff" Selector="&lt;webctrl tag='INPUT' aaname='Reference*' type='text' /&gt;" WaitForReady="COMPLETE" />
              </ui:GetValue.Target>
              <ui:GetValue.Value>
                <OutArgument x:TypeArguments="x:String">[caseRefInticketDetails]</OutArgument>
              </ui:GetValue.Value>
            </ui:GetValue>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="[caseRefInticketDetails]" />
            <If Condition="[caseRefInticketDetails.Trim.Equals(in_caseReference)]" DisplayName="Check if transaction reference and open ticket is same" sap2010:WorkflowViewState.IdRef="If_12">
              <If.Then>
                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Orchestrator transaction reference and CRM case reference is same&quot;]" />
              </If.Then>
              <If.Else>
                <Throw DisplayName="Throw ApplicationException" Exception="[new ApplicationException (&quot;Orchestrator transaction reference is :&quot;+in_caseReference +vbNewLine+ &quot;Oracle CRM case reference is :&quot; +caseRefInticketDetails +vbNewLine +&quot;Both are different, throwing application exception&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_3" />
              </If.Else>
            </If>
            <ui:GetFullText DisplayName="Full Text from Case Reference" sap2010:WorkflowViewState.IdRef="GetFullText_1" IgnoreHidden="False">
              <ui:GetFullText.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="70e59342ce5660d0c15c678aad48245a" Selector="&lt;webctrl tag='DIV' class='threadsList' parentclass='threads' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:GetFullText.Target>
              <ui:GetFullText.Text>
                <OutArgument x:TypeArguments="x:String">[textData]</OutArgument>
              </ui:GetFullText.Text>
            </ui:GetFullText>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[VevoInputArray]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[textData.Split(Environment.NewLine.ToArray,StringSplitOptions.RemoveEmptyEntries)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each line in VevoInput Array" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[VevoInputArray]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Fetch Vevo Check details " sap2010:WorkflowViewState.IdRef="Sequence_8">
                    <If Condition="[textData.Contains(&quot;Family Name:&quot;)]" DisplayName="Check if Family Name label exists " sap2010:WorkflowViewState.IdRef="If_17">
                      <If.Then>
                        <Flowchart DisplayName="Get Family Name " sap2010:WorkflowViewState.IdRef="Flowchart_1">
                          <Flowchart.StartNode>
                            <FlowDecision x:Name="__ReferenceID0" Condition="[item.StartsWith(&quot;Family Name:&quot;) AND isFamilyNameAvailable=False]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_2">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_17">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[out_FamilyName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[item.Replace("Family Name:","").Trim]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_1">
                                      <If Condition="[out_FamilyName.Length &gt;0]" DisplayName="Check If Family Name value available" sap2010:WorkflowViewState.IdRef="If_13">
                                        <If.Then>
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[isFamilyNameAvailable]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Family Name value missing" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="ui:GenericValue" Name="testerrorValue" />
                                            </Sequence.Variables>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_ErrorCode]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException("FN_Value_Missing")]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_43">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="ui:GenericValue">[testerrorValue]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="ui:GenericValue">[out_ErrorCode.ToString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;The value is&quot; +testerrorValue + vbNewLine + out_ErrorCode.Message]" />
                                            <ui:Break sap2010:WorkflowViewState.IdRef="Break_2" />
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.True>
                              <FlowDecision.False>
                                <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_13">
                                  <If Condition="[item.Contains(&quot;Family Name field label incorrect or missing&quot;)]" DisplayName="If previous error msg" sap2010:WorkflowViewState.IdRef="If_22">
                                    <If.Then>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_ErrorCode]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException("FN_Label_Missing")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_3">
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[isFamilyNameAvailable]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.False>
                            </FlowDecision>
                          </Flowchart.StartNode>
                          <x:Reference>__ReferenceID0</x:Reference>
                          <x:Reference>__ReferenceID1</x:Reference>
                          <x:Reference>__ReferenceID2</x:Reference>
                          <x:Reference>__ReferenceID3</x:Reference>
                          <x:Reference>__ReferenceID4</x:Reference>
                        </Flowchart>
                      </If.Then>
                      <If.Else>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_ErrorCode]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException("FN_Label_Missing")]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                    <If Condition="[textData.Contains(&quot;Date of Birth:&quot;)]" DisplayName="Check if Date of Birth label exists " sap2010:WorkflowViewState.IdRef="If_18">
                      <If.Then>
                        <Flowchart DisplayName="Get Date of Birth" sap2010:WorkflowViewState.IdRef="Flowchart_2">
                          <Flowchart.StartNode>
                            <FlowDecision x:Name="__ReferenceID5" Condition="[item.StartsWith(&quot;Date of Birth:&quot;) AND isDoBAvailable=False]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_5">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_21">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[out_DateOfBirth]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[item.Replace("Date of Birth:","").Trim]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_4">
                                      <If Condition="[out_DateOfBirth.Length &gt;0]" DisplayName="Check if date of birth value available" sap2010:WorkflowViewState.IdRef="If_14">
                                        <If.Then>
                                          <Sequence DisplayName="Validate input DoB format" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:Boolean" Name="isDoBValid" />
                                            </Sequence.Variables>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">[isDoBAvailable]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:IsMatch DisplayName="Is Match" sap2010:WorkflowViewState.IdRef="IsMatch_1" Input="[out_DateOfBirth]" Pattern="^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$" RegexOption="IgnoreCase, Compiled" Result="[isDoBValid]" />
                                            <If Condition="[isDoBValid]" DisplayName="Check if DoB format is as expected" sap2010:WorkflowViewState.IdRef="If_21">
                                              <If.Then>
                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;Date of Birth format is as expected, Case Ref : &quot; +in_caseReference]" />
                                              </If.Then>
                                              <If.Else>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_ErrorCode]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException("DoB_IncorrectFormat")]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Date of birth value missing" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_23">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_ErrorCode]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException("DoB_Value_Missing")]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:Break sap2010:WorkflowViewState.IdRef="Break_3" />
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.True>
                              <FlowDecision.False>
                                <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_14">
                                  <If Condition="[item.Contains(&quot;Date of Birth field label incorrect or missing&quot;)]" DisplayName="If previous error msg" sap2010:WorkflowViewState.IdRef="If_23">
                                    <If.Then>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_40">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_ErrorCode]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException("DoB_Label_Missing")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_6">
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_24">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[isDoBAvailable]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.False>
                            </FlowDecision>
                          </Flowchart.StartNode>
                          <x:Reference>__ReferenceID5</x:Reference>
                          <x:Reference>__ReferenceID6</x:Reference>
                          <x:Reference>__ReferenceID7</x:Reference>
                          <x:Reference>__ReferenceID8</x:Reference>
                          <x:Reference>__ReferenceID9</x:Reference>
                        </Flowchart>
                      </If.Then>
                      <If.Else>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_ErrorCode]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException("DoB_Label_Missing")]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                    <If Condition="[textData.Contains(&quot;Passport Number:&quot;)]" DisplayName="Check if Passport Number label exists" sap2010:WorkflowViewState.IdRef="If_19">
                      <If.Then>
                        <Flowchart DisplayName="Get Passport Number" sap2010:WorkflowViewState.IdRef="Flowchart_3">
                          <Flowchart.StartNode>
                            <FlowDecision x:Name="__ReferenceID10" Condition="[item.StartsWith(&quot;Passport Number:&quot;) AND isPassportNoAvailable=False]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID11" sap2010:WorkflowViewState.IdRef="FlowStep_8">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_25">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[out_PassportNumber]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[item.Replace("Passport Number:","").Trim]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID12" sap2010:WorkflowViewState.IdRef="FlowStep_7">
                                      <If Condition="[out_PassportNumber.Length &gt;0]" DisplayName="Check If Passport Number value available" sap2010:WorkflowViewState.IdRef="If_15">
                                        <If.Then>
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_26">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[isPassportNoAvailable]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Passport Number value missing" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_27">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_ErrorCode]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException("PN_Value_Missing")]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:Break sap2010:WorkflowViewState.IdRef="Break_4" />
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.True>
                              <FlowDecision.False>
                                <FlowStep x:Name="__ReferenceID14" sap2010:WorkflowViewState.IdRef="FlowStep_15">
                                  <If Condition="[item.Contains(&quot;Passport Number field label incorrect or missing&quot;)]" DisplayName="If previous error msg" sap2010:WorkflowViewState.IdRef="If_24">
                                    <If.Then>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_41">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_ErrorCode]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException("PN_Label_Missing")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID13" sap2010:WorkflowViewState.IdRef="FlowStep_9">
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_28">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[isPassportNoAvailable]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.False>
                            </FlowDecision>
                          </Flowchart.StartNode>
                          <x:Reference>__ReferenceID10</x:Reference>
                          <x:Reference>__ReferenceID11</x:Reference>
                          <x:Reference>__ReferenceID12</x:Reference>
                          <x:Reference>__ReferenceID13</x:Reference>
                          <x:Reference>__ReferenceID14</x:Reference>
                        </Flowchart>
                      </If.Then>
                      <If.Else>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_35">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_ErrorCode]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException("PN_Label_Missing")]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                    <If Condition="[textData.Contains(&quot;Country of Document:&quot;)]" DisplayName="Check if Country label exists" sap2010:WorkflowViewState.IdRef="If_20">
                      <If.Then>
                        <Flowchart DisplayName="Get Country of Document" sap2010:WorkflowViewState.IdRef="Flowchart_4">
                          <Flowchart.StartNode>
                            <FlowDecision x:Name="__ReferenceID15" Condition="[item.StartsWith(&quot;Country of Document:&quot;) AND isCountryAvailable=False]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID16" sap2010:WorkflowViewState.IdRef="FlowStep_11">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_29">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[out_CountryOfDocument]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[item.Replace("Country of Document:","").Trim]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID17" sap2010:WorkflowViewState.IdRef="FlowStep_10">
                                      <If Condition="[out_CountryOfDocument.Length &gt;0]" DisplayName="Check if Country of Documnet value available" sap2010:WorkflowViewState.IdRef="If_16">
                                        <If.Then>
                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_22">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_30">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">[isCountryAvailable]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_44">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[out_CountryOfDocument]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[out_CountryOfDocument.ToUpper]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Country of Document value missing" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_31">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_ErrorCode]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException("CoD_Value_Missing")]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:Break sap2010:WorkflowViewState.IdRef="Break_5" />
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.True>
                              <FlowDecision.False>
                                <FlowStep x:Name="__ReferenceID19" sap2010:WorkflowViewState.IdRef="FlowStep_16">
                                  <If Condition="[item.Contains(&quot;Country of Document field label incorrect or missing&quot;)]" DisplayName="If previous error msg" sap2010:WorkflowViewState.IdRef="If_25">
                                    <If.Then>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_42">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_ErrorCode]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException("CoD_Label_Missing")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID18" sap2010:WorkflowViewState.IdRef="FlowStep_12">
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_32">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[isCountryAvailable]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.False>
                            </FlowDecision>
                          </Flowchart.StartNode>
                          <x:Reference>__ReferenceID15</x:Reference>
                          <x:Reference>__ReferenceID16</x:Reference>
                          <x:Reference>__ReferenceID17</x:Reference>
                          <x:Reference>__ReferenceID18</x:Reference>
                          <x:Reference>__ReferenceID19</x:Reference>
                        </Flowchart>
                      </If.Then>
                      <If.Else>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_36">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_ErrorCode]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException("CoD_Label_Missing")]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                    <If Condition="[isFamilyNameAvailable AND isPassportNoAvailable AND isDoBAvailable AND isCountryAvailable]" DisplayName="Check if all required values found" sap2010:WorkflowViewState.IdRef="If_9">
                      <If.Then>
                        <ui:Break sap2010:WorkflowViewState.IdRef="Break_1" />
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
    </ui:BrowserScope>
    <If Condition="[out_ErrorCode isNot Nothing]" DisplayName="Check if any error in input details " sap2010:WorkflowViewState.IdRef="If_28">
      <If.Then>
        <Throw DisplayName="Throw BusinessRuleException" Exception="[new BusinessRuleException(out_ErrorCode.Message)]" sap2010:WorkflowViewState.IdRef="Throw_5" />
      </If.Then>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;End GetVevoCheckInputData.xaml for Case Ref : &quot; +in_caseReference]" />
    <sads:DebugSymbol.Symbol>d2pDOlxVc2Vyc1x1cW1ndXB0MVxEb2N1bWVudHNcVWlQYXRoXFJwYVVpUGF0aFByb2Nlc3NcUHJvY2Vzc2VzXElBQV9WZXZvQ2hlY2tcQ1JNXEdldFZldm9DaGVja0lucHV0RGF0YS54YW1sugEBcwGBAQECTgPyBA4CAQFTBVOlAQMB/gFUBeoEFwIBCesEBe8ECgIBBfAEBfAExQECAQJTclOiAQMB/wFUmgJU2wIDAf0BWgvnBBYCAQrrBBPrBDICAQbtBAntBKUBAgEH8ARy8ATCAQIBA109XUQCAQ5ePV5EAgENXz1fRAIBDGA9YEQCAQtkDYMBHQMB8wGEAQ2SARgDAe8BkwENmgEbAwHrAZsBDZsBmAEDAegBnAENowESAwHgAaQBDasBHgMB3AGsAQ2zARYDAdgBtAEN5gQaAgEP7QRE7QR4AgEIZIcBZJEBAwH8AWR1ZHgDAfsBZxN3HgMB9wF8E4ABKAMB9AGQAaABkAHSAQMB8gGEAUuEAVEDAfEBhAE8hAFCAwHwAZgBOZgBUQMB7AGVAaABlQHfAQMB7gGbAXubAZUBAwHpAZwBG5wBUwMB4QGeARGeAdMBAwHmAaEBEaEB9QIDAeQBpgGgAaYB5wEDAd8BqQE5qQFDAwHdAbEBOrEBjQEDAdsBrgE7rgFLAwHZAbQBsAG0AcIBAwHWAboBE+MEHgIBEGgVdiADAfgBfpEBfs0BAwH2AX7YAX7fAQMB9QGeAX+eAdABAwHnAaEBS6EByAIDAeUBuwEVpAIaAwGnAaUCFZcDGgIBbpgDFfUDGgIBRvYDFd0EGgIBGN4EFeIEGgIBEXRvdKwCAwH5AbsBI7sBUgMBqAG9ARmYAiUDAa4BmwIZogIiAwGqAaUCI6UCVAIBb6cCGYsDJQIBdY4DGZUDIgIBcZgDI5gDVgIBR5oDGekDJQIBTewDGfMDIgIBSfYDI/YDWgIBGfgDGdEEJQIBH9QEGdsEIgIBG94EI94EgAECARLgBBngBE8CARe/AU2/AZoBAwHTAfcBI4ICKAMBzAGFAieMAjADAcgBwgEjyQEsAwHDAcwBJ/ABLAMBrwGgAlSgAoMBAwGtAZ0CVZ0CZAMBqwGpAk2pApUBAwGkAeoCI/UCKAMBnQH4Aif/AjADAZkBrAIjswIsAwGUAbYCJ+MCLAIBdpMDVJMDhAECAXSQA1WQA2QCAXKcA06cA58BAgFryAMj0wMoAgFk1gMn3QMwAgFgnwMjpgMsAgFbqQMnwQMsAgFO8QNU8QODAQIBTO4DVe4DZAIBSvoDTvoDoAECAUOwBCO7BCgCATy+BCfFBDACATj9AyOEBCwCATOHBCepBCwCASDZBFTZBIQBAgEe1gRV1gRkAgEc9wEx9wF8AwHNAfkBJ4ACMAMBzwGKAlOKAlgDAcsBhwJUhwJrAwHJAccBTscBdAMBxgHEAU/EAV8DAcQBzAE1zAFUAwGwAc4BK9UBNAMBvwHYASvuATYDAbIB6gIx6gJ+AwGeAewCJ/MCMAMBoAH9AlP9AlgDAZwB+gJU+gJkAwGaAbECTrECdgMBlwGuAk+uAmADAZUBtgI1tgJVAgF3uAIr1AI2AgF/1wIr4QI2AgF5yAMxyAOAAQIBZcoDJ9EDMAIBZ9sDU9sDWAIBY9gDVNgDawIBYaQDTqQDeAIBXqEDT6EDYwIBXKkDNakDWAIBT6sDK7IDNAIBV7UDK78DNgIBUbAEMbAEhAECAT2yBCe5BDACAT/DBFPDBFgCATvABFTABGgCATmCBE6CBHwCATb/A0//A2YCATSHBDWHBFsCASGJBCuaBDYCASmdBCunBDYCASP+AWL+AZEBAwHSAfsBY/sBcgMB0AHTAVfTAVsDAcIB0AFY0AFvAwHAAdwBLeMBNgMBuwHkAS3rATYDAbYB7AEt7AHuAQMBtAHtAS3tAWMDAbMB8QJi8QKSAQMBowHuAmPuAnIDAaEBvAItwwI2AwGQAcQCLcQClwIDAYoBxQIt0wIyAwGAAdgCLd8CNgIBe+ACLeACYwIBes8DYs8DkQECAWrMA2PMA3ICAWiwA1ewA1sCAVqtA1itA28CAVi2Ay29AzYCAVO+Ay2+A2MCAVK3BGK3BJIBAgFCtARjtARyAgFAigQtkQQ2AgEvkgQtmQQ2AgEqngQtpQQ2AgElpgQtpgRjAgEk4QFo4QGXAQMBvgHeAWneAXgDAbwB6QFf6QF3AwG5AeYBYOYBcAMBtwHsAZsB7AHrAQMBtQHBAlnBAl0DAZMBvgJavgJqAwGRAcQCggHEApUBAwGOAcQChgLEApQCAwGMAcQCngHEAtsBAwGLAcUCO8UCSQMBgQHHAjHHAvQBAwGHAcoCMdECOgMBgwHdAmjdApgBAgF+2gJp2gJ4AgF8uwNouwOXAQIBVrgDabgDeAIBVI8EWY8EXQIBMowEWowEbgIBMJcEWJcEdwIBLZQEWZQEcAIBK6MEaKMEmAECASigBGmgBHgCASbHAp8BxwLxAQMBiAHPAmzPAp4BAwGGAcwCbcwCfAMBhAE=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="575,91" />
      <sap2010:ViewStateData Id="Click_1" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="336,192">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UiElementExists_1" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="RetryScope_1" sap:VirtualizedContainerService.HintSize="539,457" />
      <sap2010:ViewStateData Id="Click_3" sap:VirtualizedContainerService.HintSize="539,106" />
      <sap2010:ViewStateData Id="GetValue_1" sap:VirtualizedContainerService.HintSize="539,106">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_19" sap:VirtualizedContainerService.HintSize="539,91" />
      <sap2010:ViewStateData Id="LogMessage_14" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Throw_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="539,238">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetFullText_1" sap:VirtualizedContainerService.HintSize="539,106" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="539,60" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_43" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_17" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Break_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="336,477">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">40,374.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">18.895,260</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">139.895,320 139.895,350 140,350 140,374.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_22" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">349,360</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">470,260 470,209.04</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_13">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">370,254.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">470,305.5 470,360</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="79,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">260.5,116.5</av:Point>
            <av:Size x:Key="ShapeSize">79,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">260.5,160 139.895,160 139.895,260</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">339.5,160 470,160 470,254.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="625,636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,116.5</av:PointCollection>
            <x:Double x:Key="Width">611</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_17" sap:VirtualizedContainerService.HintSize="892,783">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="581,60" />
      <sap2010:ViewStateData Id="IsMatch_1" sap:VirtualizedContainerService.HintSize="581,22" />
      <sap2010:ViewStateData Id="LogMessage_18" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_21" sap:VirtualizedContainerService.HintSize="581,239" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="603,525">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Break_3" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="264,246">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">40,374.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">18.895,260</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">139.895,320 139.895,350 140,350 140,374.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_23" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">339,380</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_14">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">360,264.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">460,315.5 460,380</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="79,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">260.5,116.5</av:Point>
            <av:Size x:Key="ShapeSize">79,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">260.5,160 139.895,160 139.895,260</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">339.5,160 460,160 460,264.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_2" sap:VirtualizedContainerService.HintSize="625,636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,116.5</av:PointCollection>
            <x:Double x:Key="Width">610.895</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_18" sap:VirtualizedContainerService.HintSize="892,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Break_4" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="264,246">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_15" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">40,364.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">18.895,260</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">139.895,320 139.895,350 140,350 140,364.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_24" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">339,380</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_15">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">370,254.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">470,305.5 470,335.5 460,335.5 460,380</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_3" sap:VirtualizedContainerService.HintSize="79,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">260.5,116.5</av:Point>
            <av:Size x:Key="ShapeSize">79,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">260.5,160 139.895,160 139.895,260</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">339.5,160 470,160 470,254.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_3" sap:VirtualizedContainerService.HintSize="625,636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,116.5</av:PointCollection>
            <x:Double x:Key="Width">610.895</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_19" sap:VirtualizedContainerService.HintSize="892,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Break_5" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="264,246">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">40,374.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_11">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">18.895,260</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">139.895,320 139.895,350 140,350 140,374.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_25" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_12">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">349,400</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_16">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">360,264.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">460,315.5 460,345.5 470,345.5 470,400</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_4" sap:VirtualizedContainerService.HintSize="79,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">260.5,116.5</av:Point>
            <av:Size x:Key="ShapeSize">79,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">260.5,160 139.895,160 139.895,260</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">339.5,160 460,160 460,264.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_4" sap:VirtualizedContainerService.HintSize="625,636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,116.5</av:PointCollection>
            <x:Double x:Key="Width">610.895</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_20" sap:VirtualizedContainerService.HintSize="892,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Break_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="892,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="914,1271">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="539,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="561,1619">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BrowserScope_1" sap:VirtualizedContainerService.HintSize="575,1765" />
      <sap2010:ViewStateData Id="Throw_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_28" sap:VirtualizedContainerService.HintSize="575,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="575,91" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="597,2696">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetVevoCheckDetails_1" sap:VirtualizedContainerService.HintSize="637,2776" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>