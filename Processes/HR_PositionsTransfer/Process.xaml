<Activity mc:Ignorable="sap sap2010" x:Class="ProcessTransaction" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="In_FileName" Type="InArgument(x:String)" />
    <x:Property Name="In_TransactionID" Type="InArgument(x:String)" />
    <x:Property Name="In_AurionWindow" Type="InArgument(ui:Window)" />
    <x:Property Name="In_BotUsername" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>656,2583.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="23">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="19">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="" DisplayName="ProcessTransaction" sap:VirtualizedContainerService.HintSize="636,2523.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="PositionId" />
      <Variable x:TypeArguments="x:String" Name="FromOrgUnit" />
      <Variable x:TypeArguments="x:String" Name="ToOrgUnit" />
      <Variable x:TypeArguments="x:Boolean" Name="NavMenuResults" />
      <Variable x:TypeArguments="ui:GenericValue" Name="ApiUri" />
      <Variable x:TypeArguments="ss:SecureString" Name="AuthToken" />
      <Variable x:TypeArguments="x:String" Name="TransferDate" />
      <Variable x:TypeArguments="x:Boolean" Name="ApiResults" />
      <Variable x:TypeArguments="x:String" Name="TransferStatus" />
      <Variable x:TypeArguments="x:Int32" Name="StatusInt" />
      <Variable x:TypeArguments="x:Boolean" Name="PositionsExists" />
      <Variable x:TypeArguments="x:Boolean" Name="SearchButtonExists" />
      <Variable x:TypeArguments="ui:Window" Name="AurionWindow" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="594.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Processing new Transaction...&quot;]" />
    <Assign sap:VirtualizedContainerService.HintSize="594.4,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="ui:Window">[AurionWindow]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="ui:Window">[In_AurionWindow]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionValues workflow" sap:VirtualizedContainerService.HintSize="594.4,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Lib/GetTransactionValues.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="ui:QueueItem" x:Key="In_TransactionItem">[in_TransactionItem]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Out_PositionId">[PositionId]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Out_FromOrgUnit">[FromOrgUnit]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Out_ToOrgUnit">[ToOrgUnit]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Out_TransferDate">[TransferDate]</OutArgument>
        <InOutArgument x:TypeArguments="ui:Window" x:Key="IO_AurionWindow">[AurionWindow]</InOutArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Attach Window" sap:VirtualizedContainerService.HintSize="594.4,605.6" sap2010:WorkflowViewState.IdRef="WindowScope_1" Window="[AurionWindow]">
      <ui:WindowScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="524.8,496.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:UiElementExists DisplayName="Check if on Search Screen" Exists="[SearchButtonExists]" sap:VirtualizedContainerService.HintSize="483.2,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b48c64d47c486817457b8e32c98962f0" Selector="&lt;wnd app='aurion.exe' cls='UniApplication' title='Aurion - *' /&gt;&lt;ctrl idx='75' role='client' /&gt;" TimeoutMS="300" WaitForReady="NONE" />
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <If Condition="[SearchButtonExists]" sap:VirtualizedContainerService.HintSize="483.2,256.8" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Search Button" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b48c64d47c486817457b8e32c98962f0" Selector="&lt;wnd app='aurion.exe' cls='UniApplication' title='Aurion - *' /&gt;&lt;ctrl idx='75' role='client' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:WindowScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WindowScope>
    <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Attach Window" sap:VirtualizedContainerService.HintSize="594.4,1077.6" sap2010:WorkflowViewState.IdRef="WindowScope_2" Window="[AurionWindow]">
      <ui:WindowScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="560.8,968.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="519.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Checking on Select Position menu&quot;]" />
            <ui:UiElementExists DisplayName="Position Detail Title Exists" Exists="[PositionsExists]" sap:VirtualizedContainerService.HintSize="519.2,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="aa79daffc3bb17b0d0fe21740363bbef" Selector="&lt;wnd app='aurion.exe' cls='UniApplication' title='Aurion *' /&gt;&lt;ctrl name='Select Position' role='text' /&gt;" TimeoutMS="300" WaitForReady="NONE" />
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <If Condition="[Not PositionsExists]" sap:VirtualizedContainerService.HintSize="519.2,596" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="375.2,446.4" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Aurion not on positions menu, navigating to positions&quot;]" />
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="01 - Navigate to Menu" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Lib\AurionNavigateToPositions.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <OutArgument x:TypeArguments="x:Boolean" x:Key="Out_Results">[NavMenuResults]</OutArgument>
                      <InArgument x:TypeArguments="ui:Window" x:Key="In_AurionWindow">[AurionWindow]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Navigated to Positions Menu&quot;]" />
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:WindowScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WindowScope>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="594.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Processing Transfer Positions Transaction&quot;]" />
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="02 - Transfer Position" sap:VirtualizedContainerService.HintSize="594.4,52.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Lib/TransferPosition.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="In_PositionNumber">[PositionId]</InArgument>
        <InArgument x:TypeArguments="ui:Window" x:Key="In_AurionWindow">[AurionWindow]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="In_FromOrgUnit">[FromOrgUnit]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="In_ToOrgUnit">[ToOrgUnit]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="In_BotUsername">[In_BotUsername]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="In_TransferDate">[TransferDate]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="Out_TransferStatus">[TransferStatus]</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="Out_TransferStatusInt">[StatusInt]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <If Condition="[StatusInt &lt;&gt; 2]" sap:VirtualizedContainerService.HintSize="836,653.6" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="416.8,468.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap:VirtualizedContainerService.HintSize="375.2,243.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="HR_PositionsTransfer_BearerToken" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[AuthToken]" />
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="03 - Call back to AWS Api" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Lib/CallbackAWS.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="In_Uri">[ApiUri]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="In_BearerToken">["Bearer " + new System.Net.NetworkCredential(string.Empty, AuthToken).Password]</InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="Out_Results">[ApiResults]</OutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="In_ResultsMessage">Success</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="In_FileName">[In_FileName]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="In_PositionId">[PositionId]</InArgument>
                <InArgument x:TypeArguments="x:Boolean" x:Key="In_TransferSuccessful">True</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="375.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Transaction Processed Successfully.&quot;]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="375.2,504" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="s:Exception" Name="ErrorMessage" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ErrorHandling workflow" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\ErrorHandling.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="In_ErrorMessage">[TransferStatus]</InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="In_Error">[StatusInt]</InArgument>
              <InArgument x:TypeArguments="s:Exception" x:Key="Out_Exception">[ErrorMessage]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="03 - Call back to AWS Api" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Lib/CallbackAWS.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="In_Uri">[ApiUri]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="In_BearerToken">["Bearer " + new System.Net.NetworkCredential(string.Empty, AuthToken).Password]</InArgument>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="Out_Results">[ApiResults]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="In_ResultsMessage">[ErrorMessage.GetType.ToString + " - " + ErrorMessage.Message]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="In_FileName">[In_FileName]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="In_PositionId">[PositionId]</InArgument>
              <InArgument x:TypeArguments="x:Boolean" x:Key="In_TransferSuccessful">False</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Transaction Processing Failed.&quot;]" />
          <Throw Exception="[ErrorMessage]" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>