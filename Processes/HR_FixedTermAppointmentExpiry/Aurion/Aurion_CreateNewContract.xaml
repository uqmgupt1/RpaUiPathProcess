<Activity mc:Ignorable="sap sap2010 sads" x:Class="Aurion_CreateNewContract"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="in_AurionWindow" Type="InArgument(ui:Window)" />
    <x:Property Name="in_employeeNumber" Type="InArgument(x:String)" />
    <x:Property Name="in_proposedContractStartDate" Type="InArgument(s:DateTime)" />
    <x:Property Name="in_proposedContractEndDate" Type="InArgument(s:DateTime)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_reportDT" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="in_employeeName" Type="InArgument(x:String)" />
    <x:Property Name="in_systemErrorNotes" Type="InArgument(x:String)" />
    <x:Property Name="out_systemErrorStatus" Type="OutArgument(x:String)" />
    <x:Property Name="out_currentContractEndDate" Type="OutArgument(s:DateTime)" />
    <x:Property Name="in_pstName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Aurion_CreateNewContract_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This XAML will locate the current employee and create a new contract.  BRE will be thrown if the employee is marked terminated, is a continuing employee, or if the proposed contract start date is before the current contract end date.  The reportDT is frequently updated.&#xA;&#xA;in_Arg&#xA;     in_AurionWindow                         Window&#xA;     in_Config                                        Dictionary(String, Object)&#xA;     in_employeeName                        String&#xA;     in_employeeNumber                    String&#xA;     in_proposedContractEndDate      DateTime&#xA;     in_proposedContractStartDate     DateTime&#xA;     in_pstName                                     String&#xA;     in_systemErrorNotes                      String&#xA;     in_TransactionItem                         QueueItem&#xA;&#xA;io_Arg&#xA;     io_reportDT                                      DataTable&#xA;&#xA;out_Arg&#xA;     out_currentContractEndDate        DateTime&#xA;     out_systemErrorStatus                   String&#xA;&#xA;" DisplayName="Aurion_CreateNewContract" sap2010:WorkflowViewState.IdRef="Sequence_5">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="sortedDatesDT" />
      <Variable x:TypeArguments="x:String" Name="selectEmployeeList" />
      <Variable x:TypeArguments="x:String" Name="placementDetailText" />
      <Variable x:TypeArguments="x:String" Name="placementProcessingDates" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New System.Data.DataTable]" Name="datesDT" />
      <Variable x:TypeArguments="x:Boolean" Name="textClicked" />
      <Variable x:TypeArguments="x:String" Name="currentContractEndDate" />
      <Variable x:TypeArguments="x:Boolean" Name="textEntered" />
      <Variable x:TypeArguments="x:Boolean" Name="searchClicked" />
      <Variable x:TypeArguments="x:String" Name="payScaleHistory" />
      <Variable x:TypeArguments="x:Boolean" Name="contractExpiryPopUpExists" />
      <Variable x:TypeArguments="s:DateTime" Name="newestPlacementDate" />
      <Variable x:TypeArguments="x:String" Name="placementsText" />
      <Variable x:TypeArguments="sd:DataTable" Name="placementDatesDT" />
      <Variable x:TypeArguments="x:Boolean" Name="AurionAlertPopupExists" />
      <Variable x:TypeArguments="x:String" Name="commentsText" />
      <Variable x:TypeArguments="x:Int32" Name="counter" />
      <Variable x:TypeArguments="x:Boolean" Name="payrollProcessingInhibitedExists" />
      <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="queueItems" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Begin Aurion_CreateNewContract&quot;]" />
    <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Attach Window 'Aurion'" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="7ac56d0931f074c89e4e56f4f3be557d" Window="[in_AurionWindow]">
      <ui:WindowScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <ui:Activate DelayBefore="{x:Null}" DelayMS="{x:Null}" sap2010:WorkflowViewState.IdRef="Activate_1">
              <ui:Activate.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="COMPLETE" />
              </ui:Activate.Target>
            </ui:Activate>
            <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists 'Quick Search'" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="6c54407d330021a9adc92e146c2c297b" Selector="&lt;wnd aaname='Select Employee' cls='Edit' /&gt;&lt;nav up='2' /&gt;&lt;wnd cls='Edit' idx='7' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <ui:RetryScope DisplayName="Retry Scope TC: Enter Employee Number" sap2010:WorkflowViewState.IdRef="RetryScope_5" NumberOfRetries="3" RetryInterval="00:00:05">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <TryCatch DisplayName="TC: Enter Employee Number" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                    <TryCatch.Try>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_31">
                        <Assign DisplayName="Assign textTyped = False" sap2010:WorkflowViewState.IdRef="Assign_30">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[textEntered]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:SetToClipboard DisplayName="Set To Clipboard" sap2010:WorkflowViewState.IdRef="SetToClipboard_3" Text="[in_employeeNumber]" />
                        <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Send Hotkey 'ctrl + v' to 'Quick Search'" EmptyField="True" sap2010:WorkflowViewState.IdRef="SendHotkey_5" Key="v" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                          <ui:SendHotkey.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="e4137a07d819ceed5b3c638cb8090581" Selector="&lt;wnd aaname='Select Employee' cls='Edit' /&gt;&lt;nav up='2' /&gt;&lt;wnd cls='Edit' idx='7' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                          </ui:SendHotkey.Target>
                        </ui:SendHotkey>
                        <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'Quick Search'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_2" SendWindowMessages="False" SimulateType="False" Text="%[k(enter)]">
                          <ui:TypeInto.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="7bbb63482fe018ecc60946d2fdc53f70" Selector="&lt;wnd aaname='Select Employee' cls='Edit' /&gt;&lt;nav up='2' /&gt;&lt;wnd cls='Edit' idx='7' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                          </ui:TypeInto.Target>
                        </ui:TypeInto>
                        <Assign DisplayName="Assign textTyped = True" sap2010:WorkflowViewState.IdRef="Assign_31">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[textEntered]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Assign DisplayName="Assign textTyped = False" sap2010:WorkflowViewState.IdRef="Assign_32">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[textEntered]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsTrue DisplayName="Is true (textEntered)" sap2010:WorkflowViewState.IdRef="IsTrue_5" Input="[textEntered]" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <ui:RetryScope DisplayName="Retry Scope - Get Visible Text 'Select Employee' list" sap2010:WorkflowViewState.IdRef="RetryScope_15" NumberOfRetries="3" RetryInterval="00:00:05">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_52">
                    <ui:GetVisibleText WordsInfo="{x:Null}" DisplayName="Get Visible Text 'Select Employee' list" FormattedText="False" sap2010:WorkflowViewState.IdRef="GetVisibleText_1">
                      <ui:GetVisibleText.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="4ecf87810776f2b41b604e6ff52d289f" Selector="&lt;wnd cls='AfxWnd140u' idx='2' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                      </ui:GetVisibleText.Target>
                      <ui:GetVisibleText.Text>
                        <OutArgument x:TypeArguments="x:String">[selectEmployeeList]</OutArgument>
                      </ui:GetVisibleText.Text>
                    </ui:GetVisibleText>
                  </Sequence>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsFalse DisplayName="Is false" sap2010:WorkflowViewState.IdRef="IsFalse_2" Input="[String.IsNullOrEmpty(selectEmployeeList)]" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <If sap2010:Annotation.AnnotationText="If employee is marked as &quot;Terminated&quot; update email report and throw BRE." Condition="[selectEmployeeList.ToUpper.Contains(&quot;TERMINATED&quot;)]" DisplayName="If terminated employee" sap2010:WorkflowViewState.IdRef="If_8">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_41">
                  <Assign DisplayName="Assign out_systemErrorStatus" sap2010:WorkflowViewState.IdRef="Assign_35">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_systemErrorStatus]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Error</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign in_systemErrorNotes" sap2010:WorkflowViewState.IdRef="Assign_36">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[in_systemErrorNotes]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">["Employee marked as terminated in Aurion.  Please investigate."]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateReport workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Report\UpdateReport.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                      <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                      <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_ReportDT">[io_reportDT]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_employeeName">[in_employeeName]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_employeeNumber">[in_EmployeeNumber]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_proposedContractStartDate">[in_proposedContractStartDate]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_proposedContractEndDate">[in_proposedContractEndDate]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorNotes">[in_systemErrorNotes]</InArgument>
                      <InOutArgument x:TypeArguments="x:String" x:Key="io_DTasHTML" />
                      <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorStatus">[out_systemErrorStatus]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_currentContractEndDate">[out_currentContractEndDate]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_pstName">[in_pstName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Throw DisplayName="Throw Terminated employee" Exception="[New BusinessRuleException(&quot;Employee marked as terminated in Aurion&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_5" />
                </Sequence>
              </If.Then>
            </If>
            <ui:RetryScope DisplayName="Retry Scope - Dbl Click Text '#######' (Employee number)" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="10" RetryInterval="00:00:01">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <TryCatch DisplayName="TC: Dbl Click Text '#######' (Employee number)" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                    <TryCatch.Try>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <ui:ClickText DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_DOUBLE" ContinueOnError="True" DisplayName="Dbl Click Text '#######' (Employee number)" FormattedText="False" sap2010:WorkflowViewState.IdRef="ClickText_1" KeyModifiers="None" MouseButton="BTN_LEFT" Occurrence="1" SendWindowMessages="False" Text="[in_employeeNumber]">
                          <ui:ClickText.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:ClickText.CursorPosition>
                          <ui:ClickText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="79176bb4db199712d4ee018836c2537b" Selector="&lt;wnd cls='AfxWnd140u' idx='2' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                          </ui:ClickText.Target>
                        </ui:ClickText>
                        <ui:UiElementExists DisplayName="Element Exists 'Aurion Alert' pop up" Exists="[AurionAlertPopupExists]" sap2010:WorkflowViewState.IdRef="UiElementExists_13">
                          <ui:UiElementExists.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="0d26a57d7c6104a2260c6df6a1e3d268" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Alert List*' /&gt;&lt;wnd cls='UniLabel' /&gt;" TimeoutMS="10000" WaitForReady="COMPLETE" />
                          </ui:UiElementExists.Target>
                        </ui:UiElementExists>
                        <If Condition="[AurionAlertPopupExists]" DisplayName="If  'Aurion Alert' pop up" sap2010:WorkflowViewState.IdRef="If_9">
                          <If.Then>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_47">
                              <ui:Check ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" DisplayName="Check 'Button'" sap2010:WorkflowViewState.IdRef="Check_1">
                                <ui:Check.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="cdf2a765c3e538f4f4a2a2d56f4faab6" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Alert List*' /&gt;&lt;wnd cls='Button' idx='1' /&gt;" WaitForReady="COMPLETE" />
                                </ui:Check.Target>
                              </ui:Check>
                              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap2010:WorkflowViewState.IdRef="Click_22" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="7fec53c07cffc9dbc71d6fc282cfaed6" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Alert List*' /&gt;&lt;wnd cls='Button' title='Continue' /&gt;" WaitForReady="COMPLETE" />
                                </ui:Click.Target>
                              </ui:Click>
                            </Sequence>
                          </If.Then>
                        </If>
                        <ui:UiElementExists DisplayName="Element Exists 'Placements' text" Exists="[textClicked]" sap2010:WorkflowViewState.IdRef="UiElementExists_4">
                          <ui:UiElementExists.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="372999369dc1f552c8a187c30d74862f" Selector="&lt;wnd aaname='Placements' cls='Edit' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                          </ui:UiElementExists.Target>
                        </ui:UiElementExists>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Assign DisplayName="Assign textClicked = False" sap2010:WorkflowViewState.IdRef="Assign_5">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[textClicked]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsTrue DisplayName="Is true (textClicked)" sap2010:WorkflowViewState.IdRef="IsTrue_1" Input="[textClicked]" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <ui:RetryScope DisplayName="Retry Scope - Click Text 'Details'" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="10" RetryInterval="00:00:01">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <TryCatch DisplayName="TC: Click Text 'Details'" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                    <TryCatch.Try>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_13">
                        <Assign DisplayName="Assign textClicked = False" sap2010:WorkflowViewState.IdRef="Assign_19">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[textClicked]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ClickText ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Text 'Details'" FormattedText="False" sap2010:WorkflowViewState.IdRef="ClickText_4" KeyModifiers="None" MouseButton="BTN_LEFT" Occurrence="1" SendWindowMessages="False" Text="Details">
                          <ui:ClickText.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:ClickText.CursorPosition>
                          <ui:ClickText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="54729718152f3b9b1f1c4ff1b30a463e" Selector="&lt;wnd cls='UTabControl' idx='9' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                          </ui:ClickText.Target>
                        </ui:ClickText>
                        <Assign DisplayName="Assign textClicked = True" sap2010:WorkflowViewState.IdRef="Assign_9">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[textClicked]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Assign DisplayName="Assign textClicked = False" sap2010:WorkflowViewState.IdRef="Assign_10">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[textClicked]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsTrue DisplayName="Is true (textClicked)" sap2010:WorkflowViewState.IdRef="IsTrue_2" Input="[textClicked]" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <ui:RetryScope DisplayName="Retry Scope - Get newest placement date" sap2010:WorkflowViewState.IdRef="RetryScope_12" NumberOfRetries="3" RetryInterval="00:00:30">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_45">
                    <Assign DisplayName="Assign placementDatesDT (Empty)" sap2010:WorkflowViewState.IdRef="Assign_38">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sd:DataTable">[placementDatesDT]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sd:DataTable">[New System.Data.DataTable]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign newestPlacementDate = Nothing" sap2010:WorkflowViewState.IdRef="Assign_39">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:DateTime">[newestPlacementDate]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:DateTime">[CDate(Nothing)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign placementsText = &quot;&quot;" sap2010:WorkflowViewState.IdRef="Assign_49">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[placementsText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:GetVisibleText WordsInfo="{x:Null}" DisplayName="Get Visible Text 'Placements'" FormattedText="True" sap2010:WorkflowViewState.IdRef="GetVisibleText_6" Separators="[vbTab]">
                      <ui:GetVisibleText.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="3f9e0e3ed686045d4f548b463ff45b65" Selector="&lt;wnd cls='AfxWnd140u' idx='2' /&gt;" TimeoutMS="120000" WaitForReady="COMPLETE" />
                      </ui:GetVisibleText.Target>
                      <ui:GetVisibleText.Text>
                        <OutArgument x:TypeArguments="x:String">[placementsText]</OutArgument>
                      </ui:GetVisibleText.Text>
                    </ui:GetVisibleText>
                    <ui:GenerateDataTable ColumnSeparators="{x:Null}" ColumnSizes="{x:Null}" NewLineSeparator="{x:Null}" Positions="{x:Null}" DataTable="[placementDatesDT]" DisplayName="Generate Data Table" sap2010:WorkflowViewState.IdRef="GenerateDataTable_1" Input="[placementsText]" />
                    <TryCatch DisplayName="Try Catch: Sort Data Table: placementDatesDT and Assign newestPlacementDate" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                      <TryCatch.Try>
                        <Sequence DisplayName="Sort Data Table: placementDatesDT and Assign newestPlacementDate" sap2010:WorkflowViewState.IdRef="Sequence_60">
                          <ui:SortDataTable ColumnIndex="{x:Null}" DataColumn="{x:Null}" ColumnName="Column1" DataTable="[placementDatesDT]" DisplayName="Sort Data Table: placementDatesDT" sap2010:WorkflowViewState.IdRef="SortDataTable_1" Order="Decending" OutputDataTable="[placementDatesDT]" />
                          <Assign DisplayName="Assign newestPlacementDate" sap2010:WorkflowViewState.IdRef="Assign_40">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:DateTime">[newestPlacementDate]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:DateTime">[CDate(placementDatesDT.Rows(0).Item("Column1"))]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <Assign DisplayName="Assign newestPlacementDate = Nothing" sap2010:WorkflowViewState.IdRef="Assign_48">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:DateTime">[newestPlacementDate]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:DateTime">[CDate(Nothing)]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                  </Sequence>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsTrue sap2010:Annotation.AnnotationText="newestPlacementDate &lt;&gt; CDate(Nothing)" DisplayName="Is true" sap2010:WorkflowViewState.IdRef="IsTrue_12" Input="[newestPlacementDate &lt;&gt; CDate(Nothing)]" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <ui:RetryScope DisplayName="Retry Scope - Click Text 'Newest placement date'" sap2010:WorkflowViewState.IdRef="RetryScope_13" NumberOfRetries="20" RetryInterval="00:00:01">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <TryCatch DisplayName="TC:  Click Text 'Newest placement date'" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                    <TryCatch.Try>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_46">
                        <Assign DisplayName="Assign textClicked = False" sap2010:WorkflowViewState.IdRef="Assign_41">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[textClicked]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ClickText ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Text 'Newest placement date'" FormattedText="False" sap2010:WorkflowViewState.IdRef="ClickText_5" KeyModifiers="None" MouseButton="BTN_LEFT" Occurrence="1" SendWindowMessages="False" Text="[newestPlacementDate.ToString(&quot;dd-MMM-yyyy&quot;).ToUpper]">
                          <ui:ClickText.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:ClickText.CursorPosition>
                          <ui:ClickText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="54729718152f3b9b1f1c4ff1b30a463e" Selector="&lt;wnd cls='AfxWnd140u' idx='2' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                          </ui:ClickText.Target>
                        </ui:ClickText>
                        <Assign DisplayName="Assign textClicked = True" sap2010:WorkflowViewState.IdRef="Assign_42">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[textClicked]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Assign DisplayName="Assign textClicked = False" sap2010:WorkflowViewState.IdRef="Assign_43">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[textClicked]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsTrue DisplayName="Is true (textClicked)" sap2010:WorkflowViewState.IdRef="IsTrue_13" Input="[textClicked]" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <ui:RetryScope DisplayName="Retry Scope - Get Visible Text 'Placement Detail' pane" sap2010:WorkflowViewState.IdRef="RetryScope_4" NumberOfRetries="3" RetryInterval="00:00:05">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_24">
                    <Assign sap2010:Annotation.AnnotationText="currentContractEndDate = &quot;&quot;" DisplayName="Assign currentContractEndDate = &quot;&quot;" sap2010:WorkflowViewState.IdRef="Assign_23">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[currentContractEndDate]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:Annotation.AnnotationText="out_currentContractEndDate = Nothing" DisplayName="Assign out_currentContractEndDate = Nothing" sap2010:WorkflowViewState.IdRef="Assign_24">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:DateTime">[out_currentContractEndDate]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:DateTime">[CDate(Nothing)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:GetVisibleText WordsInfo="{x:Null}" DisplayName="Get Visible Text 'Placement Detail' pane" FormattedText="False" sap2010:WorkflowViewState.IdRef="GetVisibleText_4">
                      <ui:GetVisibleText.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="d175a1baa57d11310037b6a5e6956e86" Selector="&lt;wnd cls='uPaneClass' idx='28' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                      </ui:GetVisibleText.Target>
                      <ui:GetVisibleText.Text>
                        <OutArgument x:TypeArguments="x:String">[placementDetailText]</OutArgument>
                      </ui:GetVisibleText.Text>
                    </ui:GetVisibleText>
                  </Sequence>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsFalse sap2010:Annotation.AnnotationText="String.IsNullOrEmpty(placementDetailText)" DisplayName="Is false" sap2010:WorkflowViewState.IdRef="IsFalse_3" Input="[String.IsNullOrEmpty(placementDetailText)]" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <If sap2010:Annotation.AnnotationText="If Continuing Employment  (permanent placement) throw BRE else assign out_currentContractEndDate" Condition="[placementDetailText.ToUpper.Contains(&quot;CONTINUING EMPLOYMENT&quot;)]" DisplayName="If Continuing Employment  (permanent placement)" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_26">
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn" Message="[&quot;Current contract end date is CONTINUING EMPLOYMENT&quot;]" />
                  <Assign DisplayName="Assign out_systemErrorStatus" sap2010:WorkflowViewState.IdRef="Assign_28">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_systemErrorStatus]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Error</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign in_systemErrorNotes" sap2010:WorkflowViewState.IdRef="Assign_29">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[in_systemErrorNotes]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">["Employee marked as ""Continuing Employment"" in Aurion.  Please investigate."]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateReport workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Report\UpdateReport.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                      <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                      <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_ReportDT">[io_reportDT]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_employeeName">[in_employeeName]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_employeeNumber">[in_EmployeeNumber]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_proposedContractStartDate">[in_proposedContractStartDate]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_proposedContractEndDate">[in_proposedContractEndDate]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorNotes">[in_systemErrorNotes]</InArgument>
                      <InOutArgument x:TypeArguments="x:String" x:Key="io_DTasHTML" />
                      <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorStatus">[out_systemErrorStatus]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_currentContractEndDate">[out_currentContractEndDate]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_pstName">[in_pstName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:RetryScope sap2010:Annotation.AnnotationText="Magnifying glass located upper right" DisplayName="Retry Scope Click 'Search'" sap2010:WorkflowViewState.IdRef="RetryScope_6" NumberOfRetries="3" RetryInterval="00:00:05">
                    <ui:RetryScope.ActivityBody>
                      <ActivityAction>
                        <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_34">
                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" sap2010:Annotation.AnnotationText="Magnifying glass located upper right" ClickType="CLICK_SINGLE" DisplayName="Click 'Search'" sap2010:WorkflowViewState.IdRef="Click_15" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="2fd12da003f721e2f1331d0793794a89" Selector="&lt;wnd aaname='Placements' cls='Edit' /&gt;&lt;nav up='2' /&gt;&lt;wnd cls='OwiCmdButton' idx='2' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                            </ui:Click.Target>
                          </ui:Click>
                          <ui:UiElementExists DisplayName="Element Exists 'Quick Search'" Exists="[searchClicked]" sap2010:WorkflowViewState.IdRef="UiElementExists_5">
                            <ui:UiElementExists.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="853dfee03e218ea5f7d4de91c6be8c90" Selector="&lt;wnd app='aurion.exe' cls='UniApplication' /&gt;&lt;wnd aaname='Select Employee' cls='Edit' /&gt;&lt;nav up='2' /&gt;&lt;wnd cls='Edit' idx='7' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                            </ui:UiElementExists.Target>
                          </ui:UiElementExists>
                        </Sequence>
                      </ActivityAction>
                    </ui:RetryScope.ActivityBody>
                    <ui:RetryScope.Condition>
                      <ActivityFunc x:TypeArguments="x:Boolean">
                        <p:IsTrue DisplayName="Is true (searchClicked)" sap2010:WorkflowViewState.IdRef="IsTrue_6" Input="[searchClicked]" />
                      </ActivityFunc>
                    </ui:RetryScope.Condition>
                  </ui:RetryScope>
                  <Throw DisplayName="Throw Continuing Employment" Exception="[New BusinessRuleException(&quot;Possible continuing employment.&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_3" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_27">
                  <Assign DisplayName="Assign currentContractEndDate" sap2010:WorkflowViewState.IdRef="Assign_13">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[currentContractEndDate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(placementDetailText,"(?&lt;=Date To)\s+\d{2}-[A-Z]{3}-\d{4}").Groups(0).ToString.Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign out_currentContractEndDate" sap2010:WorkflowViewState.IdRef="Assign_21">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:DateTime">[out_currentContractEndDate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:DateTime">[CDate(currentContractEndDate)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Current contract end date is &quot; + out_currentContractEndDate.ToString(&quot;dd-MMM-yyyy&quot;).ToUpper]" />
                </Sequence>
              </If.Else>
            </If>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Proposed contract start date is &quot; + in_proposedContractStartDate.ToString(&quot;dd-MMM-yyyy&quot;).ToUpper]" />
            <If sap2010:Annotation.AnnotationText="If UniTask propesed contract start date minus one day is newer than Aurion current contract end date, update email report and throw BRE." Condition="[out_currentContractEndDate &gt; in_proposedContractStartDate]" DisplayName="If proposed contract start date is before current contract end date" sap2010:WorkflowViewState.IdRef="If_4">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_19">
                  <Assign DisplayName="Assign out_systemErrorStatus" sap2010:WorkflowViewState.IdRef="Assign_16">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_systemErrorStatus]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Error</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign in_systemErrorNotes" sap2010:WorkflowViewState.IdRef="Assign_17">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[in_systemErrorNotes]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">["Unitask proposed contract start date overlaps in Aurion, Aurion current contract end date is """ + out_currentContractEndDate.ToString("dd-MMM-yyyy").ToUpper + """ and UniTask proposed contract start date is """ + in_proposedContractStartDate.ToString("dd-MMM-yyyy").ToUpper + """.  Please investigate."]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateReport workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Report\UpdateReport.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                      <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                      <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_ReportDT">[io_reportDT]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_employeeName">[in_employeeName]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_employeeNumber">[in_EmployeeNumber]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_proposedContractStartDate">[in_proposedContractStartDate]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_proposedContractEndDate">[in_proposedContractEndDate]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorNotes">[in_systemErrorNotes]</InArgument>
                      <InOutArgument x:TypeArguments="x:String" x:Key="io_DTasHTML" />
                      <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorStatus">[out_systemErrorStatus]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_currentContractEndDate">[out_currentContractEndDate]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_pstName">[in_pstName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:RetryScope sap2010:Annotation.AnnotationText="Magnifying glass located upper right" DisplayName="Retry Scope Click 'Search'" sap2010:WorkflowViewState.IdRef="RetryScope_8" NumberOfRetries="3" RetryInterval="00:00:05">
                    <ui:RetryScope.ActivityBody>
                      <ActivityAction>
                        <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_36">
                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" sap2010:Annotation.AnnotationText="Magnifying glass located upper right" ClickType="CLICK_SINGLE" DisplayName="Click 'Search'" sap2010:WorkflowViewState.IdRef="Click_17" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="2fd12da003f721e2f1331d0793794a89" Selector="&lt;wnd aaname='Placements' cls='Edit' /&gt;&lt;nav up='2' /&gt;&lt;wnd cls='OwiCmdButton' idx='2' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                            </ui:Click.Target>
                          </ui:Click>
                          <ui:UiElementExists DisplayName="Element Exists 'Quick Search'" Exists="[searchClicked]" sap2010:WorkflowViewState.IdRef="UiElementExists_7">
                            <ui:UiElementExists.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="853dfee03e218ea5f7d4de91c6be8c90" Selector="&lt;wnd app='aurion.exe' cls='UniApplication' /&gt;&lt;wnd aaname='Select Employee' cls='Edit' /&gt;&lt;nav up='2' /&gt;&lt;wnd cls='Edit' idx='7' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                            </ui:UiElementExists.Target>
                          </ui:UiElementExists>
                        </Sequence>
                      </ActivityAction>
                    </ui:RetryScope.ActivityBody>
                    <ui:RetryScope.Condition>
                      <ActivityFunc x:TypeArguments="x:Boolean">
                        <p:IsTrue DisplayName="Is true (searchClicked)" sap2010:WorkflowViewState.IdRef="IsTrue_8" Input="[searchClicked]" />
                      </ActivityFunc>
                    </ui:RetryScope.Condition>
                  </ui:RetryScope>
                  <Throw DisplayName="Throw Overlapping contract dates" Exception="[New BusinessRuleException(&quot;Contract dates overlap between Aurion and Unitask&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_2" />
                </Sequence>
              </If.Then>
            </If>
            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Update'" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="bc9e598a6dd47da6abd3bcced6d1823f" Selector="&lt;wnd cls='Button' title='Update' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
              </ui:Click.Target>
            </ui:Click>
            <ui:UiElementExists DisplayName="Element Exists 'Payroll processing has been inhibited...'" Exists="[payrollProcessingInhibitedExists]" sap2010:WorkflowViewState.IdRef="UiElementExists_16">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="4f2fdad57c93debf36f8d5ae9a6d301e" Selector="&lt;wnd app='aurion.exe' cls='#32770' title='Aurion' /&gt;&lt;wnd aaname='Payroll processing has been inhibited because this Employee is Ready For Payrun.' /&gt;" TimeoutMS="5000" WaitForReady="COMPLETE" />
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <If Condition="[payrollProcessingInhibitedExists]" DisplayName="If payrollProcessingInhibitedExists" sap2010:WorkflowViewState.IdRef="If_12">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_58">
                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'OK'" sap2010:WorkflowViewState.IdRef="Click_25" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="47b8f5e8028e0c6d63dbf6b226ccd81a" Selector="&lt;wnd app='aurion.exe' cls='#32770' title='Aurion' /&gt;&lt;wnd aaname='OK' /&gt;" WaitForReady="COMPLETE" />
                    </ui:Click.Target>
                  </ui:Click>
                  <ui:PostponeTransactionItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Postpone to &quot;Now&quot; to reset Transaction Item to &quot;New&quot;" DeferDate="[Now]" DisplayName="Postpone Transaction Item" sap2010:WorkflowViewState.IdRef="PostponeTransactionItem_1" TransactionItem="[in_TransactionItem]" />
                  <Throw sap2010:Annotation.AnnotationText="Aurion locked for payroll processing" DisplayName="Throw Aurion locked" Exception="[New Exception(&quot;Aurion is locked for payroll processing&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_7" />
                </Sequence>
              </If.Then>
            </If>
            <ui:RetryScope DisplayName="Retry Scope - Get Visible Text 'Pay Scale History'" sap2010:WorkflowViewState.IdRef="RetryScope_14" NumberOfRetries="3" RetryInterval="00:00:05">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_59">
                    <Assign DisplayName="Assign payScaleHistory = &quot;&quot;" sap2010:WorkflowViewState.IdRef="Assign_47">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[payScaleHistory]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:GetVisibleText WordsInfo="{x:Null}" DisplayName="Get Visible Text 'Pay Scale History'" FormattedText="False" sap2010:WorkflowViewState.IdRef="GetVisibleText_5">
                      <ui:GetVisibleText.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="8bba84daf234c5a1874752a8b2466458" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='UniLabel' idx='17' /&gt;&lt;nav up='1' /&gt;&lt;wnd cls='AfxWnd140u' idx='2' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                      </ui:GetVisibleText.Target>
                      <ui:GetVisibleText.Text>
                        <OutArgument x:TypeArguments="x:String">[payScaleHistory]</OutArgument>
                      </ui:GetVisibleText.Text>
                    </ui:GetVisibleText>
                  </Sequence>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsFalse sap2010:Annotation.AnnotationText="payScaleHistory = &quot;&quot;" DisplayName="Is false" sap2010:WorkflowViewState.IdRef="IsFalse_1" Input="[String.IsNullOrEmpty(payScaleHistory)]" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <If Condition="[payScaleHistory.ToUpper.Contains(&quot;PENDING&quot;)]" DisplayName="If Pending pay increment" sap2010:WorkflowViewState.IdRef="If_6">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_39">
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Warn" Message="[&quot;Employee has pending pay increment&quot;]" />
                  <Assign DisplayName="Assign out_systemErrorStatus" sap2010:WorkflowViewState.IdRef="Assign_33">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_systemErrorStatus]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Error</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign in_systemErrorNotes" sap2010:WorkflowViewState.IdRef="Assign_34">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[in_systemErrorNotes]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">["Employee has pending pay increment in Aurion.  Please investigate."]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateReport workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Report\UpdateReport.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                      <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                      <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_ReportDT">[io_reportDT]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_employeeName">[in_employeeName]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_employeeNumber">[in_EmployeeNumber]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_proposedContractStartDate">[in_proposedContractStartDate]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_proposedContractEndDate">[in_proposedContractEndDate]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorNotes">[in_systemErrorNotes]</InArgument>
                      <InOutArgument x:TypeArguments="x:String" x:Key="io_DTasHTML" />
                      <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorStatus">[out_systemErrorStatus]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_currentContractEndDate">[out_currentContractEndDate]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_pstName">[in_pstName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists 'Cancel&quot; button" sap2010:WorkflowViewState.IdRef="UiElementExists_9">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="cf06fd38cce780407ad776b5afc3237c" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='Button' title='Cancel' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                    </ui:UiElementExists.Target>
                  </ui:UiElementExists>
                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Cancel'" sap2010:WorkflowViewState.IdRef="Click_18" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="aea794c1f3848db9d844ea4d43ab1291" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='Button' title='Cancel' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                    </ui:Click.Target>
                  </ui:Click>
                  <ui:RetryScope sap2010:Annotation.AnnotationText="Magnifying glass located upper right" DisplayName="Retry Scope Click 'Search'" sap2010:WorkflowViewState.IdRef="RetryScope_10" NumberOfRetries="3" RetryInterval="00:00:05">
                    <ui:RetryScope.ActivityBody>
                      <ActivityAction>
                        <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_38">
                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" sap2010:Annotation.AnnotationText="Magnifying glass located upper right" ClickType="CLICK_SINGLE" DisplayName="Click 'Search'" sap2010:WorkflowViewState.IdRef="Click_19" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="2fd12da003f721e2f1331d0793794a89" Selector="&lt;wnd aaname='Placements' cls='Edit' /&gt;&lt;nav up='2' /&gt;&lt;wnd cls='OwiCmdButton' idx='2' /&gt;" WaitForReady="COMPLETE" />
                            </ui:Click.Target>
                          </ui:Click>
                          <ui:UiElementExists DisplayName="Element Exists 'Quick Search'" Exists="[searchClicked]" sap2010:WorkflowViewState.IdRef="UiElementExists_10">
                            <ui:UiElementExists.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="853dfee03e218ea5f7d4de91c6be8c90" Selector="&lt;wnd app='aurion.exe' cls='UniApplication' /&gt;&lt;wnd aaname='Select Employee' cls='Edit' /&gt;&lt;nav up='2' /&gt;&lt;wnd cls='Edit' idx='7' /&gt;" TimeoutMS="15000" WaitForReady="COMPLETE" />
                            </ui:UiElementExists.Target>
                          </ui:UiElementExists>
                        </Sequence>
                      </ActivityAction>
                    </ui:RetryScope.ActivityBody>
                    <ui:RetryScope.Condition>
                      <ActivityFunc x:TypeArguments="x:Boolean">
                        <p:IsTrue DisplayName="Is true (searchClicked)" sap2010:WorkflowViewState.IdRef="IsTrue_10" Input="[searchClicked]" />
                      </ActivityFunc>
                    </ui:RetryScope.Condition>
                  </ui:RetryScope>
                  <Throw DisplayName="Throw Pending pay increment" Exception="[New BusinessRuleException(&quot;Pending pay increment&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_4" />
                </Sequence>
              </If.Then>
            </If>
            <ui:ClickText ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Text 'Date' (Newest placement by date)" FormattedText="False" sap2010:WorkflowViewState.IdRef="ClickText_3" KeyModifiers="None" MouseButton="BTN_LEFT" Occurrence="1" SendWindowMessages="False" Text="[out_currentContractEndDate.ToString(&quot;dd-MMM-yyyy&quot;).ToUpper]">
              <ui:ClickText.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:ClickText.CursorPosition>
              <ui:ClickText.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="0837b5a33d78ec1d936ef11f4b1fe5d9" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='AfxWnd140u' idx='2' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
              </ui:ClickText.Target>
            </ui:ClickText>
            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Copy'" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="cd643ebe2e95f14d4d2f5531d005f43c" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='Button' title='Copy' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
              </ui:Click.Target>
            </ui:Click>
            <Sequence sap2010:Annotation.AnnotationText="Proposed contract start date, end date and comments are sent to clipboard and pasted into Aurion." DisplayName="Paste Contract Dates and Comments" sap2010:WorkflowViewState.IdRef="Sequence_14">
              <ui:SetToClipboard DisplayName="Set To Clipboard (in_proposedContractStartDate)" sap2010:WorkflowViewState.IdRef="SetToClipboard_1" Text="[in_proposedContractStartDate.ToString(&quot;dd-MMM-yyyy&quot;).ToUpper]" />
              <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey 'ctrl + v'" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="v" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b9a2bae68ea2fe454d6bd6faf59156cc" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='uPaneClass' idx='2' /&gt;&lt;ctrl role='client' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                </ui:SendHotkey.Target>
              </ui:SendHotkey>
              <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey &quot;tab'" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="tab" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b9a2bae68ea2fe454d6bd6faf59156cc" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='uPaneClass' idx='2' /&gt;&lt;ctrl role='client' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                </ui:SendHotkey.Target>
              </ui:SendHotkey>
              <ui:SetToClipboard DisplayName="Set To Clipboard (in_proposedContractEndDate)" sap2010:WorkflowViewState.IdRef="SetToClipboard_2" Text="[in_proposedContractEndDate.ToString(&quot;dd-MMM-yyyy&quot;).ToUpper]" />
              <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey 'ctrl + v'" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="v" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b9a2bae68ea2fe454d6bd6faf59156cc" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='uPaneClass' idx='2' /&gt;&lt;ctrl role='client' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                </ui:SendHotkey.Target>
              </ui:SendHotkey>
              <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey &quot;tab'" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="tab" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b9a2bae68ea2fe454d6bd6faf59156cc" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='uPaneClass' idx='2' /&gt;&lt;ctrl role='client' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                </ui:SendHotkey.Target>
              </ui:SendHotkey>
              <ui:SetToClipboard DisplayName="Set To Clipboard" sap2010:WorkflowViewState.IdRef="SetToClipboard_4" Text="[&quot;UniTask &quot; + in_TransactionItem.Reference]" />
              <Assign DisplayName="Assign counter = 0" sap2010:WorkflowViewState.IdRef="Assign_44">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                </Assign.Value>
              </Assign>
              <DoWhile DisplayName="Do While Comments are not cleared" sap2010:WorkflowViewState.IdRef="DoWhile_1" Condition="[Not commentsText.Trim.Equals(&quot;&quot;)]">
                <Sequence DisplayName="Sequence" sap2010:WorkflowViewState.IdRef="Sequence_53">
                  <Assign DisplayName="Assign counter + 1" sap2010:WorkflowViewState.IdRef="Assign_45">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[counter + 1]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'Comments'" EmptyField="True" sap2010:WorkflowViewState.IdRef="TypeInto_3" SendWindowMessages="False" SimulateType="False">
                    <ui:TypeInto.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="42e63078f38be67e50011cd336d2e1eb" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='UniLabel' idx='14' /&gt;&lt;nav up='1' /&gt;&lt;wnd cls='Edit' idx='5' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                    </ui:TypeInto.Target>
                    <ui:TypeInto.Text>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:TypeInto.Text>
                  </ui:TypeInto>
                  <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'Comments'" sap2010:WorkflowViewState.IdRef="GetValue_1">
                    <ui:GetValue.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="42e63078f38be67e50011cd336d2e1eb" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='UniLabel' idx='14' /&gt;&lt;nav up='1' /&gt;&lt;wnd cls='Edit' idx='5' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                    </ui:GetValue.Target>
                    <ui:GetValue.Value>
                      <OutArgument x:TypeArguments="x:String">[commentsText]</OutArgument>
                    </ui:GetValue.Value>
                  </ui:GetValue>
                  <If Condition="[counter = 10]" DisplayName="If counter = 10, paste comments and continue" sap2010:WorkflowViewState.IdRef="If_10">
                    <If.Then>
                      <Assign DisplayName="Assign commentsText = &quot;&quot;" sap2010:WorkflowViewState.IdRef="Assign_46">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[commentsText]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                </Sequence>
              </DoWhile>
              <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Send Hotkey 'ctrl + v' to &quot;Comments&quot; field" EmptyField="True" sap2010:WorkflowViewState.IdRef="SendHotkey_6" Key="v" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="41326a161c19f827e76978852dd04a4b" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='UniLabel' idx='14' /&gt;&lt;nav up='1' /&gt;&lt;wnd cls='Edit' idx='5' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                </ui:SendHotkey.Target>
              </ui:SendHotkey>
            </Sequence>
            <Sequence DisplayName="Accept proposed contract" sap2010:WorkflowViewState.IdRef="Sequence_54">
              <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists 'Accept&quot; button" sap2010:WorkflowViewState.IdRef="UiElementExists_14">
                <ui:UiElementExists.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="667d055e482b4cd073e61b5cf2772531" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='Button' title='Accept' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                </ui:UiElementExists.Target>
              </ui:UiElementExists>
              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Accept'" sap2010:WorkflowViewState.IdRef="Click_23" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="667d055e482b4cd073e61b5cf2772531" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='Button' title='Accept' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                </ui:Click.Target>
              </ui:Click>
              <ui:UiElementExists sap2010:Annotation.AnnotationText="Pop up to update Employee's Contract Expiry Date" DisplayName="Element Exists 'Yes' button" Exists="[contractExpiryPopUpExists]" sap2010:WorkflowViewState.IdRef="UiElementExists_15">
                <ui:UiElementExists.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b8b178053bdae3808cde8c0810c281bd" Selector="&lt;wnd app='aurion.exe' cls='#32770' title='Aurion' /&gt;&lt;wnd aaname='Yes' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                </ui:UiElementExists.Target>
              </ui:UiElementExists>
              <If Condition="[contractExpiryPopUpExists]" DisplayName="If contractExpiryPopUpExists" sap2010:WorkflowViewState.IdRef="If_11">
                <If.Then>
                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Yes'" sap2010:WorkflowViewState.IdRef="Click_24" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="98684c8a54d4d059d90b49fea1a0f8f9" Selector="&lt;wnd app='aurion.exe' cls='#32770' title='Aurion' /&gt;&lt;wnd aaname='Yes' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                    </ui:Click.Target>
                  </ui:Click>
                </If.Then>
              </If>
            </Sequence>
            <ui:CommentOut DisplayName="Comment Out - FOR DEV ONLY" sap2010:WorkflowViewState.IdRef="CommentOut_15">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_55">
                  <If sap2010:Annotation.AnnotationText="If Operating Environment = DEV don't save proposed contract" Condition="[in_Config(&quot;OperatingEnvironment&quot;).ToString.ToUpper.Equals(&quot;DEV&quot;)]" DisplayName="If Operating Environment = DEV don't save proposed contract" sap2010:WorkflowViewState.IdRef="If_3">
                    <If.Then>
                      <Sequence DisplayName="Cancel proposed contract" sap2010:WorkflowViewState.IdRef="Sequence_7">
                        <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists 'Cancel&quot; button" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                          <ui:UiElementExists.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="cf06fd38cce780407ad776b5afc3237c" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='Button' title='Cancel' /&gt;" TimeoutMS="3000" WaitForReady="COMPLETE" />
                          </ui:UiElementExists.Target>
                        </ui:UiElementExists>
                        <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Cancel'" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="aea794c1f3848db9d844ea4d43ab1291" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='Button' title='Cancel' /&gt;" WaitForReady="COMPLETE" />
                          </ui:Click.Target>
                        </ui:Click>
                        <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'No'" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="5d9726fda224fcbcd1afdb6bee87abe1" Selector="&lt;wnd app='aurion.exe' cls='#32770' title='Aurion' /&gt;&lt;wnd aaname='No' /&gt;" WaitForReady="COMPLETE" />
                          </ui:Click.Target>
                        </ui:Click>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Accept proposed contract" sap2010:WorkflowViewState.IdRef="Sequence_29">
                        <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists 'Accept&quot; button" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
                          <ui:UiElementExists.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="667d055e482b4cd073e61b5cf2772531" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='Button' title='Accept' /&gt;" TimeoutMS="3000" WaitForReady="COMPLETE" />
                          </ui:UiElementExists.Target>
                        </ui:UiElementExists>
                        <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Accept'" sap2010:WorkflowViewState.IdRef="Click_9" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="667d055e482b4cd073e61b5cf2772531" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='Button' title='Accept' /&gt;" WaitForReady="COMPLETE" />
                          </ui:Click.Target>
                        </ui:Click>
                        <ui:UiElementExists sap2010:Annotation.AnnotationText="Pop up to update Employee's Contract Expiry Date" DisplayName="Element Exists 'Yes' button" Exists="[contractExpiryPopUpExists]" sap2010:WorkflowViewState.IdRef="UiElementExists_11">
                          <ui:UiElementExists.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b8b178053bdae3808cde8c0810c281bd" Selector="&lt;wnd app='aurion.exe' cls='#32770' title='Aurion' /&gt;&lt;wnd aaname='Yes' /&gt;" TimeoutMS="5000" WaitForReady="COMPLETE" />
                          </ui:UiElementExists.Target>
                        </ui:UiElementExists>
                        <If Condition="[contractExpiryPopUpExists]" DisplayName="If contractExpiryPopUpExists" sap2010:WorkflowViewState.IdRef="If_7">
                          <If.Then>
                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Yes'" sap2010:WorkflowViewState.IdRef="Click_20" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="98684c8a54d4d059d90b49fea1a0f8f9" Selector="&lt;wnd app='aurion.exe' cls='#32770' title='Aurion' /&gt;&lt;wnd aaname='Yes' /&gt;" WaitForReady="COMPLETE" />
                              </ui:Click.Target>
                            </ui:Click>
                          </If.Then>
                        </If>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
            <ui:RetryScope sap2010:Annotation.AnnotationText="Magnifying glass located upper right" DisplayName="Retry Scope Click 'Search'" sap2010:WorkflowViewState.IdRef="RetryScope_9" NumberOfRetries="3" RetryInterval="00:00:05">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_37">
                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" sap2010:Annotation.AnnotationText="Magnifying glass located upper right" ClickType="CLICK_SINGLE" DisplayName="Click 'Search'" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                      <ui:Click.CursorPosition>
                        <ui:CursorPosition Position="Center">
                          <ui:CursorPosition.OffsetX>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetX>
                          <ui:CursorPosition.OffsetY>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetY>
                        </ui:CursorPosition>
                      </ui:Click.CursorPosition>
                      <ui:Click.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="2fd12da003f721e2f1331d0793794a89" Selector="&lt;wnd aaname='Placements' cls='Edit' /&gt;&lt;nav up='2' /&gt;&lt;wnd cls='OwiCmdButton' idx='2' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                      </ui:Click.Target>
                    </ui:Click>
                    <ui:UiElementExists DisplayName="Element Exists 'Quick Search'" Exists="[searchClicked]" sap2010:WorkflowViewState.IdRef="UiElementExists_8">
                      <ui:UiElementExists.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="853dfee03e218ea5f7d4de91c6be8c90" Selector="&lt;wnd app='aurion.exe' cls='UniApplication' /&gt;&lt;wnd aaname='Select Employee' cls='Edit' /&gt;&lt;nav up='2' /&gt;&lt;wnd cls='Edit' idx='7' /&gt;" TimeoutMS="60000" WaitForReady="COMPLETE" />
                      </ui:UiElementExists.Target>
                    </ui:UiElementExists>
                  </Sequence>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsTrue DisplayName="Is true (searchClicked)" sap2010:WorkflowViewState.IdRef="IsTrue_9" Input="[searchClicked]" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
          </Sequence>
        </ActivityAction>
      </ui:WindowScope.Body>
    </ui:WindowScope>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;End Aurion_CreateNewContract&quot;]" />
    <sads:DebugSymbol.Symbol>d3lDOlxVc2Vyc1x1cXNkZWJiZVxEb2N1bWVudHNcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcSFJfRml4ZWRUZXJtQXBwb2ludG1lbnRFeHBpcnlcQXVyaW9uXEF1cmlvbl9DcmVhdGVOZXdDb250cmFjdC54YW1suQNaA7sJDgIBAWA4YFUCAQJwBXCjAQMBvQRxBbgJFgIBBbkJBbkJoQECAQNwcnCgAQMBvgRxhwJxmgIDAbsEdwu1CRYCAQa5CXK5CZ4BAgEEeA18GwMBugR9DYEBIgMBtwSCAQ2+AR0DAZgEvwEN0wEdAwGMBNQBDfoBEgMB5gP7AQ3PAh0DAcED0AINkAMdAwGoA5EDDeADHQMB+gLhAw2hBB0DAeACogQNyAQdAwHMAskEDaYFEgMBhwKnBQ2nBfYBAwGEAqgFDe8FEgMBzAHwBQ3+BRgDAckB/wUNgwYiAwHEAYQGDZoGEgMBuAGbBg25Bh0DAagBugYNlgcSAgFslwcNpQccAgFmpgcNtAcYAgFjtQcNhggYAgEphwgNtAgYAgEXtQgNkwkdAgEWlAkNtAkdAgEHf4sBf/IBAwG5BH/9AX+EAgMBuASCAaEBggGrAQMBtgSCAY8BggGSAQMBtQSFARO2AR4DAZwEuwETuwGEAQMBmQS/AbIBvwG8AQMBlwS/AaABvwGjAQMBlgTCARPLAR4DAZAE0AET0AGWAQMBjQTUAZIB1AHRAQMB5wPWARH4ARwDAekD+wG1AfsBvwEDAeUD+wGiAfsBpgEDAeQD/gETxwIeAwHFA8wCE8wChAEDAcID0AKfAdACqQEDAcAD0AKMAdACkAEDAb8D0wITiAMeAwGsA40DE40DhAEDAakDkQOkAZEDrgEDAacDkQOSAZEDlQEDAaYDlAMT2AMeAwH+At0DE90D5wEDAfsC4QOuAeEDuAEDAfkC4QObAeEDnwEDAfgC5AMTmQQeAwHkAp4EE54EhQEDAeECogSyAaIEvAEDAd8CogSgAaIEowEDAd4CpQQTwAQeAwHQAsUEE8UE5QEDAc0CyQSgAckE6wEDAYgCywQRjwUcAwGYApIFEaQFHAMBigKnBXqnBfMBAwGFAqgFyAGoBYgCAwHNAaoFEe0FHAMB0AH8BYsB/AW2AQMBywH8BcEB/AXIAQMBygGBBosBgQauAgMByAGBBrkCgQa/AgMBxwH/BXD/BZQBAwHFAYQGG4QGPwMBuQGGBhGYBhwDAbsBmwavAZsGuQEDAbcBmwadAZsGoAEDAbYBngYTsQYeAwGsAbYGE7YG1gEDAakBugYbugZUAgFtvAYRlAccAgFvlwfSApcHmgMCAWiXB64ClwexAgIBZ6MHiwGjB/wBAgFroweHAqMHjgICAWqyB4sBsgf9AQIBZbIHiAKyB48CAgFktgcPtgflAQIBYLcHD7sHHwIBXLwHD8AHHwIBWMEHD8EH4QECAVXCBw/GBx8CAVHHBw/LBx8CAU3MBw/MB7MBAgFLzQcP1AcYAgFH1QcPgAgZAgEugQgPhQgfAgEqiAgPjAgkAgEmjQgPmwgaAgEjnAgPoAgkAgEeoQgPswgUAgEYlAnfAZQJ6QECARWUCc0BlAnQAQIBFJcJE6wJHgIBC7EJE7EJiAECAQiHARejASIDAaEEqwEbsgEkAwGdBLsBcrsBgQEDAZoEwwEVygEpAwGRBNABZ9ABkwEDAY4E1wET3gEcAwGIBN8BE+YBHAMBhATnARP2ASsDAewD9wET9wHLAQMB6gOAAhe0AiIDAcoDvAIbwwIkAwHGA8wCcswCgQEDAcMD1QIX9QIiAwGxA/0CG4QDJAMBrQONA3KNA4EBAwGqA5UDFZwDHgMBogOdAxWkAx4DAZ4DpQMVrgMeAwGaA68DFbYDKQMBlAO3AxW3A6ECAwGPA7gDFdcDIAMB/wLdA7UB3QPkAQMB/ALmAxeGBCIDAekCjgQblQQkAwHlAp4Ec54EggEDAeICpgQVrwQeAwHaArAEFbcEHgMB1gK4BBW/BCkDAdECxQS1AcUE4gEDAc4CzAQTzATFAQMBygLNBBPUBBwDAcYC1QQT3AQcAwHCAt0EE+wEKwMBqgLtBBONBSMDAZsCjgUTjgXFAQMBmQKTBROaBRwDAZMCmwUTogUcAwGOAqMFE6MF9wEDAYsCqwUTsgUcAwGAArMFE7oFHAMB+gG7BRPKBSsDAeIBywUT6wUjAwHTAewFE+wF3AEDAdEBhwYTlQYeAwHCAZYGE5YG6wIDAb4BlwYTlwaCAgMBvAGfBhWoBh4DAbIBqQYVsAYpAwGtAbYGqgG2BtMBAwGqAb0GE70GtQEDAaYBvgYTxQYcAwGiAcYGE80GHAMBngHOBhPdBisDAYYB3gYT4gYoAwGDAeMGE/EGHgMBgAHyBhOSByMCAXKTBxOTB7sBAgFwtgeYAbYH4gECAWG5B40BuQeaAgIBX7kHpQK5B6wCAgFetwf5AbcH/AECAV2+B40BvgeaAgIBW74HpQK+B6wCAgFavAf5AbwH/gECAVnBB5YBwQfeAQIBVsQHjQHEB5oCAgFUxAelAsQHrAICAVPCB/kBwgf8AQIBUskHjQHJB5oCAgFQyQelAskHrAICAU/HB/kBxwf+AQIBTswHecwHsAECAUzSBznSBzoCAUrPBzrPB0MCAUjVB37VB6wBAgFF1gcR/wccAgEvgwiNAYMIsQICAS2DCLwCgwjDAgIBLIEIlQKBCJgCAgErigiNAYoIgQICASiKCIwCigiTAgIBJ5kIjQGZCIECAgElmQiMApkIkwICASSeCI0BngjjAQIBIp4I7gGeCPUBAgEhnAipAZwIxgECAR+hCB2hCDoCARmjCBOxCB4CARuYCRWmCSACARGnCRWrCSoCAQyxCXSxCYUBAgEJiAEZjwEiAwGxBJABGZABmwEDAa4EkQEZlQEpAwGqBJYBGZoBJwMBpgSbARmiASIDAaIEsAFHsAFMAwGgBK0BSK0BVQMBngTFAZMBxQG7AQMBlQTFAcYBxQHNAQMBlATIAUHIAVUDAZIE3AE+3AFDAwGLBNkBP9kBVgMBiQThAT/hAVQDAYUE9AFR9AFdAwGCBO4BZe4BgwEDAYAE7wFj7wF/AwH+A/ABWvABbwMB/APsAVbsAWcDAfoD6wFZ6wFmAwH4A/MBYvMBfgMB9gPpAWrpAXUDAfQD7QFY7QFrAwHyA+oBXeoBcQMB8APnAccB5wHhAQMB7wPyAVvyAXIDAe0D9wFM9wGeAQMB6wOBAhmPAigDAd0DkAIZlAIuAwHYA5UCGa4CHgMB0AOvAhmzAi4DAcsDwQJHwQJMAwHJA74CSL4CVQMBxwPWAhndAiIDAbsD3gIZ7AIoAwG2A+0CGfQCIgMBsgOCA0eCA0wDAbAD/wJI/wJVAwGuA5oDRJoDXwMBpQOXA0WXA1cDAaMDogNCogNSAwGhA58DQ58DWAMBnwOrAxurA0oDAZ0DpwNBpwNRAwGbA68DvAGvA8UBAwGZA7EDkwGxA7sBAwGYA7EDxgGxA84BAwGXA7QDQbQDUQMBlQO3A4wCtwOeAgMBkgO3A5kBtwOtAQMBkAO6AxnEAyQDAYQDzAMd0wMmAwGAA+cDGe4DIgMB9ALvAxn9AygDAe4C/gMZhQQiAwHqApMER5METAMB6AKQBEiQBFUDAeYCrAQbrARKAwHdAqgEQagEWQMB2wK1BEK1BFIDAdkCsgRDsgRfAwHXAroEkwG6BLwBAwHVAroExwG6BM4BAwHUAr0EQb0EVgMB0gLMBIABzATCAQMBywLSBD7SBEMDAckCzwQ/zwRWAwHHAtcEP9cEVAMBwwLqBFHqBF0DAcAC5ARl5ASDAQMBvgLlBGPlBH8DAbwC5gRa5gRvAwG6AuIEVuIEZwMBuALhBFnhBGYDAbYC6QRi6QR+AwG0At8Eat8EdQMBsgLjBFjjBGsDAbAC4ARd4ARxAwGuAt0ExwHdBOEBAwGtAugEW+gEcgMBqwLtBOUB7QTvAQMBqQLtBNMB7QTWAQMBqALwBBmFBSQDAZ8CigUZigWOAQMBnAKOBU6OBZgBAwGaApgFPpgFwAEDAZYClQU/lQVXAwGUAqAFQKAFXwMBkQKdBUGdBV0DAY8CowWAAaMF9AEDAYwCsAU+sAVDAwGDAq0FP60FVgMBgQK1BT+1BVQDAfsByAVRyAVdAwH4AcIFZcIFgwEDAfYBwwVjwwV/AwH0AcQFWsQFbwMB8gHABVbABWcDAfABvwVZvwVmAwHuAccFYscFfgMB7AG9BWq9BXUDAeoBwQVYwQVrAwHoAb4FXb4FcQMB5gG7BccBuwXhAQMB5QHGBVvGBXIDAeMBywXlAcsF7wEDAeEBywXTAcsF1gEDAeABzgUZ4wUkAwHXAegFGegFjgEDAdQB7AVT7AWvAQMB0gGTBqYBkwb7AQMBwwGWBtYBlgbdAQMBwQGWBtIClgboAgMBvwGXBo8BlwbVAQMBvQGlBhulBkoDAbUBoQZBoQZSAwGzAasGkwGrBr0CAwGxAasGyAKrBs8CAwGwAa4GQa4GUgMBrgG9BoABvQayAQMBpwHDBj7DBkMDAaUBwAY/wAZWAwGjAcgGP8gGVAMBnwHbBlHbBl0DAZwB1QZl1QaDAQMBmgHWBmPWBn8DAZgB1wZa1wZvAwGWAdMGVtMGZwMBlAHSBlnSBmYDAZIB2gZi2gZ+AwGQAdAGatAGdQMBjgHUBljUBmsDAYwB0QZd0QZxAwGKAc4GxwHOBuEBAwGJAdkGW9kGcgMBhwHgBpEB4AaFAgMBhQHgBpAC4AaXAgMBhAHvBpEB7waFAgMBggHvBpAC7waXAgMBgQHyBuYB8gbwAQIBf/IG1AHyBtcBAgF+9QYZigckAgF2jwcZjwePAQIBc5MHTpMHjgECAXHXBxPeBxwCAUDfBxPoByECATzpBxPwByECATfxBxP+BxgCATCvCJEBrwjnAQIBHa8I8gGvCPkBAgEcpAmTAaQJ/QECAROkCYgCpAmPAgIBEqkJkwGpCa0CAgEQqQm4AqkJvwICAQ+nCVynCW0CAQ2NAUWNAUoDAbQEigFGigFTAwGyBJABgwGQAZgBAwGvBJMBlwGTAf4BAwGtBJMBiQKTAZACAwGsBJEBkwKRAZYCAwGrBJgBlwGYAf4BAwGpBJgBiQKYAZACAwGoBJYBsQKWAb4CAwGnBKABRaABSQMBpQSdAUadAVMDAaMEgQJ6gQKAAQMB4QOBAtgCgQLtAgMB3wOBArQCgQK3AgMB3gONApcBjQK/AQMB4wONAsoBjQLRAQMB4gOSApcBkgL1AQMB3AOSAoACkgKHAgMB2wOQAmeQAoEBAwHZA5UCJ5UCQQMB0QOXAh2sAigDAdMDsQKXAbECxQEDAc8DsQLQAbEC1wEDAc4DrwJjrwJyAwHMA9sCRdsCSgMBvgPYAkbYAlMDAbwD3gLGAt4CzwIDAbgD3gKiAt4CpQIDAbcD6gKXAeoCwAEDAboD6gLLAeoC0gEDAbkD8gJF8gJJAwG1A+8CRu8CUwMBswO7Axu7A6kCAwGJA7wDG8MDJAMBhQPRA0rRA1oDAYMDzgNLzgNgAwGBA+wDRewDSgMB9wLpA0bpA1MDAfUC7wPUAu8DlQMDAfAC7wOwAu8DswIDAe8C+wOXAfsDvwEDAfMC+wPKAfsD0QEDAfICgwRFgwRJAwHtAoAERoAEUwMB6wLxBBv/BCYDAaUCgAUbhAUwAwGgAooFeooFiwEDAZ0CzwUb3QUmAwHdAd4FG+IFMAMB2AHoBXroBYsBAwHVAfYGG4QHJgIBfIUHG4kHMAIBd48He48HjAECAXTcBz3cB0oCAUPZBz7ZB0cCAUHhB5EB4Qe1AgIBP+EHwALhB8cCAgE+5QcZ5QdIAgE97gc/7gdNAgE46weRAesHtQICATvrB8AC6wfHAgIBOvEHIfEHMQIBMfMHF/wHIAIBM5gCH5wCKgMB1gOdAh+rAioDAdQDuwNluwNuAwGOA7sDkgK7A6YCAwGMA7sDebsDjQEDAYoDwQNIwQN5AwGIA74DSb4DXgMBhgP9BJkB/QSDAgMBpwL9BI4C/QSVAgMBpgKCBZkBggWzAgMBpAKCBb4CggXFAgMBowKABWKABXMDAaEC2wWZAdsFgwIDAd8B2wWOAtsFlQIDAd4B4AWZAeAFswIDAdwB4AW+AuAFxQIDAdsB3gVi3gVzAwHZAYIHrgGCB5gCAgF9hweZAYcHswICAXuHB74ChwfFAgIBeoUHYoUHcwIBePkHHfkHTAIBNvUHQ/UHUQIBNJoCsgGaApYCAwHXA6kCsgGpAp8CAwHVAw==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="414,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Activate_1" sap:VirtualizedContainerService.HintSize="314,68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UiElementExists_3" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="SetToClipboard_3" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="SendHotkey_5" sap:VirtualizedContainerService.HintSize="314,154" />
      <sap2010:ViewStateData Id="TypeInto_2" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_31" sap:VirtualizedContainerService.HintSize="336,751">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="404,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="418,1190" />
      <sap2010:ViewStateData Id="IsTrue_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_5" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetVisibleText_1" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_52" sap:VirtualizedContainerService.HintSize="336,230">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsFalse_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_15" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Throw_5" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_41" sap:VirtualizedContainerService.HintSize="336,473">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="314,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ClickText_1" sap:VirtualizedContainerService.HintSize="314,134">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UiElementExists_13" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Check_1" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Click_22" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_47" sap:VirtualizedContainerService.HintSize="336,376">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UiElementExists_4" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="336,641">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsTrue_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_1" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ClickText_4" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="336,458">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="404,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="418,897" />
      <sap2010:ViewStateData Id="IsTrue_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_2" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="418,60" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="418,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_49" sap:VirtualizedContainerService.HintSize="418,60" />
      <sap2010:ViewStateData Id="GetVisibleText_6" sap:VirtualizedContainerService.HintSize="418,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GenerateDataTable_1" sap:VirtualizedContainerService.HintSize="418,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SortDataTable_1" sap:VirtualizedContainerService.HintSize="242,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_60" sap:VirtualizedContainerService.HintSize="264,246">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_48" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="404,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="418,685" />
      <sap2010:ViewStateData Id="Sequence_45" sap:VirtualizedContainerService.HintSize="440,1299">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsTrue_12" sap:VirtualizedContainerService.HintSize="200,64">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="RetryScope_12" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ClickText_5" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_46" sap:VirtualizedContainerService.HintSize="336,458">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_43" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_4" sap:VirtualizedContainerService.HintSize="404,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="418,897" />
      <sap2010:ViewStateData Id="IsTrue_13" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_13" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="314,102">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetVisibleText_4" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="336,499">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsFalse_3" sap:VirtualizedContainerService.HintSize="200,64">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="RetryScope_4" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="358,91" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="358,60" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="358,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="358,87" />
      <sap2010:ViewStateData Id="Click_15" sap:VirtualizedContainerService.HintSize="314,133">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UiElementExists_5" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_34" sap:VirtualizedContainerService.HintSize="336,403">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsTrue_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_6" sap:VirtualizedContainerService.HintSize="358,611">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_3" sap:VirtualizedContainerService.HintSize="358,22" />
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="380,1255">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="336,415">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="314,123">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="358,60" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="358,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="358,87" />
      <sap2010:ViewStateData Id="Click_17" sap:VirtualizedContainerService.HintSize="314,133">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UiElementExists_7" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_36" sap:VirtualizedContainerService.HintSize="336,403">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsTrue_8" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_8" sap:VirtualizedContainerService.HintSize="358,611">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="358,22" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="380,1124">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="314,138">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_3" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="UiElementExists_16" sap:VirtualizedContainerService.HintSize="314,106">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_25" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="PostponeTransactionItem_1" sap:VirtualizedContainerService.HintSize="314,64">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_7" sap:VirtualizedContainerService.HintSize="314,64">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_58" sap:VirtualizedContainerService.HintSize="336,438">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_47" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="GetVisibleText_5" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_59" sap:VirtualizedContainerService.HintSize="336,330">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsFalse_1" sap:VirtualizedContainerService.HintSize="200,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="RetryScope_14" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="358,91" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="358,60" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="358,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="358,87" />
      <sap2010:ViewStateData Id="UiElementExists_9" sap:VirtualizedContainerService.HintSize="358,106" />
      <sap2010:ViewStateData Id="Click_18" sap:VirtualizedContainerService.HintSize="358,106" />
      <sap2010:ViewStateData Id="Click_19" sap:VirtualizedContainerService.HintSize="314,133">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UiElementExists_10" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_38" sap:VirtualizedContainerService.HintSize="336,403">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsTrue_10" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_10" sap:VirtualizedContainerService.HintSize="358,611">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_4" sap:VirtualizedContainerService.HintSize="358,22" />
      <sap2010:ViewStateData Id="Sequence_39" sap:VirtualizedContainerService.HintSize="380,1547">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ClickText_3" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="Click_4" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="SetToClipboard_1" sap:VirtualizedContainerService.HintSize="512,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendHotkey_1" sap:VirtualizedContainerService.HintSize="512,154">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendHotkey_2" sap:VirtualizedContainerService.HintSize="512,154">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SetToClipboard_2" sap:VirtualizedContainerService.HintSize="512,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendHotkey_3" sap:VirtualizedContainerService.HintSize="512,154">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendHotkey_4" sap:VirtualizedContainerService.HintSize="512,154">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SetToClipboard_4" sap:VirtualizedContainerService.HintSize="512,59" />
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="512,60" />
      <sap2010:ViewStateData Id="Assign_45" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="TypeInto_3" sap:VirtualizedContainerService.HintSize="464,134" />
      <sap2010:ViewStateData Id="GetValue_1" sap:VirtualizedContainerService.HintSize="464,106" />
      <sap2010:ViewStateData Id="Assign_46" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="464,207" />
      <sap2010:ViewStateData Id="Sequence_53" sap:VirtualizedContainerService.HintSize="486,751">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_1" sap:VirtualizedContainerService.HintSize="512,912">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendHotkey_6" sap:VirtualizedContainerService.HintSize="512,154" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="314,123">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UiElementExists_14" sap:VirtualizedContainerService.HintSize="464,106" />
      <sap2010:ViewStateData Id="Click_23" sap:VirtualizedContainerService.HintSize="464,106" />
      <sap2010:ViewStateData Id="UiElementExists_15" sap:VirtualizedContainerService.HintSize="464,133">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_24" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="464,253" />
      <sap2010:ViewStateData Id="Sequence_54" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UiElementExists_1" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Click_5" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Click_7" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="336,522">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UiElementExists_2" sap:VirtualizedContainerService.HintSize="464,106" />
      <sap2010:ViewStateData Id="Click_9" sap:VirtualizedContainerService.HintSize="464,106" />
      <sap2010:ViewStateData Id="UiElementExists_11" sap:VirtualizedContainerService.HintSize="464,133">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_20" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="464,253" />
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="486,842">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="847,1016">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_55" sap:VirtualizedContainerService.HintSize="869,1140">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_15" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_6" sap:VirtualizedContainerService.HintSize="314,133">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UiElementExists_8" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_37" sap:VirtualizedContainerService.HintSize="336,403">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsTrue_9" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_9" sap:VirtualizedContainerService.HintSize="314,93">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="336,2958">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_1" sap:VirtualizedContainerService.HintSize="414,3104">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="414,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="436,3862">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Aurion_CreateNewContract_1" sap:VirtualizedContainerService.HintSize="476,3942">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>