<Activity mc:Ignorable="sap sap2010 sads" x:Class="Aurion_CreateNewContract" this:Aurion_CreateNewContract.in_payPointDT="[New System.Data.DataTable]"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="in_AurionWindow" Type="InArgument(ui:Window)" />
    <x:Property Name="in_employeeNumber" Type="InArgument(x:String)" />
    <x:Property Name="in_proposedContractStartDate" Type="InArgument(s:DateTime)" />
    <x:Property Name="in_proposedContractEndDate" Type="InArgument(s:DateTime)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_reportDT" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="in_employeeName" Type="InArgument(x:String)" />
    <x:Property Name="in_systemErrorNotes" Type="InArgument(x:String)" />
    <x:Property Name="out_payPointUsername" Type="OutArgument(x:String)" />
    <x:Property Name="out_payPointCode" Type="OutArgument(x:String)" />
    <x:Property Name="in_payPointDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="out_systemErrorStatus" Type="OutArgument(x:String)" />
    <x:Property Name="out_currentContractEndDate" Type="OutArgument(s:DateTime)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Aurion_CreateNewContract_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Aurion_CreateNewContract" sap2010:WorkflowViewState.IdRef="Sequence_5">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="sortedDatesDT" />
      <Variable x:TypeArguments="x:String" Name="selectEmployeeList" />
      <Variable x:TypeArguments="x:String" Name="placementDetailText" />
      <Variable x:TypeArguments="x:String" Name="placementProcessingDates" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New System.Data.DataTable]" Name="datesDT" />
      <Variable x:TypeArguments="x:Boolean" Name="textClicked" />
      <Variable x:TypeArguments="x:String" Name="currentContractEndDate" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Begin Aurion_CreateNewContract&quot;]" />
    <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'Aurion Au Uniapplic'" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="86b90901e960af24b4c267407a920d68" Selector="&lt;wnd app='aurion.exe' cls='UniApplication' title='Aurion*' /&gt;">
      <ui:WindowScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <ui:Activate DelayBefore="{x:Null}" DelayMS="{x:Null}" sap2010:WorkflowViewState.IdRef="Activate_1">
              <ui:Activate.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="COMPLETE" />
              </ui:Activate.Target>
            </ui:Activate>
            <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into 'Edit'" EmptyField="True" sap2010:WorkflowViewState.IdRef="TypeInto_2" SendWindowMessages="False" SimulateType="False" Text="[in_employeeNumber + &quot;[k(enter)]&quot;]">
              <ui:TypeInto.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="7bbb63482fe018ecc60946d2fdc53f70" Selector="&lt;wnd aaname='Select Employee' cls='Edit' /&gt;&lt;nav up='2' /&gt;&lt;wnd cls='Edit' idx='7' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:TypeInto.Target>
            </ui:TypeInto>
            <ui:GetVisibleText WordsInfo="{x:Null}" DisplayName="Get Visible Text 'Select Employee' list" FormattedText="False" sap2010:WorkflowViewState.IdRef="GetVisibleText_1">
              <ui:GetVisibleText.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="4ecf87810776f2b41b604e6ff52d289f" Selector="&lt;wnd cls='AfxWnd140u' idx='2' /&gt;" WaitForReady="COMPLETE" />
              </ui:GetVisibleText.Target>
              <ui:GetVisibleText.Text>
                <OutArgument x:TypeArguments="x:String">[selectEmployeeList]</OutArgument>
              </ui:GetVisibleText.Text>
            </ui:GetVisibleText>
            <ui:RetryScope DisplayName="Retry Scope - Dbl Click Text '#######' (Employee number)" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="10" RetryInterval="00:00:01">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <TryCatch DisplayName="TC: Dbl Click Text '#######' (Employee number)" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                    <TryCatch.Try>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <Assign DisplayName="Assign textClicked = False" sap2010:WorkflowViewState.IdRef="Assign_18">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[textClicked]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ClickText ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_DOUBLE" DisplayName="Dbl Click Text '#######' (Employee number)" FormattedText="False" sap2010:WorkflowViewState.IdRef="ClickText_1" KeyModifiers="None" MouseButton="BTN_LEFT" Occurrence="1" SendWindowMessages="False" Text="[in_employeeNumber]">
                          <ui:ClickText.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:ClickText.CursorPosition>
                          <ui:ClickText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="79176bb4db199712d4ee018836c2537b" Selector="&lt;wnd cls='AfxWnd140u' idx='2' /&gt;" WaitForReady="COMPLETE" />
                          </ui:ClickText.Target>
                        </ui:ClickText>
                        <Assign DisplayName="Assign textClicked = True" sap2010:WorkflowViewState.IdRef="Assign_4">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[textClicked]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Assign DisplayName="Assign textClicked = False" sap2010:WorkflowViewState.IdRef="Assign_5">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[textClicked]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsTrue DisplayName="Is true" sap2010:WorkflowViewState.IdRef="IsTrue_1" Input="[textClicked]" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <ui:RetryScope DisplayName="Retry Scope - Click Text 'Details'" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="10" RetryInterval="00:00:01">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <TryCatch DisplayName="TC: Click Text 'Details'" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                    <TryCatch.Try>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_13">
                        <Assign DisplayName="Assign textClicked = False" sap2010:WorkflowViewState.IdRef="Assign_19">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[textClicked]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ClickText ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Text 'Details'" FormattedText="False" sap2010:WorkflowViewState.IdRef="ClickText_4" KeyModifiers="None" MouseButton="BTN_LEFT" Occurrence="1" SendWindowMessages="False" Text="Details">
                          <ui:ClickText.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:ClickText.CursorPosition>
                          <ui:ClickText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="54729718152f3b9b1f1c4ff1b30a463e" Selector="&lt;wnd cls='UTabControl' idx='9' /&gt;" TimeoutMS="1000" WaitForReady="COMPLETE" />
                          </ui:ClickText.Target>
                        </ui:ClickText>
                        <Assign DisplayName="Assign textClicked = True" sap2010:WorkflowViewState.IdRef="Assign_9">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[textClicked]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Assign DisplayName="Assign textClicked = False" sap2010:WorkflowViewState.IdRef="Assign_10">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[textClicked]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsTrue DisplayName="Is true" sap2010:WorkflowViewState.IdRef="IsTrue_2" Input="[textClicked]" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <ui:RetryScope DisplayName="Retry Scope out_currentContractEndDate" sap2010:WorkflowViewState.IdRef="RetryScope_4" NumberOfRetries="3" RetryInterval="00:00:05">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_24">
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_22">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[placementDetailText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_23">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[currentContractEndDate]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_24">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:DateTime">[out_currentContractEndDate]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:DateTime">[CDate(Nothing)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:GetVisibleText WordsInfo="{x:Null}" DisplayName="Get Visible Text 'uPaneClass'" FormattedText="False" sap2010:WorkflowViewState.IdRef="GetVisibleText_4">
                      <ui:GetVisibleText.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="d175a1baa57d11310037b6a5e6956e86" Selector="&lt;wnd cls='uPaneClass' idx='28' /&gt;" WaitForReady="COMPLETE" />
                      </ui:GetVisibleText.Target>
                      <ui:GetVisibleText.Text>
                        <OutArgument x:TypeArguments="x:String">[placementDetailText]</OutArgument>
                      </ui:GetVisibleText.Text>
                    </ui:GetVisibleText>
                  </Sequence>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsTrue DisplayName="Is true" sap2010:WorkflowViewState.IdRef="IsTrue_4" Input="[placementDetailText &lt;&gt; &quot;&quot;]" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <If Condition="[placementDetailText.ToUpper.Contains(&quot;CONTINUING EMPLOYMENT&quot;)]" DisplayName="If Continuing Employment  (permanent placement)" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_26">
                  <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_15" Text="Current contract end date is CONTINUING EMPLOYMENT" />
                  <Assign DisplayName="Assign out_systemErrorStatus" sap2010:WorkflowViewState.IdRef="Assign_28">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_systemErrorStatus]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Error</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign in_systemErrorNotes" sap2010:WorkflowViewState.IdRef="Assign_29">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[in_systemErrorNotes]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">["Employee marked as ""Continuing Employment"" in Aurion.  Please investigate."]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateReport workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Report\UpdateReport.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                      <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                      <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_ReportDT">[io_reportDT]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_employeeName">[in_employeeName]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_employeeNumber">[in_EmployeeNumber]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_proposedContractStartDate">[in_proposedContractStartDate]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_proposedContractEndDate">[in_proposedContractEndDate]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorNotes">[in_systemErrorNotes]</InArgument>
                      <InOutArgument x:TypeArguments="x:String" x:Key="io_DTasHTML" />
                      <InArgument x:TypeArguments="x:String" x:Key="in_payPointCode">[out_payPointCode]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_payPointUsername">[out_payPointUsername]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorStatus">[out_systemErrorStatus]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_currentContractEndDate">[out_currentContractEndDate]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" sap2010:Annotation.AnnotationText="Magnifying glass located upper right" ClickType="CLICK_SINGLE" DisplayName="Click 'Search'" sap2010:WorkflowViewState.IdRef="Click_14" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="2fd12da003f721e2f1331d0793794a89" Selector="&lt;wnd aaname='Placements' cls='Edit' /&gt;&lt;nav up='2' /&gt;&lt;wnd cls='OwiCmdButton' idx='2' /&gt;" WaitForReady="INTERACTIVE" />
                    </ui:Click.Target>
                  </ui:Click>
                  <Throw DisplayName="Throw Continuing Employment" Exception="[New BusinessRuleException(&quot;Possible continuing employment.&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_3" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_27">
                  <Assign DisplayName="Assign currentContractEndDate" sap2010:WorkflowViewState.IdRef="Assign_13">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[currentContractEndDate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(placementDetailText,"(?&lt;=Date To)\s+\d{2}-[A-Z]{3}-\d{4}").Groups(0).ToString.Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_21">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:DateTime">[out_currentContractEndDate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:DateTime">[CDate(currentContractEndDate)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_14" Text="[&quot;Current contract end date is &quot; + out_currentContractEndDate.ToString(&quot;dd-MMM-yyyy&quot;).ToUpper]" />
                </Sequence>
              </If.Else>
            </If>
            <ui:RetryScope DisplayName="Retry Scope - Click Text 'Organisation Unit'" sap2010:WorkflowViewState.IdRef="RetryScope_3" NumberOfRetries="10" RetryInterval="00:00:01">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <TryCatch DisplayName="TC: Click Text 'Organisation Unit'" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                    <TryCatch.Try>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_16">
                        <Assign DisplayName="Assign textClicked = False" sap2010:WorkflowViewState.IdRef="Assign_20">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[textClicked]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ClickText ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Text 'Organisation Unit'" FormattedText="False" sap2010:WorkflowViewState.IdRef="ClickText_5" KeyModifiers="None" MouseButton="BTN_LEFT" Occurrence="1" SendWindowMessages="False" Text="Organisation Unit">
                          <ui:ClickText.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:ClickText.CursorPosition>
                          <ui:ClickText.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="54729718152f3b9b1f1c4ff1b30a463e" Selector="&lt;wnd cls='UTabControl' idx='9' /&gt;" TimeoutMS="1000" WaitForReady="COMPLETE" />
                          </ui:ClickText.Target>
                        </ui:ClickText>
                        <Assign DisplayName="Assign textClicked = True" sap2010:WorkflowViewState.IdRef="Assign_14">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[textClicked]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Assign DisplayName="Assign textClicked = False" sap2010:WorkflowViewState.IdRef="Assign_15">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[textClicked]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsTrue DisplayName="Is true" sap2010:WorkflowViewState.IdRef="IsTrue_3" Input="[textClicked]" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <ui:RetryScope DisplayName="Retry Scope out_payPointUsername" sap2010:WorkflowViewState.IdRef="RetryScope_5" NumberOfRetries="3" RetryInterval="00:00:05">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_25">
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_27">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[placementDetailText]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_25">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_payPointCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_26">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_payPointUsername]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:GetVisibleText WordsInfo="{x:Null}" DisplayName="Get Visible Text 'uPaneClass'" FormattedText="False" sap2010:WorkflowViewState.IdRef="GetVisibleText_2">
                      <ui:GetVisibleText.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="d175a1baa57d11310037b6a5e6956e86" Selector="&lt;wnd cls='uPaneClass' idx='28' /&gt;" WaitForReady="COMPLETE" />
                      </ui:GetVisibleText.Target>
                      <ui:GetVisibleText.Text>
                        <OutArgument x:TypeArguments="x:String">[placementDetailText]</OutArgument>
                      </ui:GetVisibleText.Text>
                    </ui:GetVisibleText>
                    <Assign DisplayName="Assign out_payPointCode" sap2010:WorkflowViewState.IdRef="Assign_1">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_payPointCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(placementDetailText,"(?&lt;=External Name).*").Groups(0).ToString.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;*&quot; + out_payPointCode + &quot;*&quot;]" />
                    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[in_payPointDT]" DisplayName="For Each Row in in_payPointDT" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                          </ActivityAction.Argument>
                          <If Condition="[row.Item(&quot;Pay Entity&quot;).ToString = out_payPointCode]" DisplayName="If row.Item(&quot;Pay Entity&quot;).ToString = out_payPointCode" sap2010:WorkflowViewState.IdRef="If_2">
                            <If.Then>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
                                <Assign DisplayName="Assign out_payPointUsername" sap2010:WorkflowViewState.IdRef="Assign_2">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[out_payPointUsername]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[row.Item("UQ Username").ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:Break sap2010:WorkflowViewState.IdRef="Break_1" />
                              </Sequence>
                            </If.Then>
                          </If>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                    </ui:ForEachRow>
                    <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;*&quot; + out_payPointUsername + &quot;*&quot;]" />
                  </Sequence>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsFalse DisplayName="Is false" sap2010:WorkflowViewState.IdRef="IsFalse_2" Input="[out_payPointUsername = &quot;&quot;]" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <ui:CommentOut DisplayName="Comment Out  DEV!!!  (Uncomment after testing)" sap2010:WorkflowViewState.IdRef="CommentOut_6">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_18">
                  <If sap2010:Annotation.AnnotationText="If employee is marked as &quot;Terminated&quot; update email report and throw BRE." Condition="[selectEmployeeList.ToUpper.Contains(&quot;TERMINATED&quot;)]" DisplayName="If terminated employee" sap2010:WorkflowViewState.IdRef="If_1">
                    <If.Then>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
                        <Assign DisplayName="Assign out_systemErrorStatus" sap2010:WorkflowViewState.IdRef="Assign_7">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[out_systemErrorStatus]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Error</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign in_systemErrorNotes" sap2010:WorkflowViewState.IdRef="Assign_8">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[in_systemErrorNotes]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Employee marked as terminated in Aurion</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateReport workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Report\UpdateReport.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                            <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                            <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_ReportDT">[io_reportDT]</InOutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_employeeName">[in_employeeName]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_employeeNumber">[in_EmployeeNumber]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_proposedContractStartDate">[in_proposedContractStartDate]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_proposedContractEndDate">[in_proposedContractEndDate]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorNotes">[in_systemErrorNotes]</InArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="io_DTasHTML" />
                            <InArgument x:TypeArguments="x:String" x:Key="in_payPointCode">[out_payPointCode]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_payPointUsername">[out_payPointUsername]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorStatus">[out_systemErrorStatus]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" sap2010:Annotation.AnnotationText="Magnifying glass located upper right" ClickType="CLICK_SINGLE" DisplayName="Click 'Search'" sap2010:WorkflowViewState.IdRef="Click_10" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="2fd12da003f721e2f1331d0793794a89" Selector="&lt;wnd aaname='Placements' cls='Edit' /&gt;&lt;nav up='2' /&gt;&lt;wnd cls='OwiCmdButton' idx='2' /&gt;" WaitForReady="INTERACTIVE" />
                          </ui:Click.Target>
                        </ui:Click>
                        <Throw DisplayName="Throw Terminated employee" Exception="[New BusinessRuleException(&quot;Employee marked as terminated in Aurion&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Update'" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="bc9e598a6dd47da6abd3bcced6d1823f" Selector="&lt;wnd cls='Button' title='Update' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:Click.Target>
            </ui:Click>
            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DisplayName="Click 'OK'  DEV!!!" sap2010:WorkflowViewState.IdRef="Click_12" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="fa49aa0b7fb6ca88e32dd884931685ca" Selector="&lt;wnd app='aurion.exe' cls='#32770' title='Aurion' /&gt;&lt;wnd ctrlid='11' title='&amp;amp;OK' /&gt;" TimeoutMS="1000" WaitForReady="COMPLETE" />
              </ui:Click.Target>
            </ui:Click>
            <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_8">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_21">
                  <ui:GetVisibleText WordsInfo="{x:Null}" DisplayName="Get Visible Text 'Placement Processing' dates" FormattedText="False" sap2010:WorkflowViewState.IdRef="GetVisibleText_3" Separators=" ">
                    <ui:GetVisibleText.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="8eaf0368da02950e7f4046c26c026a20" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='AfxWnd140u' idx='2' /&gt;" WaitForReady="COMPLETE" />
                    </ui:GetVisibleText.Target>
                    <ui:GetVisibleText.Text>
                      <OutArgument x:TypeArguments="x:String">[placementProcessingDates]</OutArgument>
                    </ui:GetVisibleText.Text>
                  </ui:GetVisibleText>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[placementProcessingDates]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(placementProcessingDates,"\t+", "\t")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:GenerateDataTable ColumnSizes="{x:Null}" Positions="{x:Null}" sap2010:Annotation.AnnotationText="DT is generated from scrape of list of Processing Dates.  This table could not be Data Scraped." CSVParsing="False" ColumnSeparators=" " DataTable="[datesDT]" DisplayName="Generate Data Table" sap2010:WorkflowViewState.IdRef="GenerateDataTable_1" Input="[placementProcessingDates]" NewLineSeparator="[Environment.NewLine]" />
                  <ui:SortDataTable ColumnIndex="{x:Null}" DataColumn="{x:Null}" sap2010:Annotation.AnnotationText="Sort DT by date to find newest placement by date." ColumnName="Column1" DataTable="[datesDT]" DisplayName="Sort Data Table" sap2010:WorkflowViewState.IdRef="SortDataTable_1" Order="Decending" OutputDataTable="[sortedDatesDT]" />
                  <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[&quot;Current end date = &quot; + CDate(CStr(sortedDatesDT.Rows(0)(&quot;Column2&quot;))).ToString(&quot;dd-MMM-yyyy&quot;).ToUpper]" />
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
            <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="[&quot;Proposed start date = &quot; + in_proposedContractStartDate.ToString(&quot;dd-MMM-yyyy&quot;).ToUpper]" />
            <If sap2010:Annotation.AnnotationText="If UniTask propesed contract start date minus one day is newer than Aurion current contract end date, update email report and throw BRE." Condition="[out_currentContractEndDate &gt; in_proposedContractStartDate]" DisplayName="If proposed contract start date is before current contract end date" sap2010:WorkflowViewState.IdRef="If_4">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_19">
                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Cancel'" sap2010:WorkflowViewState.IdRef="Click_13" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="aea794c1f3848db9d844ea4d43ab1291" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='Button' title='Cancel' /&gt;" WaitForReady="COMPLETE" />
                    </ui:Click.Target>
                  </ui:Click>
                  <Assign DisplayName="Assign out_systemErrorStatus" sap2010:WorkflowViewState.IdRef="Assign_16">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[out_systemErrorStatus]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Error</InArgument>
                    </Assign.Value>
                  </Assign>
                  <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_11" Text="[in_proposedContractStartDate.ToString(&quot;dd-MMM-yyyy&quot;).ToUpper]" />
                  <Assign DisplayName="Assign in_systemErrorNotes" sap2010:WorkflowViewState.IdRef="Assign_17">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[in_systemErrorNotes]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">["Unitask proposed contract start date overlaps in Aurion, Aurion current contract end date is """ + out_currentContractEndDate.ToString("dd-MMM-yyyy").ToUpper + """ and UniTask proposed contract start date is """ + in_proposedContractStartDate.ToString("dd-MMM-yyyy").ToUpper + """.  Please investigate."]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="[out_currentContractEndDate.ToString(&quot;dd-MMM-yyyy&quot;).ToUpper]" />
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateReport workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Report\UpdateReport.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                      <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                      <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_ReportDT">[io_reportDT]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_employeeName">[in_employeeName]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_employeeNumber">[in_EmployeeNumber]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_proposedContractStartDate">[in_proposedContractStartDate]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_proposedContractEndDate">[in_proposedContractEndDate]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorNotes">[in_systemErrorNotes]</InArgument>
                      <InOutArgument x:TypeArguments="x:String" x:Key="io_DTasHTML" />
                      <InArgument x:TypeArguments="x:String" x:Key="in_payPointCode">[out_payPointCode]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_payPointUsername">[out_payPointUsername]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorStatus">[out_systemErrorStatus]</InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="in_currentContractEndDate">[out_currentContractEndDate]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" sap2010:Annotation.AnnotationText="Magnifying glass located upper right" ClickType="CLICK_SINGLE" DisplayName="Click 'Search'" sap2010:WorkflowViewState.IdRef="Click_11" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="2fd12da003f721e2f1331d0793794a89" Selector="&lt;wnd aaname='Placements' cls='Edit' /&gt;&lt;nav up='2' /&gt;&lt;wnd cls='OwiCmdButton' idx='2' /&gt;" WaitForReady="INTERACTIVE" />
                    </ui:Click.Target>
                  </ui:Click>
                  <Throw DisplayName="Throw Overlapping contract dates" Exception="[New BusinessRuleException(&quot;Contract dates overlap between Aurion and Unitask&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_2" />
                </Sequence>
              </If.Then>
            </If>
            <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_9">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_22">
                  <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[CDate(CStr(sortedDatesDT.Rows(0)(&quot;Column1&quot;))).ToString(&quot;dd-MMM-yyyy&quot;).ToUpper]" />
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
            <ui:ClickText ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Text 'Date' (Newest placement by date)" FormattedText="False" sap2010:WorkflowViewState.IdRef="ClickText_3" KeyModifiers="None" MouseButton="BTN_LEFT" Occurrence="1" SendWindowMessages="False" Text="[out_currentContractEndDate.ToString(&quot;dd-MMM-yyyy&quot;).ToUpper]">
              <ui:ClickText.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:ClickText.CursorPosition>
              <ui:ClickText.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="0837b5a33d78ec1d936ef11f4b1fe5d9" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='AfxWnd140u' idx='2' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:ClickText.Target>
            </ui:ClickText>
            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Copy'" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="cd643ebe2e95f14d4d2f5531d005f43c" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='Button' title='Copy' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:Click.Target>
            </ui:Click>
            <Sequence sap2010:Annotation.AnnotationText="Proposed contract start and end dates are sent to clipboard and pasted into Aurion." DisplayName="Paste Contract Dates" sap2010:WorkflowViewState.IdRef="Sequence_14">
              <ui:SetToClipboard DisplayName="Set To Clipboard (in_proposedContractStartDate)" sap2010:WorkflowViewState.IdRef="SetToClipboard_1" Text="[in_proposedContractStartDate.ToString(&quot;dd-MMM-yyyy&quot;).ToUpper]" />
              <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey 'ctrl + v'" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="v" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="b9a2bae68ea2fe454d6bd6faf59156cc" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='uPaneClass' idx='2' /&gt;&lt;ctrl role='client' /&gt;" WaitForReady="INTERACTIVE" />
                </ui:SendHotkey.Target>
              </ui:SendHotkey>
              <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey &quot;tab'" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="tab" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="b9a2bae68ea2fe454d6bd6faf59156cc" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='uPaneClass' idx='2' /&gt;&lt;ctrl role='client' /&gt;" WaitForReady="INTERACTIVE" />
                </ui:SendHotkey.Target>
              </ui:SendHotkey>
              <ui:SetToClipboard DisplayName="Set To Clipboard (in_proposedContractEndDate)" sap2010:WorkflowViewState.IdRef="SetToClipboard_2" Text="[in_proposedContractEndDate.ToString(&quot;dd-MMM-yyyy&quot;).ToUpper]" />
              <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey 'ctrl + v'" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="v" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="b9a2bae68ea2fe454d6bd6faf59156cc" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='uPaneClass' idx='2' /&gt;&lt;ctrl role='client' /&gt;" WaitForReady="INTERACTIVE" />
                </ui:SendHotkey.Target>
              </ui:SendHotkey>
              <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey &quot;tab'" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="tab" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="b9a2bae68ea2fe454d6bd6faf59156cc" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='uPaneClass' idx='2' /&gt;&lt;ctrl role='client' /&gt;" WaitForReady="INTERACTIVE" />
                </ui:SendHotkey.Target>
              </ui:SendHotkey>
            </Sequence>
            <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_4">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <Delay DisplayName="Delay 00:00:02" Duration="00:00:02" sap2010:WorkflowViewState.IdRef="Delay_1" />
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
            <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists 'Cancel&quot; button" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='Button' title='Cancel' /&gt;" TimeoutMS="3000" WaitForReady="COMPLETE" />
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <ui:UiElementExists Exists="{x:Null}" DisplayName="Element Exists 'Accept&quot; button" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='Button' title='Accept' /&gt;" TimeoutMS="3000" WaitForReady="COMPLETE" />
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <If Condition="[in_Config(&quot;OperatingEnvironment&quot;).ToString.ToUpper.Equals(&quot;DEV&quot;)]" DisplayName="If Operating Environment = DEV don't save proposed contract" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Cancel'" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="aea794c1f3848db9d844ea4d43ab1291" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='Button' title='Cancel' /&gt;" WaitForReady="COMPLETE" />
                    </ui:Click.Target>
                  </ui:Click>
                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'No'" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="5d9726fda224fcbcd1afdb6bee87abe1" Selector="&lt;wnd app='aurion.exe' cls='#32770' title='Aurion' /&gt;&lt;wnd aaname='No' /&gt;" WaitForReady="COMPLETE" />
                    </ui:Click.Target>
                  </ui:Click>
                </Sequence>
              </If.Then>
              <If.Else>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Accept'" sap2010:WorkflowViewState.IdRef="Click_9" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="667d055e482b4cd073e61b5cf2772531" Selector="&lt;wnd app='aurion.exe' cls='UniForm' title='Placement Processing' /&gt;&lt;wnd cls='Button' title='Accept' /&gt;" WaitForReady="COMPLETE" />
                  </ui:Click.Target>
                </ui:Click>
              </If.Else>
            </If>
            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" sap2010:Annotation.AnnotationText="Magnifying glass located upper right" ClickType="CLICK_SINGLE" DisplayName="Click 'Search'" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="2fd12da003f721e2f1331d0793794a89" Selector="&lt;wnd aaname='Placements' cls='Edit' /&gt;&lt;nav up='2' /&gt;&lt;wnd cls='OwiCmdButton' idx='2' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:Click.Target>
            </ui:Click>
          </Sequence>
        </ActivityAction>
      </ui:WindowScope.Body>
    </ui:WindowScope>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;End Aurion_CreateNewContract&quot;]" />
    <sads:DebugSymbol.Symbol>d3lDOlxVc2Vyc1x1cXNkZWJiZVxEb2N1bWVudHNcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcSFJfRml4ZWRUZXJtQXBwb2ludG1lbnRFeHBpcnlcQXVyaW9uXEF1cmlvbl9DcmVhdGVOZXdDb250cmFjdC54YW1s/AEBegGWAQECXgPsBg4CAQFkOGRVAgECaAVoowEDAcgCaQXpBhYCAQXqBgXqBqEBAgEDaHJooAEDAckCaZQCadkCAwHHAm8L5gYWAgEG6gZy6gaeAQIBBHANdBsDAcYCdQ15GwMBwgJ6DYEBIQMBvgKCAQ3CAR0DAaUCwwENgwIdAwGMAoQCDbQCHQMB9QG1Ag2BAxIDAbsBggMNwgMdAwGiAcMDDZcEHQIBdZgEDdMEHQIBdNQEDeIEGAIBcuMEDfEEGAIBbvIEDYoFHQIBbYsFDYsF1gECAWqMBQ3TBRICATXUBQ3aBR0CATTbBQ3pBRwCAS/qBQ34BRgCAS35BQ2QBhgCARqRBg2XBh0CARmYBg2cBiICARadBg2hBiICAROiBg3WBhICAQnXBg3lBhgCAQd3oAF3hwIDAcUCdZwCdcoCAwHDAnygAXzIAQMBwQJ/OX9NAwG/AoIBtQGCAb8BAwG9AoIBogGCAaYBAwG8AoUBE7oBHgMBqQK/ARO/AXYDAaYCwwGfAcMBqQEDAaQCwwGMAcMBkAEDAaMCxgET+wEeAwGQAoACE4ACdgMBjQKEAqIBhAKsAQMBiwKEApABhAKTAQMBigKHAhOsAh4DAfkBsQITsQKUAQMB9gG1Ahu1AmYDAbwBtwIR6gIcAwHMAe0CEf8CHAMBvgGCA6kBggOzAQMBugGCA5YBggOaAQMBuQGFAxO6Ax4DAaYBvwMTvwN2AwGjAcMDnAHDA6YBAwGhAcMDigHDA40BAwGgAcYDE48EHgIBeZQEE5QEkQECAXbgBKAB4ATLAQIBc+8EiwHvBPQBAgFx7wT/Ae8EhQICAXDjBGrjBHACAW+LBWSLBdMBAgFrjAXIAYwFiAICATaOBRHRBRwCATnbBdIC2wWaAwIBMdsFrgLbBbECAgEw5wWgAecFkQICATP2BaAB9gWSAgIBLvoFD/oF5QECASr7BQ//BR8CASeABg+EBh8CASSFBg+FBuEBAgEhhgYPigYfAgEeiwYPjwYfAgEbmgZSmgbGAQIBGJoG0QGaBtcBAgEXnwZSnwbGAQIBFZ8G0QGfBtcBAgEUogYbogZzAgEKpAYRwwYcAgEOxgYR1AYcAgEM4wagAeMGigICAQiHARenASIDAa4CrwEbtgEkAwGqAr8BZL8BcwMBpwLIARfoASIDAZUC8AEb9wEkAwGRAoACZIACcwMBjgKIAhWRAh4DAYYCkgIVmwIeAwGCApwCFaMCHgMB/gGkAhWrAikDAfoBsQJksQKRAQMB9wG4AhO4AqIBAwHzAbkCE8ACHAMB7wHBAhPIAhwDAesByQIT2QIrAwHRAdoCE+gCHgMBzwHpAhPpAsUBAwHNAe4CE/UCHAMBxwH2AhP9AhwDAcIB/gIT/gLiAQMBvwGHAxenAyIDAasBrwMbtgMkAwGnAb8DZL8DcwMBpAHHAxXQAx4DAZwB0QMV2gMeAwGYAdsDFeQDHgMBlAHlAxXsAykDAZAB7QMV9AMeAwGLAfUDFfUDowEDAYgB9gMVjQQlAgF9jgQVjgSnAQIBepQEZ5QEjgECAXePBROdBR4CAWieBROlBRwCAWSmBROmBbgBAgFhpwUTrgUcAgFbrwUTrwW2AQIBWLAFE8AFKwIBPsEFE88FHgIBPNAFE9AF3AECATr6BZgB+gXiAQIBK/0FogH9Ba8CAgEp+wX5AfsF/AECASiCBqIBggavAgIBJoAG+QGABv4BAgElhQaWAYUG3gECASKIBqIBiAavAgIBIIYG+QGGBvwBAgEfjQaiAY0GrwICAR2LBvkBiwb+AQIBHKUGE7MGHgIBEbQGE8IGHgIBD9IGpAHSBpgCAgENiAEZjwEiAwG4ApABGZ4BKAMBswKfARmmASIDAa8CtAFHtAFMAwGtArEBSLEBVQMBqwLJARnQASIDAZ8C0QEZ3wEoAwGaAuABGecBIgMBlgL1AUf1AUwDAZQC8gFI8gFVAwGSAo4CG44CSgMBiQKKAkGKAlYDAYcCmAIbmAJKAwGFApQCQZQCWQMBgwKhAkKhAlIDAYECngJDngJfAwH/AaYCqAGmAtEBAwH9AakCQakCVgMB+wG4Amu4Ap8BAwH0Ab4CPr4CQwMB8gG7Aj+7AlYDAfABwwI/wwJUAwHsAdQCVtQCaAMB6QHVAlrVAnADAecB0AJl0AKDAQMB5QHRAmPRAn8DAeMB0gJa0gJvAwHhAc4CVs4CZwMB3wHNAlnNAmYDAd0B1wJi1wJ+AwHbAcsCassCdQMB2QHPAljPAmsDAdcBzAJdzAJxAwHVAckCxwHJAuEBAwHUAdYCW9YCcgMB0gHmAqYB5gKQAgMB0AHpAk7pApgBAwHOAfMCPvMCwAEDAcoB8AI/8AJXAwHIAfsCQPsCXwMBxQH4AkH4Al0DAcMB/gJr/gLfAQMBwAGIAxmPAyIDAbUBkAMZngMoAwGwAZ8DGaYDIgMBrAG0A0e0A0wDAaoBsQNIsQNVAwGoAc0DG80DSgMBnwHJA0HJA1YDAZ0B1wMb1wNKAwGbAdMDQdMDUwMBmQHhAxvhA0oDAZcB3QNB3QNXAwGVAecDqAHnA9EBAwGTAeoDQeoDVgMBkQHyA0DyA7MBAwGOAe8DQe8DUwMBjAH1A2z1A6ABAwGJAfYDRvYDVwMBhgH8AxuKBCACAX6OBGyOBKQBAgF7mwWmAZsFmgICAWmjBT6jBUMCAWegBT+gBVYCAWWmBWumBbUBAgFiqQU/qQVUAgFcrwVrrwWzAQIBWbsFVrsFaAIBVrwFWrwFcAIBVLcFZbcFgwECAVK4BWO4BX8CAVC5BVq5BW8CAU61BVa1BWcCAUy0BVm0BWYCAUq+BWK+BX4CAUiyBWqyBXUCAUa2BVi2BWsCAUSzBV2zBXECAUKwBccBsAXhAQIBQb0FW70FcgIBP80FpgHNBZACAgE90AVT0AWvAQIBO7EGpgGxBpoCAgESwAamAcAG+wECARCNAUWNAUoDAbsCigFGigFTAwG5ApAB3AKQAfECAwG1ApABuAKQAbsCAwG0ApwBrAGcAdQBAwG3AqQBRaQBSQMBsgKhAUahAVMDAbACzgFFzgFKAwGiAssBRssBUwMBoALRAcYC0QHPAgMBnALRAaIC0QGlAgMBmwLdAZcB3QHAAQMBngLdAcsB3QHRAQMBnQLlAUXlAUkDAZkC4gFG4gFTAwGXAo0DRY0DSgMBuAGKA0aKA1MDAbYBkAPQApAD4wIDAbIBkAOsApADrwIDAbEBnAOXAZwDwAEDAbQBnAPLAZwD0QEDAbMBpANFpANJAwGvAaEDRqEDUwMBrQH8Ayn8A2kCAX/+Ax+IBCoDAYAB/wMhhgQqAwGCAYcEIYcEVwMBgQGEBEyEBG4DAYUBgQRNgQRjAwGDAQ==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="711,91" />
      <sap2010:ViewStateData Id="Activate_1" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TypeInto_2" sap:VirtualizedContainerService.HintSize="675,134" />
      <sap2010:ViewStateData Id="GetVisibleText_1" sap:VirtualizedContainerService.HintSize="675,106" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ClickText_1" sap:VirtualizedContainerService.HintSize="314,134">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="336,458">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="418,685" />
      <sap2010:ViewStateData Id="IsTrue_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_1" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ClickText_4" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="336,458">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="418,685" />
      <sap2010:ViewStateData Id="IsTrue_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_2" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="GetVisibleText_4" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="336,530">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsTrue_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_4" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_15" sap:VirtualizedContainerService.HintSize="314,61" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Click_14" sap:VirtualizedContainerService.HintSize="314,133">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="336,747">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="WriteLine_14" sap:VirtualizedContainerService.HintSize="242,61" />
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="264,385">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ClickText_5" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="336,458">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="418,685" />
      <sap2010:ViewStateData Id="IsTrue_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_3" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="494,60" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="494,60" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="494,60" />
      <sap2010:ViewStateData Id="GetVisibleText_2" sap:VirtualizedContainerService.HintSize="494,106" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="494,60" />
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="494,61" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Break_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="264,246">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,394" />
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="494,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="494,61" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="336,923">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsFalse_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_5" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Click_10" sap:VirtualizedContainerService.HintSize="314,133">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="336,646">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,820">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="486,944">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_6" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_3" sap:VirtualizedContainerService.HintSize="675,106" />
      <sap2010:ViewStateData Id="Click_12" sap:VirtualizedContainerService.HintSize="675,106" />
      <sap2010:ViewStateData Id="GetVisibleText_3" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="GenerateDataTable_1" sap:VirtualizedContainerService.HintSize="314,101">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SortDataTable_1" sap:VirtualizedContainerService.HintSize="314,64">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_5" sap:VirtualizedContainerService.HintSize="314,61" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="336,675">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_8" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_8" sap:VirtualizedContainerService.HintSize="675,61" />
      <sap2010:ViewStateData Id="Click_13" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteLine_11" sap:VirtualizedContainerService.HintSize="314,61" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteLine_10" sap:VirtualizedContainerService.HintSize="314,61" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Click_11" sap:VirtualizedContainerService.HintSize="314,133">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="336,994">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="675,1183">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_3" sap:VirtualizedContainerService.HintSize="210,61" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="232,185">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_9" sap:VirtualizedContainerService.HintSize="675,263" />
      <sap2010:ViewStateData Id="ClickText_3" sap:VirtualizedContainerService.HintSize="675,134" />
      <sap2010:ViewStateData Id="Click_4" sap:VirtualizedContainerService.HintSize="675,106" />
      <sap2010:ViewStateData Id="SetToClipboard_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="SendHotkey_1" sap:VirtualizedContainerService.HintSize="314,154" />
      <sap2010:ViewStateData Id="SendHotkey_2" sap:VirtualizedContainerService.HintSize="314,154" />
      <sap2010:ViewStateData Id="SetToClipboard_2" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="SendHotkey_3" sap:VirtualizedContainerService.HintSize="314,154" />
      <sap2010:ViewStateData Id="SendHotkey_4" sap:VirtualizedContainerService.HintSize="314,154" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="675,1100">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_4" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UiElementExists_1" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="UiElementExists_2" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="Click_5" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Click_7" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="336,376">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_9" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="675,523">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_6" sap:VirtualizedContainerService.HintSize="675,133">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="697,5645">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_1" sap:VirtualizedContainerService.HintSize="711,5791">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="711,91" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="733,6177">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Aurion_CreateNewContract_1" sap:VirtualizedContainerService.HintSize="773,6257" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>