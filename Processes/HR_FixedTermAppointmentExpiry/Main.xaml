<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="OrchestratorQueueName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Main2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <StateMachine sap2010:Annotation.AnnotationText="Fixed Term Appointment Expiry (FTAE)&#xA;&#xA;Employment at UQ is based on contracts, most are yearly.  When a contract is nearing its end a decision is made to renew or not renew the contract.  Contracts that are renewed will be handed by this automation.  The high level for this automation is a list of eligible contracts will be feed to the automation.  From there the automation will create a queue item, scrape employee details from Unitask Json files and enter updates into Aurion.  Emails are sent for each renewal to the appropriate pay point address to open a ticket in CRM.  A summary email is sent at the end of the run." DisplayName="General Business Process" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <StateMachine.InitialState>
      <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Read Config, Init Applications" DisplayName="Init" sap2010:WorkflowViewState.IdRef="State_2">
        <State.Entry>
          <TryCatch DisplayName="Catch intialization exceptions" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <TryCatch.Try>
              <Sequence DisplayName="Init State" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <Assign DisplayName="Initialize SystemError" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[Config is Nothing]" DisplayName="If first run - read Config file" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <Sequence DisplayName="First Run" sap2010:WorkflowViewState.IdRef="Sequence_17">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="OperatingEnvironment" />
                      </Sequence.Variables>
                      <Assign DisplayName="Assign FirstRun = True" sap2010:WorkflowViewState.IdRef="Assign_72">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[FirstRun]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="OperatingEnvironment" DisplayName="Get Op Env Asset" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                        <ui:GetRobotAsset.Value>
                          <OutArgument x:TypeArguments="x:String">[OperatingEnvironment]</OutArgument>
                        </ui:GetRobotAsset.Value>
                      </ui:GetRobotAsset>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
                          <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_OperatingEnvironment">[OperatingEnvironment]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:BuildDataTable DataTable="[reportDT]" DisplayName="Build Data Table reportDT" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Case_x0020_ID&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Employee_x0020_Name&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Employee_x0020_Number&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Current_x0020_End_x0020_Date&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Proposed_x0020_Start_x0020_Date&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Proposed_x0020_End_x0020_Date&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;PST_x0020_Name&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Status&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Notes&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Config]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_42">
                              <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[item.ToString]" />
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                      <ui:Delete sap2010:Annotation.AnnotationText="Delete &quot;Data\Case IDs Report.csv&quot;" ContinueOnError="True" DisplayName="Delete" sap2010:WorkflowViewState.IdRef="Delete_1" Path="Data\Case IDs Report.csv" />
                      <ui:Delete sap2010:Annotation.AnnotationText="Delete &quot;Data\Report.html&quot;" ContinueOnError="True" sap2010:WorkflowViewState.IdRef="Delete_2" Path="Data\Report.html" />
                      <Sequence sap2010:Annotation.AnnotationText="Save job arguments with values to Config, using the argument's name as keyname. " DisplayName="Save job arguments Config" sap2010:WorkflowViewState.IdRef="Sequence_22">
                        <If Condition="[Not string.IsNullOrEmpty(OrchestratorQueueName)]" DisplayName="OrchestratorQueueName" sap2010:WorkflowViewState.IdRef="If_9">
                          <If.Then>
                            <Assign DisplayName="Add OrchestratorQueueName" sap2010:WorkflowViewState.IdRef="Assign_19">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[Config("OrchestratorQueueName")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[OrchestratorQueueName]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_2" Text="// If the argument has no value, do not overwrite config. This provides backward compatibility with &lt; 2018.3 and allows default values to come from the Config.xlsx" />
                          </If.Else>
                        </If>
                      </Sequence>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:AddLogFields sap2010:Annotation.AnnotationText="Add BusinessProcessName" DisplayName="Add Log Fields" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
                        <ui:AddLogFields.Fields>
                          <InArgument x:TypeArguments="x:String" x:Key="logF_BusinessProcessName">[Config("logF_BusinessProcessName").ToString]</InArgument>
                        </ui:AddLogFields.Fields>
                      </ui:AddLogFields>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Assign DisplayName="Assign FirstRun = False" sap2010:WorkflowViewState.IdRef="Assign_73">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[FirstRun]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Else>
                </If>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitiAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                    <OutArgument x:TypeArguments="ui:Browser" x:Key="out_uqCustomWorklistBrowser">[uqCustomWorklistBrowser]</OutArgument>
                    <OutArgument x:TypeArguments="ui:Window" x:Key="out_AurionWindow">[AurionWindow]</OutArgument>
                    <OutArgument x:TypeArguments="ui:Browser" x:Key="out_bonitaPortalBrowser">[bonitaPortalBrowser]</OutArgument>
                    <OutArgument x:TypeArguments="njl:JObject" x:Key="out_pstEmailAddresses">[pstEmailAddresses]</OutArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_FirstRun">[FirstRun]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Assign DisplayName="Assign excepton to SystemError" sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                    </Assign.Value>
                  </Assign>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </State.Entry>
        <State.Transitions>
          <Transition DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_2">
            <Transition.To>
              <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="Get next transaction input data" DisplayName="Get Transaction Data" sap2010:WorkflowViewState.IdRef="State_4">
                <State.Entry>
                  <Sequence sap2010:Annotation.AnnotationText="Data retrieval mechanism. The TransactionNumber variable holds the current transaction number. Incrementing this number means getting the next transaction. For a robot retry, the number is not increased, in case of application exception, until the max retry number.&#xA;TransactionItem type needs to be changed accordingly." DisplayName="Retrieve Data" sap2010:WorkflowViewState.IdRef="Sequence_1">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
                    </Sequence.Variables>
                    <ui:ShouldStop DisplayName="Check Stop Signal" sap2010:WorkflowViewState.IdRef="ShouldStop_1" Result="[ShouldStop]" />
                    <If Condition="[ShouldStop]" DisplayName="Should Stop or Get Next" sap2010:WorkflowViewState.IdRef="If_8">
                      <If.Then>
                        <Sequence DisplayName="Orchestrator stop requested" sap2010:WorkflowViewState.IdRef="Sequence_21">
                          <ui:LogMessage DisplayName="Log Stop message" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Info" Message="[&quot;Stop process requested&quot;]" />
                          <Assign DisplayName="End Process" sap2010:WorkflowViewState.IdRef="Assign_15">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <TryCatch DisplayName="Try GetTransactionData" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                          <TryCatch.Try>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionData workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Framework\GetTransactionData.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_TransactionItem">[TransactionItem]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField1">[TransactionField1]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField2">[TransactionField2]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionID">[TransactionID]</OutArgument>
                                <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_TransactionData">[TransactionData]</InOutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Log exception message and End process" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Fatal" Message="[Config(&quot;LogMessage_GetTransactionDataError&quot;).ToString+TransactionNumber.ToString+&quot;. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                  <Assign DisplayName="End Process" sap2010:WorkflowViewState.IdRef="Assign_16">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </If.Else>
                    </If>
                  </Sequence>
                </State.Entry>
                <State.Transitions>
                  <Transition DisplayName="New Transaction" sap2010:WorkflowViewState.IdRef="Transition_6">
                    <Transition.To>
                      <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="A transaction either succeeds or fails with a Business Rule Exception or a System Error. For System Error, it can be retried." DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="State_3">
                        <State.Entry>
                          <TryCatch DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                            <TryCatch.Try>
                              <Sequence DisplayName="Process the current TransactionItem" sap2010:WorkflowViewState.IdRef="Sequence_2">
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Sequence DisplayName="Initialize arguments" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                  <Assign DisplayName="Assign employeeName = &quot;&quot;" sap2010:WorkflowViewState.IdRef="Assign_56">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[employeeName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign employeeNumber = &quot;&quot;" sap2010:WorkflowViewState.IdRef="Assign_57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[employeeNumber]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign currentContractEndDate = Nothing" sap2010:WorkflowViewState.IdRef="Assign_58">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:DateTime">[currentContractEndDate]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:DateTime">[Nothing]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign proposedContractStartDate = Nothing" sap2010:WorkflowViewState.IdRef="Assign_59">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:DateTime">[proposedContractStartDate]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:DateTime">[Nothing]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign proposedContractEndDate = Nothing" sap2010:WorkflowViewState.IdRef="Assign_60">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:DateTime">[proposedContractEndDate]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:DateTime">[Nothing]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign pstName = &quot;&quot;" sap2010:WorkflowViewState.IdRef="Assign_61">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[pstName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign systemErrorStatus =&quot;&quot;" sap2010:WorkflowViewState.IdRef="Assign_64">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[systemErrorStatus]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign systemErrorNotes = &quot;&quot;" sap2010:WorkflowViewState.IdRef="Assign_65">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[systemErrorNotes]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ProcessTransaction workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Process.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                    <InArgument x:TypeArguments="ui:Browser" x:Key="in_uqCustomWorklistBrowser">[uqCustomWorklistBrowser]</InArgument>
                                    <InArgument x:TypeArguments="ui:Window" x:Key="in_AurionWindow">[AurionWindow]</InArgument>
                                    <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_reportDT">[reportDT]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:String" x:Key="io_employeeName">[employeeName]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:String" x:Key="io_employeeNumber">[EmployeeNumber]</InOutArgument>
                                    <InOutArgument x:TypeArguments="s:DateTime" x:Key="io_proposedContractStartDate">[proposedContractStartDate]</InOutArgument>
                                    <InOutArgument x:TypeArguments="s:DateTime" x:Key="io_proposedContractEndDate">[proposedContractEndDate]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:String" x:Key="io_systemErrorNotes">[systemErrorNotes]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:String" x:Key="io_DTasHTML">[DTasHTML]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:String" x:Key="io_systemErrorStatus">[systemErrorStatus]</InOutArgument>
                                    <InOutArgument x:TypeArguments="s:DateTime" x:Key="io_currentContractEndDate">[currentContractEndDate]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:String" x:Key="io_pstName">[pstName]</InOutArgument>
                                    <InArgument x:TypeArguments="ui:Browser" x:Key="in_bonitaPortalBrowser">[bonitaPortalBrowser]</InArgument>
                                    <InArgument x:TypeArguments="njl:JObject" x:Key="in_pstEmailAddresses">[pstEmailAddresses]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_23">
                                    <Assign DisplayName="Set transaction status to Rule Exception" sap2010:WorkflowViewState.IdRef="Assign_3">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Assign systemErrorStatus = &quot;Error&quot;" sap2010:WorkflowViewState.IdRef="Assign_23">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[systemErrorStatus]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Error</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Assign systemErrorNotes" sap2010:WorkflowViewState.IdRef="Assign_25">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[systemErrorNotes]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Assign breCount + 1" sap2010:WorkflowViewState.IdRef="Assign_38">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[breCount]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[breCount + 1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Info" Message="[breCount.ToString + &quot; business rule exception(s)&quot;]" />
                                    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_3" Text="// Default exception user?  employeeservices.hr@enquire.uq.edu.au" />
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateReport workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Report\UpdateReport.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_ReportDT">[reportDT]</InOutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_employeeName">[employeeName]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_employeeNumber">[EmployeeNumber]</InArgument>
                                        <InArgument x:TypeArguments="s:DateTime" x:Key="in_proposedContractStartDate">[proposedContractStartDate]</InArgument>
                                        <InArgument x:TypeArguments="s:DateTime" x:Key="in_proposedContractEndDate">[proposedContractEndDate]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorNotes">[exception.Message]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorStatus">[systemErrorStatus]</InArgument>
                                        <InArgument x:TypeArguments="s:DateTime" x:Key="in_currentContractEndDate">[currentContractEndDate]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_pstName">[pstName]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Unitask_UpdateTaskLog workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="Unitask\Unitask_UpdateTaskLog.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorNotes">[systemErrorNotes]</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_Success">False</InArgument>
                                        <InArgument x:TypeArguments="ui:Browser" x:Key="in_uqCustomWorklistBrowser">[uqCustomWorklistBrowser]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Unitask_ReleaseTask workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="Unitask\Unitask_ReleaseTask.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                        <InArgument x:TypeArguments="ui:Browser" x:Key="in_uqCustomWorklistBrowser">[uqCustomWorklistBrowser]</InArgument>
                                        <InArgument x:TypeArguments="ui:Browser" x:Key="in_bonitaPortalBrowser">[bonitaPortalBrowser]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:ForEachRow CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Populate variables for SendTaskEmail" DataTable="[reportDT]" DisplayName="For Each Row in reportDT" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
                                      <ui:ForEachRow.Body>
                                        <ActivityAction x:TypeArguments="sd:DataRow">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                          </ActivityAction.Argument>
                                          <If Condition="[row.Item(&quot;Case ID&quot;).ToString.Equals(TransactionItem.Reference)]" DisplayName="If Current Case ID" sap2010:WorkflowViewState.IdRef="If_14">
                                            <If.Then>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_36">
                                                <Assign DisplayName="Assign employeeName" sap2010:WorkflowViewState.IdRef="Assign_40">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[employeeName]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[row.Item("Employee Name").ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign EmployeeNumber" sap2010:WorkflowViewState.IdRef="Assign_41">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[EmployeeNumber]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[row.Item("Employee Number").ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="AssigncurrentContractEndDate" sap2010:WorkflowViewState.IdRef="Assign_42">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="s:DateTime">[currentContractEndDate]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="s:DateTime">[CDate(row.Item("Current End Date").ToString)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign proposedContractStartDate" sap2010:WorkflowViewState.IdRef="Assign_43">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="s:DateTime">[proposedContractStartDate]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="s:DateTime">[CDate(row.Item("Proposed Start Date").ToString)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign proposedContractEndDate" sap2010:WorkflowViewState.IdRef="Assign_44">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="s:DateTime">[proposedContractEndDate]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="s:DateTime">[CDate(row.Item("Proposed End Date").ToString)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign pstName" sap2010:WorkflowViewState.IdRef="Assign_45">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[pstName]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[row.Item("PST Name").ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign systemErrorStatus" sap2010:WorkflowViewState.IdRef="Assign_46">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[systemErrorStatus]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[row.Item("Status").ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign systemErrorNotes" sap2010:WorkflowViewState.IdRef="Assign_47">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[systemErrorNotes]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[row.Item("Notes").ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </If.Then>
                                          </If>
                                        </ActivityAction>
                                      </ui:ForEachRow.Body>
                                    </ui:ForEachRow>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendTaskEmail workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Email\SendTaskEmail.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_EmployeeName">[employeeName]</InArgument>
                                        <InArgument x:TypeArguments="s:DateTime" x:Key="in_CurrentEndDate">[currentContractEndDate]</InArgument>
                                        <InArgument x:TypeArguments="s:DateTime" x:Key="in_ProposedStartDate">[proposedContractStartDate]</InArgument>
                                        <InArgument x:TypeArguments="s:DateTime" x:Key="in_ProposedEndDate">[proposedContractEndDate]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Status">[systemErrorStatus]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Notes">[systemErrorNotes]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_EmployeeNumber">[EmployeeNumber]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_pstName">[pstName]</InArgument>
                                        <InArgument x:TypeArguments="njl:JObject" x:Key="in_pstEmailAddresses">[pstEmailAddresses]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_24">
                                    <Assign DisplayName="Set transaction status to SystemError" sap2010:WorkflowViewState.IdRef="Assign_4">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Assign systemErrorStatus = &quot;Error&quot;" sap2010:WorkflowViewState.IdRef="Assign_24">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[systemErrorStatus]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Error</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap2010:Annotation.AnnotationText="Assign systemErrorNotes = &quot;Automation error.  Please process manually.&quot;" DisplayName="Assign systemErrorNotes = &quot;Automation error.  Please process manually.&quot;" sap2010:WorkflowViewState.IdRef="Assign_26">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[systemErrorNotes]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String" xml:space="preserve">Automation error.  Please process manually.</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Assign exceptionCount + 1" sap2010:WorkflowViewState.IdRef="Assign_39">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[exceptionCount]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[exceptionCount + 1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info" Message="[exceptionCount.ToString + &quot; system exception(s)&quot;]" />
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateReport workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Report\UpdateReport.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_ReportDT">[reportDT]</InOutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_employeeName">[employeeName]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_employeeNumber">[EmployeeNumber]</InArgument>
                                        <InArgument x:TypeArguments="s:DateTime" x:Key="in_proposedContractStartDate">[proposedContractStartDate]</InArgument>
                                        <InArgument x:TypeArguments="s:DateTime" x:Key="in_proposedContractEndDate">[proposedContractEndDate]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorNotes">[systemErrorNotes]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorStatus">[systemErrorStatus]</InArgument>
                                        <InArgument x:TypeArguments="s:DateTime" x:Key="in_currentContractEndDate">[currentContractEndDate]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_pstName">[pstName]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Unitask_UpdateTaskLog workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="Unitask\Unitask_UpdateTaskLog.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_systemErrorNotes">[systemErrorNotes]</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_Success">False</InArgument>
                                        <InArgument x:TypeArguments="ui:Browser" x:Key="in_uqCustomWorklistBrowser">[uqCustomWorklistBrowser]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_4" Text="// Default exception user?  employeeservices.hr@enquire.uq.edu.au" />
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Unitask_ReleaseTask workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="Unitask\Unitask_ReleaseTask.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                        <InArgument x:TypeArguments="ui:Browser" x:Key="in_uqCustomWorklistBrowser">[uqCustomWorklistBrowser]</InArgument>
                                        <InArgument x:TypeArguments="ui:Browser" x:Key="in_bonitaPortalBrowser">[bonitaPortalBrowser]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:ForEachRow CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Populate variables for SendTaskEmail" DataTable="[reportDT]" DisplayName="For Each Row in reportDT" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
                                      <ui:ForEachRow.Body>
                                        <ActivityAction x:TypeArguments="sd:DataRow">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                          </ActivityAction.Argument>
                                          <If Condition="[row.Item(&quot;Case ID&quot;).ToString.Equals(TransactionItem.Reference)]" DisplayName="If Current Case ID" sap2010:WorkflowViewState.IdRef="If_15">
                                            <If.Then>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_38">
                                                <Assign DisplayName="Assign employeeName" sap2010:WorkflowViewState.IdRef="Assign_48">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[employeeName]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[row.Item("Employee Name").ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign EmployeeNumber" sap2010:WorkflowViewState.IdRef="Assign_49">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[EmployeeNumber]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[row.Item("Employee Number").ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign currentContractEndDate" sap2010:WorkflowViewState.IdRef="Assign_50">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="s:DateTime">[currentContractEndDate]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="s:DateTime">[CDate(row.Item("Current End Date").ToString)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign proposedContractStartDate" sap2010:WorkflowViewState.IdRef="Assign_51">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="s:DateTime">[proposedContractStartDate]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="s:DateTime">[CDate(row.Item("Proposed Start Date").ToString)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign proposedContractEndDate" sap2010:WorkflowViewState.IdRef="Assign_52">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="s:DateTime">[proposedContractEndDate]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="s:DateTime">[CDate(row.Item("Proposed End Date").ToString)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign pstName" sap2010:WorkflowViewState.IdRef="Assign_53">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[pstName]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[row.Item("PST Name").ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign systemErrorStatus" sap2010:WorkflowViewState.IdRef="Assign_54">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[systemErrorStatus]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[row.Item("Status").ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Assign systemErrorNotes" sap2010:WorkflowViewState.IdRef="Assign_55">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[systemErrorNotes]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[row.Item("Notes").ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </If.Then>
                                          </If>
                                        </ActivityAction>
                                      </ui:ForEachRow.Body>
                                    </ui:ForEachRow>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendTaskEmail workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Email\SendTaskEmail.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_EmployeeName">[employeeName]</InArgument>
                                        <InArgument x:TypeArguments="s:DateTime" x:Key="in_CurrentEndDate">[currentContractEndDate]</InArgument>
                                        <InArgument x:TypeArguments="s:DateTime" x:Key="in_ProposedStartDate">[proposedContractStartDate]</InArgument>
                                        <InArgument x:TypeArguments="s:DateTime" x:Key="in_ProposedEndDate">[proposedContractEndDate]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Status">[systemErrorStatus]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Notes">[systemErrorNotes]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_EmployeeNumber">[EmployeeNumber]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_pstName">[pstName]</InArgument>
                                        <InArgument x:TypeArguments="njl:JObject" x:Key="in_pstEmailAddresses">[pstEmailAddresses]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                            <TryCatch.Finally>
                              <TryCatch DisplayName="Set the Transaction Status and go to next Transaction" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                                <TryCatch.Try>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                      <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[SystemError]</InArgument>
                                      <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessRuleException">[BusinessRuleException]</InArgument>
                                      <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                      <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                                      <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField1">[TransactionField1]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField2">[TransactionField2]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                      </ActivityAction.Argument>
                                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Fatal" Message="[&quot;SetTransactionStatus.xaml failed: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                            </TryCatch.Finally>
                          </TryCatch>
                        </State.Entry>
                        <State.Transitions>
                          <Transition DisplayName="Error" sap2010:WorkflowViewState.IdRef="Transition_4" To="{x:Reference __ReferenceID0}" Condition="[SystemError IsNot Nothing]" />
                          <Transition DisplayName="Rule Exception" sap2010:WorkflowViewState.IdRef="Transition_1" To="{x:Reference __ReferenceID1}" Condition="[BusinessRuleException IsNot Nothing]" />
                          <Transition sap2010:Annotation.AnnotationText="No need for any action here, in case of success simply go to next transaction" DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_5" To="{x:Reference __ReferenceID1}" Condition="[SystemError Is Nothing And BusinessRuleException is Nothing]" />
                        </State.Transitions>
                      </State>
                    </Transition.To>
                    <Transition.Action>
                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info" Message="[Config(&quot;LogMessage_GetTransactionData&quot;).ToString+TransactionNumber.ToString]" />
                    </Transition.Action>
                    <Transition.Condition>[TransactionItem IsNot Nothing]</Transition.Condition>
                  </Transition>
                  <Transition sap2010:Annotation.AnnotationText="This is a simple mecanism to stop the process.&#xA;In reallife scenario you can stop the process when there is no more data to process or on a schedule." DisplayName="No Data" sap2010:WorkflowViewState.IdRef="Transition_7">
                    <Transition.To>
                      <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Process stops here" DisplayName="End Process" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
                        <State.Entry>
                          <TryCatch sap2010:WorkflowViewState.IdRef="TryCatch_4">
                            <TryCatch.Try>
                              <Sequence DisplayName="End of process activities" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="ui:Browser" x:Key="in_uqCustomWorklistBrowser">[uqCustomWorklistBrowser]</InArgument>
                                    <InArgument x:TypeArguments="ui:Window" x:Key="in_AurionWindow">[AurionWindow]</InArgument>
                                    <InArgument x:TypeArguments="ui:Browser" x:Key="in_bonitaPortalBrowser">[bonitaPortalBrowser]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Warn" Message="[&quot;Applications failed to close normally. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                            <TryCatch.Finally>
                              <Sequence DisplayName="Update reportDT and send summary email" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[reportDT]" DisplayName="For Each Row in reportDT" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
                                  <ui:ForEachRow.Body>
                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                        <If Condition="[row.Item(&quot;Employee Name&quot;).ToString.Trim.Equals(&quot;&quot;)]" DisplayName="If row.Item(&quot;Employee Name&quot;).ToString.Trim.Equals(&quot;&quot;)" sap2010:WorkflowViewState.IdRef="If_16">
                                          <If.Then>
                                            <Assign DisplayName="Assign 'Employee Name'" sap2010:WorkflowViewState.IdRef="Assign_66">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[row.Item("Employee Name")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Not found"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                        </If>
                                        <If Condition="[row.Item(&quot;Employee Number&quot;).ToString.Trim.Equals(&quot;&quot;)]" DisplayName="If row.Item(&quot;Employee Number&quot;).ToString.Trim.Equals(&quot;&quot;)" sap2010:WorkflowViewState.IdRef="If_17">
                                          <If.Then>
                                            <Assign DisplayName="Assign 'Employee Number'" sap2010:WorkflowViewState.IdRef="Assign_67">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[row.Item("Employee Number")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Not found"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                        </If>
                                        <If Condition="[CDate(row.Item(&quot;Current End Date&quot;).ToString).Equals(Nothing)]" DisplayName="If CDate(row.Item(&quot;Current End Date&quot;).ToString).Equals(Nothing)" sap2010:WorkflowViewState.IdRef="If_18">
                                          <If.Then>
                                            <Assign DisplayName="Assign 'Current End Date'" sap2010:WorkflowViewState.IdRef="Assign_68">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[row.Item("Current End Date")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Not Found"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                        </If>
                                        <If Condition="[CDate(row.Item(&quot;Proposed Start Date&quot;).ToString).Equals(Nothing)]" DisplayName="If CDate(row.Item(&quot;Proposed Start Date&quot;).ToString).Equals(Nothing)" sap2010:WorkflowViewState.IdRef="If_19">
                                          <If.Then>
                                            <Assign DisplayName="Assign 'Proposed Start Date'" sap2010:WorkflowViewState.IdRef="Assign_69">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[row.Item("Proposed Start Date")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Not Found"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                        </If>
                                        <If Condition="[CDate(row.Item(&quot;Proposed End Date&quot;).ToString).Equals(Nothing)]" DisplayName="If CDate(row.Item(&quot;Proposed End Date&quot;).ToString).Equals(Nothing)" sap2010:WorkflowViewState.IdRef="If_20">
                                          <If.Then>
                                            <Assign DisplayName="Assign 'Proposed End Date'" sap2010:WorkflowViewState.IdRef="Assign_70">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[row.Item("Proposed End Date")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Not Found"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                        </If>
                                        <If Condition="[row.Item(&quot;PST Name&quot;).ToString.Equals(&quot;&quot;)]" DisplayName="If row.Item(&quot;PST Name&quot;).ToString.Equals(&quot;&quot;)" sap2010:WorkflowViewState.IdRef="If_21">
                                          <If.Then>
                                            <Assign DisplayName="Assign 'PST Name'" sap2010:WorkflowViewState.IdRef="Assign_71">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[row.Item("PST Name")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Object">["Not Found"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEachRow.Body>
                                </ui:ForEachRow>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke DataTableToHtmlText workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="Utilities\DataTableToHtmlText.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="sd:DataTable" x:Key="in_InputDatatable">[reportDT]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_HtmlText">[DTasHTML]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_HeaderTag_th" />
                                    <InArgument x:TypeArguments="x:String" x:Key="in_TdTag" />
                                    <InArgument x:TypeArguments="x:String" x:Key="in_TableTag_td" />
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendEmail workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="Email\SendSummaryEmail.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                                    <InArgument x:TypeArguments="x:Int32" x:Key="in_exceptionCount">[exceptionCount]</InArgument>
                                    <InArgument x:TypeArguments="x:Int32" x:Key="in_breCount">[breCount]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_DTasHTML">[DTasHTML]</InArgument>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </TryCatch.Finally>
                          </TryCatch>
                        </State.Entry>
                      </State>
                    </Transition.To>
                    <Transition.Action>
                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info" Message="[&quot;Process finished due to no more transaction data&quot;]" />
                    </Transition.Action>
                    <Transition.Condition>[TransactionItem Is Nothing]</Transition.Condition>
                  </Transition>
                </State.Transitions>
              </State>
            </Transition.To>
            <Transition.Action>
              <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_1" Text="Default transition is picked up if there are no errors during initialization" />
            </Transition.Action>
            <Transition.Condition>[SystemError is Nothing]</Transition.Condition>
          </Transition>
          <Transition DisplayName="System Error" sap2010:WorkflowViewState.IdRef="Transition_3" To="{x:Reference __ReferenceID2}">
            <Transition.Action>
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Fatal" Message="[&quot;System error at initialization: &quot; + SystemError.Message + &quot; at Source: &quot; + SystemError.Source]" />
            </Transition.Action>
            <Transition.Condition>[SystemError isNot Nothing]</Transition.Condition>
          </Transition>
        </State.Transitions>
      </State>
    </StateMachine.InitialState>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="ui:QueueItem" Name="TransactionItem" />
      <Variable x:TypeArguments="s:Exception" Name="SystemError" />
      <Variable x:TypeArguments="ui:BusinessRuleException" Name="BusinessRuleException" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="TransactionNumber" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="RetryNumber" />
      <Variable x:TypeArguments="x:String" Name="TransactionField2" />
      <Variable x:TypeArguments="x:String" Name="TransactionField1" />
      <Variable x:TypeArguments="x:String" Name="TransactionID" />
      <Variable x:TypeArguments="sd:DataTable" Name="TransactionData" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New System.Data.DataTable]" Name="reportDT" />
      <Variable x:TypeArguments="x:String" Name="employeeName" />
      <Variable x:TypeArguments="x:String" Name="EmployeeNumber" />
      <Variable x:TypeArguments="s:DateTime" Name="proposedContractStartDate" />
      <Variable x:TypeArguments="s:DateTime" Name="proposedContractEndDate" />
      <Variable x:TypeArguments="x:String" Name="systemErrorStatus" />
      <Variable x:TypeArguments="x:String" Name="systemErrorNotes" />
      <Variable x:TypeArguments="x:String" Name="DTasHTML" />
      <Variable x:TypeArguments="ui:Browser" Name="uqCustomWorklistBrowser" />
      <Variable x:TypeArguments="ui:Window" Name="AurionWindow" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="breCount" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="exceptionCount" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="successCount" />
      <Variable x:TypeArguments="s:DateTime" Name="currentContractEndDate" />
      <Variable x:TypeArguments="x:String" Name="pstName" />
      <Variable x:TypeArguments="ui:Browser" Name="bonitaPortalBrowser" />
      <Variable x:TypeArguments="njl:JObject" Name="pstEmailAddresses" />
      <Variable x:TypeArguments="x:Boolean" Name="FirstRun" />
    </StateMachine.Variables>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </StateMachine>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="603,60" />
      <sap2010:ViewStateData Id="Assign_72" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="GetRobotAsset_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_12" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="BuildDataTable_1" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="210,61" />
      <sap2010:ViewStateData Id="Sequence_42" sap:VirtualizedContainerService.HintSize="232,185">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="314,319" />
      <sap2010:ViewStateData Id="Delete_1" sap:VirtualizedContainerService.HintSize="314,64">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delete_2" sap:VirtualizedContainerService.HintSize="314,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Comment_2" sap:VirtualizedContainerService.HintSize="314,112" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="581,260">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="314,123">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_18" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="AddLogFields_1" sap:VirtualizedContainerService.HintSize="314,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="336,1403">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_73" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="603,1551">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="603,87" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="625,1902">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="629,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="643,2329">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ShouldStop_1" sap:VirtualizedContainerService.HintSize="779,22" />
      <sap2010:ViewStateData Id="LogMessage_25" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_13" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_6" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="418,314">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="779,463" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="801,706">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_56" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_57" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_58" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_59" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_60" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_61" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_64" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_65" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_39" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_9" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="336,402">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_26" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Comment_3" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_19" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_33" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_29" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_43" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_45" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_46" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_47" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_36" sap:VirtualizedContainerService.HintSize="264,884">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="464,1032" />
      <sap2010:ViewStateData Id="ForEachRow_5" sap:VirtualizedContainerService.HintSize="314,93">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_28" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="336,1370">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="314,117">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_27" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_20" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_34" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Comment_4" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_30" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_48" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_49" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_50" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_51" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_53" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_54" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_55" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_38" sap:VirtualizedContainerService.HintSize="264,884">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_15" sap:VirtualizedContainerService.HintSize="464,1032" />
      <sap2010:ViewStateData Id="ForEachRow_6" sap:VirtualizedContainerService.HintSize="314,93">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_27" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="336,1427">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_15" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_24" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_7" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_6" sap:VirtualizedContainerService.HintSize="418,314" />
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="418,651">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_4" sap:VirtualizedContainerService.HintSize="430,505">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">348.3,522 348.3,604.04 701.5,604.04 701.5,54.4 564,54.4</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">40</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_1" sap:VirtualizedContainerService.HintSize="430,507">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">401.05,522 401.05,575.04 622.5,575.04 622.5,210.6 505.5,210.6</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">20</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_5" sap:VirtualizedContainerService.HintSize="430,549">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">443.25,522 443.25,549.4 535.5,549.4 535.5,249.4 505.5,249.4</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">59</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">52</x:Int32>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_3" sap:VirtualizedContainerService.HintSize="211,142">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">285,380</av:Point>
            <av:Size x:Key="ShapeSize">211,142</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">197</x:Double>
            <x:Double x:Key="StateContainerHeight">34</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_22" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_6" sap:VirtualizedContainerService.HintSize="430,800">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">390,278.5 390,308.5 390.5,308.5 390.5,380</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_6" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="336,342">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_66" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Assign_67" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_17" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Assign_68" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_18" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Assign_69" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_19" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Assign_70" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_20" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Assign_71" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_21" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Sequence_40" sap:VirtualizedContainerService.HintSize="486,1572">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_7" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_32" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_31" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_41" sap:VirtualizedContainerService.HintSize="336,429">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="418,656" />
      <sap2010:ViewStateData Id="State_1" sap:VirtualizedContainerService.HintSize="124,104">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">73,188.5</av:Point>
            <av:Size x:Key="ShapeSize">124,104</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">110</x:Double>
            <x:Double x:Key="StateContainerHeight">26</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_23" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_7" sap:VirtualizedContainerService.HintSize="430,857">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">390,278.5 390,324.04 135,324.04 135,292.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_4" sap:VirtualizedContainerService.HintSize="231,97">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">274.5,181.5</av:Point>
            <av:Size x:Key="ShapeSize">231,97</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">217</x:Double>
            <x:Double x:Key="StateContainerHeight">34</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_1" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="Transition_2" sap:VirtualizedContainerService.HintSize="430,800">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
            <av:PointCollection x:Key="ConnectorLocation">447,94 447,124 390,124 390,181.5</av:PointCollection>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_3" sap:VirtualizedContainerService.HintSize="429.6,802.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">447,94 447,124 128.8,124 128.8,188.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_2" sap:VirtualizedContainerService.HintSize="669,3050">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">330,6</av:Point>
            <av:Size x:Key="ShapeSize">234,88</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">220</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="StateMachine_1" sap:VirtualizedContainerService.HintSize="786,861">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">70,12.5</av:Point>
            <x:Double x:Key="StateContainerWidth">772</x:Double>
            <x:Double x:Key="StateContainerHeight">708</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">130,50 330,50</av:PointCollection>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main2_1" sap:VirtualizedContainerService.HintSize="826,981" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>