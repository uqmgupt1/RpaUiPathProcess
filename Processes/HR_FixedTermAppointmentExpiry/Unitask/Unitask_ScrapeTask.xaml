<Activity mc:Ignorable="sap sap2010 sads" x:Class="Unitask_ScrapeTask"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_EmployeeNumber" Type="OutArgument(x:String)" />
    <x:Property Name="out_CurrentContractEndDate" Type="OutArgument(x:String)" />
    <x:Property Name="out_ProposedContractEndDate" Type="OutArgument(x:String)" />
    <x:Property Name="out_UnitaskWorklistBrowser" Type="OutArgument(ui:Browser)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Unitask_ScrapeTask_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Scrape &quot;Employee number&quot;, &quot;Current contract end date&quot; and &quot;Proposed contract end date&quot; to arguments.  The arguments are then passed to update employee record in Aurion.  If any of the scrapes are empty a BRE will be thrown.&#xA;&#xA;In Args&#xA;     in_UnitaskBrowser&#xA;&#xA;Out Args&#xA;     out_EmployeeNumber&#xA;     out_CurrentContractEndDate&#xA;     out_ProposedContractEndDate" DisplayName="Unitask_ScrapeTask" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Begin Unitask_ScrapeTask&quot;]" />
    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser 'UniTask - Worklist'" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="345d7976c842e36f3066d9a619ef4a38" Selector="&lt;html app='chrome.exe' title='UniTask - Worklist' /&gt;" UiBrowser="[out_UnitaskWorklistBrowser]">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <ui:RetryScope DisplayName="Retry Scope" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:05">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'Employee number'" sap2010:WorkflowViewState.IdRef="GetValue_1">
                      <ui:GetValue.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="a36399d29ddc09bd3382e0a243586dcf" Selector="&lt;webctrl id='taskFormIframe' tag='IFRAME' /&gt;&lt;webctrl parentname='$form' tag='DIV' aaname='                       Employee number*' class='row' isleaf='0' title='hpFtaeFixedTermAppointmentExpiryHrProcessRenewalFormV1' /&gt;" WaitForReady="COMPLETE" />
                      </ui:GetValue.Target>
                      <ui:GetValue.Value>
                        <OutArgument x:TypeArguments="x:String">[out_EmployeeNumber]</OutArgument>
                      </ui:GetValue.Value>
                    </ui:GetValue>
                    <Assign sap2010:Annotation.AnnotationText=".Replace used to remove unneeded data &quot;Employee Number&quot;" DisplayName="Assign out_EmployeeNumber" sap2010:WorkflowViewState.IdRef="Assign_1">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_EmployeeNumber]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[out_EmployeeNumber.Replace("Employee number","").Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsFalse DisplayName="Is false" sap2010:WorkflowViewState.IdRef="IsFalse_1" Input="[out_EmployeeNumber.Trim.Equals(&quot;&quot;)]" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
            </ui:RetryScope>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Employee number is &quot;&quot;&quot; + out_EmployeeNumber +&quot;&quot;&quot;&quot;]" />
            <If Condition="[out_EmployeeNumber.Trim.Equals(&quot;&quot;)]" DisplayName="If Employee Number is blank, throw BRE" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Throw DisplayName="Throw Employee Number is blank" Exception="[New BusinessRuleException(&quot;Employee number can not be blank&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </If.Then>
            </If>
            <ui:RetryScope DisplayName="Retry Scope" NumberOfRetries="3" RetryInterval="00:00:05">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <Sequence DisplayName="Action">
                    <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'Current contract end date'" sap2010:WorkflowViewState.IdRef="GetValue_4">
                      <ui:GetValue.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="8ef54c334a79ed7c6b2faf9a77a252f4" Selector="&lt;webctrl id='taskFormIframe' tag='IFRAME' /&gt;&lt;webctrl parentname='$form' tag='DIV' aaname='                       Current contract end date*' /&gt;" WaitForReady="COMPLETE" />
                      </ui:GetValue.Target>
                      <ui:GetValue.Value>
                        <OutArgument x:TypeArguments="x:String">[out_CurrentContractEndDate]</OutArgument>
                      </ui:GetValue.Value>
                    </ui:GetValue>
                    <Assign sap2010:Annotation.AnnotationText=".Replace used to remove unneeded data &quot;Current contract end date&quot;" DisplayName="Assign out_CurrentContractEndDate" sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_CurrentContractEndDate]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[out_CurrentContractEndDate.Replace("Current contract end date","").Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <sap2010:WorkflowViewState.IdRef>Sequence_4</sap2010:WorkflowViewState.IdRef>
                  </Sequence>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsFalse DisplayName="Is false" Input="[out_CurrentContractEndDate.Trim.Equals(&quot;&quot;)]" sap2010:WorkflowViewState.IdRef="IsFalse_2" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
              <sap2010:WorkflowViewState.IdRef>RetryScope_2</sap2010:WorkflowViewState.IdRef>
            </ui:RetryScope>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Current contract end date is &quot;&quot;&quot; + out_CurrentContractEndDate + &quot;&quot;&quot;&quot;]" />
            <If Condition="[out_CurrentContractEndDate.Equals(&quot;&quot;)]" DisplayName="If Current contract end date is blank, throw BRE" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Throw DisplayName="Throw Current contract end date is blank" Exception="[New BusinessRuleException(&quot;Current contract end date can not be blank&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_2" />
              </If.Then>
            </If>
            <ui:RetryScope DisplayName="Retry Scope" NumberOfRetries="3" RetryInterval="00:00:05">
              <ui:RetryScope.ActivityBody>
                <ActivityAction>
                  <Sequence DisplayName="Action">
                    <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'Proposed contract end date'" sap2010:WorkflowViewState.IdRef="GetValue_3">
                      <ui:GetValue.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="87683f0b60305e8670ca4a6bb135e747" Selector="&lt;webctrl id='taskFormIframe' tag='IFRAME' /&gt;&lt;webctrl parentname='$form' tag='DIV' aaname='                       Proposed contract end date*' /&gt;" WaitForReady="COMPLETE" />
                      </ui:GetValue.Target>
                      <ui:GetValue.Value>
                        <OutArgument x:TypeArguments="x:String">[out_ProposedContractEndDate]</OutArgument>
                      </ui:GetValue.Value>
                    </ui:GetValue>
                    <Assign sap2010:Annotation.AnnotationText=".Replace used to remove unneeded data &quot;Proposed contract end date&quot;" DisplayName="Assign out_ProposedContractEndDate" sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_ProposedContractEndDate]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[out_ProposedContractEndDate.Replace("Proposed contract end date","").Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <sap2010:WorkflowViewState.IdRef>Sequence_5</sap2010:WorkflowViewState.IdRef>
                  </Sequence>
                </ActivityAction>
              </ui:RetryScope.ActivityBody>
              <ui:RetryScope.Condition>
                <ActivityFunc x:TypeArguments="x:Boolean">
                  <p:IsFalse DisplayName="Is false" Input="[out_ProposedContractEndDate.Trim.Equals(&quot;&quot;)]" sap2010:WorkflowViewState.IdRef="IsFalse_3" />
                </ActivityFunc>
              </ui:RetryScope.Condition>
              <sap2010:WorkflowViewState.IdRef>RetryScope_3</sap2010:WorkflowViewState.IdRef>
            </ui:RetryScope>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Proposed contract end date is &quot;&quot;&quot; + out_ProposedContractEndDate + &quot;&quot;&quot;&quot;]" />
            <If Condition="[out_ProposedContractEndDate.Equals(&quot;&quot;)]" DisplayName="If Proposed contract end date is blank, throw BRE" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Throw DisplayName="Throw Proposed contract end date is blank" Exception="[New BusinessRuleException(&quot;Proposed contract end date can not be blank&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_3" />
              </If.Then>
            </If>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;End Unitask_ScrapeTask&quot;]" />
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
    </ui:BrowserScope>
    <sads:DebugSymbol.Symbol>d1RDOlxVaVBhdGhcVVFcUHJvY2Vzc2VzXEhSX0ZpeGVkVGVybUFwcG9pbnRtZW50RXhwaXJ5XFVuaXRhc2tcVW5pdGFza19TY3JhcGVUYXNrLnhhbWw/SwPHAQ4CAQFMBUydAQIBUU0FxQEXAgECTHJMmgECAVJNjwJNywICAVBN1gJN9AICAU5TC8IBFgIBA1QNcB0CAT5xDXHbAQIBO3INdhICATZ3DZUBHQIBJpYBDZYB7gECASOXAQ2bARICAR6cAQ26AR0CAQ67AQ27AfABAgELvAENwAESAgEGwQENwQGjAQIBBFSHAVSRAQIBTVR1VHgCAUxXE2geAgFCbRNtmgECAT9xenHYAQIBPHIbcksCATd0EXTHAQIBOXdYd2ICATV3RndJAgE0ehOMAR4CASqRARORAaIBAgEnlgF6lgHrAQIBJJcBG5cBTgIBH5kBEZkB2wECASGcAVicAWICAR2cAUacAUkCARyfAROxAR4CARK2ARO2AaMBAgEPuwF6uwHtAQIBDLwBG7wBTwIBB74BEb4B3QECAQnBAXrBAaABAgEFWBVfIwIBSGAVZx4CAUNtZ22XAQIBQHRPdJoBAgE6exWCASMCATCDARWKAR4CASuRATuRAXMCASiZAVmZAa4BAgEioAEVpwEjAgEYqAEVrwEeAgETtgE7tgF0AgEQvgFavgGwAQIBCl1BXVUCAUlaqAFakQMCAUtlQGV3AgFGYkFiVQIBRIABQYABXQIBMX2oAX3FAgIBM4gBQIgBiQECAS6FAUGFAV0CASylAUGlAV4CARmiAagBogHGAgIBG60BQK0BiwECARaqAUGqAV4CARQ=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="500,91" />
      <sap2010:ViewStateData Id="GetValue_1" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="314,102">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="336,372">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsFalse_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_1" sap:VirtualizedContainerService.HintSize="464,553" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,207" />
      <sap2010:ViewStateData Id="GetValue_4" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314,102">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="336,372">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsFalse_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_2" sap:VirtualizedContainerService.HintSize="464,553" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,207" />
      <sap2010:ViewStateData Id="GetValue_3" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="314,102">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="336,372">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsFalse_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_3" sap:VirtualizedContainerService.HintSize="464,553" />
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Throw_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,207" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="486,3128">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BrowserScope_1" sap:VirtualizedContainerService.HintSize="500,3274" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="522,3706">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Unitask_ScrapeTask_1" sap:VirtualizedContainerService.HintSize="562,3786" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>