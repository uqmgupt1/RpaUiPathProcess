<Activity mc:Ignorable="sap sap2010 sads" x:Class="SendTaskEmail"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="in_EmployeeName" Type="InArgument(x:String)" />
    <x:Property Name="in_CurrentEndDate" Type="InArgument(s:DateTime)" />
    <x:Property Name="in_ProposedStartDate" Type="InArgument(s:DateTime)" />
    <x:Property Name="in_ProposedEndDate" Type="InArgument(s:DateTime)" />
    <x:Property Name="in_Status" Type="InArgument(x:String)" />
    <x:Property Name="in_Notes" Type="InArgument(x:String)" />
    <x:Property Name="in_EmployeeNumber" Type="InArgument(x:String)" />
    <x:Property Name="in_pstName" Type="InArgument(x:String)" />
    <x:Property Name="in_pstEmailAddresses" Type="InArgument(njl:JObject)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>SendEmail_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This XAML creates and sends an email with details of the transcation.&#xA;&#xA;Values are replaced in the email template with values in Arguments&#xA;&#xA;The email will be sent to the approrpaite Pay Point group email.  If not found it will be sent to the address in Asset &quot;HR_FTAE_DefaultTaskEmailAddress&quot;.&#xA;&#xA;in_Arg&#xA;in_Config                         Dictionary(String,Object)&#xA;in_CurrentEndDate         DateTime&#xA;in_EmailAddress             String&#xA;in_EmployeeName         String&#xA;in_EmployeeNumber     String&#xA;in_Notes                           String&#xA;in_ProposedEndDate      DateTime&#xA;in_ProposedStartDate     DateTime&#xA;in_Status                           String&#xA;in_TransactionItem          QueueItem&#xA;" DisplayName="SendTaskEmail" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="ReportEmailTemplate" />
      <Variable x:TypeArguments="x:String" Name="messageText" />
      <Variable x:TypeArguments="x:Int32" Name="successCount" />
      <Variable x:TypeArguments="x:String" Name="operatingEnvironment" />
      <Variable x:TypeArguments="x:String" Name="emailAddress" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Begin SendTaskEmail&quot;]" />
    <If sap2010:Annotation.AnnotationText="If in_EmployeeName is blank, update to &quot;Not found&quot;" Condition="[in_EmployeeName=&quot;&quot;]" DisplayName="If in_EmployeeName is blank, update to &quot;Not found&quot;" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Then>
        <Assign DisplayName="Assign in_EmployeeName = &quot;Not found&quot;" sap2010:WorkflowViewState.IdRef="Assign_11">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[in_EmployeeName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">Not found</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
    </If>
    <If sap2010:Annotation.AnnotationText="If in_EmployeeNumber is blank, update to &quot;Not found&quot;" Condition="[in_EmployeeNumber=&quot;&quot;]" DisplayName="If in_EmployeeNumber is blank, update to &quot;Not found&quot;" sap2010:WorkflowViewState.IdRef="If_5">
      <If.Then>
        <Assign DisplayName="Assign in_EmployeeNumber = &quot;Not found&quot;" sap2010:WorkflowViewState.IdRef="Assign_12">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[in_EmployeeNumber]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">Not found</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
    </If>
    <If sap2010:Annotation.AnnotationText="If in_pstName is blank, update to &quot;Not found&quot;" Condition="[in_pstName=&quot;&quot;]" DisplayName="If in_pstName is blank, update to &quot;Not found&quot;" sap2010:WorkflowViewState.IdRef="If_6">
      <If.Then>
        <Assign DisplayName="Assign in_pstName = &quot;Not found&quot;" sap2010:WorkflowViewState.IdRef="Assign_13">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[in_pstName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">Not found</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
    </If>
    <If sap2010:Annotation.AnnotationText="If in_Notes is blank, update to &quot;None&quot;" Condition="[in_Notes = &quot;&quot;]" DisplayName="If in_Notes is blank, update to &quot;None&quot;" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Assign DisplayName="Assign in_Notes = &quot;None&quot;" sap2010:WorkflowViewState.IdRef="Assign_7">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[in_Notes]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">None</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
    </If>
    <Assign DisplayName="Assign messageText" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[messageText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String" xml:space="preserve">["The following task was processed by FTAE bot.  The status is """ + in_Status.ToUpper + """.  The details are listed below." + "&lt;br&gt;" + "&lt;br&gt;" + "Case ID: " + in_TransactionItem.Reference + "&lt;br&gt;" + "Employee Name: " + in_EmployeeName + "&lt;br&gt;" + "Employee Number: " + in_EmployeeNumber + "&lt;br&gt;" + "Current End Date: " + in_CurrentEndDate.ToString("dd-MMM-yyyy") + "&lt;br&gt;" + "Proposed Start Date: " + in_ProposedStartDate.ToString("dd-MMM-yyyy") + "&lt;br&gt;" + "Proposed End Date: " + in_ProposedEndDate.ToString("dd-MMM-yyyy") + "&lt;br&gt;" + "ESU Team: " + in_pstName + "&lt;br&gt;" + "Status: " + in_Status + "&lt;br&gt;" + "Notes: " + in_Notes]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="Replace &quot;01-Jan-0001&quot; with &quot;Not found&quot;" DisplayName="Assign messageText" sap2010:WorkflowViewState.IdRef="Assign_10">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[messageText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[messageText.Replace("01-Jan-0001","Not found")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ReadTextFile Content="[ReportEmailTemplate]" DisplayName="Read Text File" FileName="Data\Report Email Template.html" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
    <Assign DisplayName="Assign ReportEmailTemplate" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[ReportEmailTemplate]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[ReportEmailTemplate.Replace("{Message}",messageText)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign ReportEmailTemplate" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[ReportEmailTemplate]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[ReportEmailTemplate.Replace("{ProcessName}","Bob")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign ReportEmailTemplate" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[ReportEmailTemplate]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[ReportEmailTemplate.Replace("{Table}","")]</InArgument>
      </Assign.Value>
    </Assign>
    <TryCatch DisplayName="TC: Assign emailAddress" sap2010:WorkflowViewState.IdRef="TryCatch_3">
      <TryCatch.Try>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
          <Assign DisplayName="Assign emailAddress" sap2010:WorkflowViewState.IdRef="Assign_16">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[emailAddress]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_pstEmailAddresses(in_pstName.ToLower.Trim).ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;ESU Team &quot;&quot;&quot; + in_pstName + &quot;&quot;&quot; found.  Assigning email address &quot;&quot;&quot; + in_pstEmailAddresses(in_pstName.ToLower.Trim).ToString + &quot;&quot;&quot;&quot;]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
              <Assign DisplayName="Assign emailAddress (Default)" sap2010:WorkflowViewState.IdRef="Assign_17">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[emailAddress]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_Config("DefaultTaskEmailAddress").ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Warn" Message="[&quot;ESU Team &quot;&quot;&quot; + in_pstName + &quot;&quot;&quot; not found.  Assigning default email address &quot;&quot;&quot; + in_Config(&quot;DefaultTaskEmailAddress&quot;).ToString + &quot;&quot;&quot;&quot;]" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <If Condition="[NOT in_Config(&quot;OperatingEnvironment&quot;).ToString.ToUpper.Trim = &quot;PROD&quot;]" DisplayName="If NOT PROD environment send email using DEV credentials" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Assign DisplayName="Assign operatingEnvironment" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[operatingEnvironment]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("OperatingEnvironment").ToString + " - "]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign emailAddress" sap2010:WorkflowViewState.IdRef="Assign_18">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[emailAddress]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("DevTestEmailAddress").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[in_Notes.Contains(&quot;may not be a valid FTAE task&quot;)]" DisplayName="If BRE is &quot;Invalid FTAE task&quot; don't send email to CRM to create CRM task" sap2010:WorkflowViewState.IdRef="If_9">
            <If.Then>
              <Assign DisplayName="Assign emailAddress" sap2010:WorkflowViewState.IdRef="Assign_20">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[emailAddress]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_Config("SummaryEmailAddress").ToString]</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
          </If>
          <If Condition="[in_Config(&quot;SummaryEmailAddress&quot;).ToString.ToUpper.Trim.Equals(&quot;NONE&quot;)]" DisplayName="If Summary Email Address is not &quot;None&quot; send email" sap2010:WorkflowViewState.IdRef="If_10">
            <If.Else>
              <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                <TryCatch.Try>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" Password="{x:Null}" TimeoutMS="{x:Null}" Body="[ReportEmailTemplate]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="noreply@uq.edu.au" sap2010:WorkflowViewState.IdRef="SendMail_1" IsBodyHtml="True" Port="[CInt(in_Config(&quot;UQ_SMTP_PORT&quot;).ToString)]" SecureConnection="Auto" Server="[in_Config(&quot;UQ_SMTP_SERVER&quot;).ToString]" Subject="[operatingEnvironment + &quot;FTAE Case ID &quot; + in_TransactionItem.Reference + &quot; Renewal Task - &quot; + in_Status]" To="[emailAddress]">
                      <ui:SendMail.Files>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                      </ui:SendMail.Files>
                    </ui:SendMail>
                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Case ID &quot;&quot;&quot; + in_TransactionItem.Reference + &quot;&quot;&quot; email sent to &quot;&quot;&quot; + emailAddress + &quot;&quot;&quot;&quot;]" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" Password="{x:Null}" TimeoutMS="{x:Null}" Body="[ReportEmailTemplate]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="noreply@uq.edu.au" sap2010:WorkflowViewState.IdRef="SendMail_3" IsBodyHtml="True" Port="[CInt(in_Config(&quot;UQ_SMTP_PORT&quot;).ToString)]" SecureConnection="Auto" Server="[in_Config(&quot;UQ_SMTP_SERVER&quot;).ToString]" Subject="[operatingEnvironment + &quot;FTAE Case ID &quot; + in_TransactionItem.Reference + &quot; Renewal Task - &quot; + in_Status]" To="[emailAddress]">
                          <ui:SendMail.Files>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                          </ui:SendMail.Files>
                        </ui:SendMail>
                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Warn" Message="[&quot;Send email error.  Resending&quot;]" />
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Assign DisplayName="Assign operatingEnvironment" sap2010:WorkflowViewState.IdRef="Assign_9">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[operatingEnvironment]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[in_Notes.Contains(&quot;may not be a valid FTAE task&quot;)]" DisplayName="If BRE is &quot;Invalid FTAE task&quot; don't send email to CRM to create CRM task" sap2010:WorkflowViewState.IdRef="If_7">
            <If.Then>
              <Assign DisplayName="Assign emailAddress" sap2010:WorkflowViewState.IdRef="Assign_19">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[emailAddress]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_Config("SummaryEmailAddress").ToString]</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
          </If>
          <If Condition="[in_Config(&quot;SummaryEmailAddress&quot;).ToString.ToUpper.Trim.Equals(&quot;NONE&quot;)]" DisplayName="If Summary Email Address is not &quot;None&quot; send email" sap2010:WorkflowViewState.IdRef="If_8">
            <If.Else>
              <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                <TryCatch.Try>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" Password="{x:Null}" TimeoutMS="{x:Null}" Body="[ReportEmailTemplate]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="noreply@uq.edu.au" sap2010:WorkflowViewState.IdRef="SendMail_2" IsBodyHtml="True" Port="[CInt(in_Config(&quot;UQ_SMTP_PORT&quot;).ToString)]" SecureConnection="Auto" Server="[in_Config(&quot;UQ_SMTP_SERVER&quot;).ToString]" Subject="[operatingEnvironment + &quot;FTAE Case ID &quot; + in_TransactionItem.Reference + &quot; Renewal Task - &quot; + in_Status]" To="[emailAddress]">
                      <ui:SendMail.Files>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                      </ui:SendMail.Files>
                    </ui:SendMail>
                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Case ID &quot;&quot;&quot; + in_TransactionItem.Reference + &quot;&quot;&quot; email sent to &quot;&quot;&quot; + emailAddress + &quot;&quot;&quot;&quot;]" />
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" Password="{x:Null}" TimeoutMS="{x:Null}" Body="[ReportEmailTemplate]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="noreply@uq.edu.au" sap2010:WorkflowViewState.IdRef="SendMail_4" IsBodyHtml="True" Port="[CInt(in_Config(&quot;UQ_SMTP_PORT&quot;).ToString)]" SecureConnection="Auto" Server="[in_Config(&quot;UQ_SMTP_SERVER&quot;).ToString]" Subject="[operatingEnvironment + &quot;FTAE Case ID &quot; + in_TransactionItem.Reference + &quot; Renewal Task - &quot; + in_Status]" To="UPDATE!!!">
                          <ui:SendMail.Files>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                          </ui:SendMail.Files>
                        </ui:SendMail>
                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Warn" Message="[&quot;Send email error.  Resending&quot;]" />
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </If.Else>
          </If>
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;End SendTaskEmail&quot;]" />
    <sads:DebugSymbol.Symbol>d21DOlxVc2Vyc1x1cXNkZWJiZVxEb2N1bWVudHNcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcSFJfRml4ZWRUZXJtQXBwb2ludG1lbnRFeHBpcnlcRW1haWxcU2VuZFRhc2tFbWFpbC54YW1sfFgD3QIOAgEBYAVgmAEDAbEBYQVsCgMBqgFtBXgKAwGjAXkFhAEKAwGcAYUBBZABCgMBlQGRAQWYAQ4DAZEBmQEFoAEOAwGMAaEBBaEBsQEDAYgBogEFqQEOAwGCAaoBBbEBDgIBfbIBBbkBDgIBeLoBBdwBEAIBZt0BBdoCCgIBBNsCBdsClgECAQJgcmCVAQMBsgFhdGGUAQMBqwFjCWoSAwGtAW12bZgBAwGkAW8JdhIDAaYBeW95igEDAZ0BewmCARIDAZ8BhQFohQGDAQMBlgGHAQmOARIDAZgBkwExkwE+AwGSAZ4BMJ4BYAMBjwGbATGbAT4DAY0BoQFcoQF9AwGLAaEBHqEBNQMBiQGnATCnAWYDAYUBpAExpAFGAwGDAa8BMK8BZAMBgAGsATGsAUYCAX63ATC3AVsCAXu0ATG0AUYCAXm8AQnGARQCAXHOAQ3YARgCAWfdARPdAW8CAQXfAQmdAhQCATOgAgnYAhQCAQfbAnLbApMBAgEDaDRoPQMBsAFlNWVGAwGuAXQ0dD0DAakBcTVxSAMBpwGAATSAAT0DAaIBfTV9QQMBoAGMATSMATgDAZsBiQE1iQE/AwGZAb0BC8QBFAIBdMUBC8UByQICAXLPAQ/WARgCAWzXAQ/XAdoCAgFo4AEL5wEUAgFh6AEL7wEUAgFc8AEL+wEQAgFU/AELnAIQAgE0oQILqgIUAgEvqwILtgIQAgEntwIL1wIQAgEIwgE2wgFuAgF3vwE3vwFFAgF1xQF4xQHGAgIBc9QBOtQBaQIBb9EBO9EBSQIBbdcBfNcB1wICAWnlATblAWoCAWTiATfiAU0CAWLtATbtAWECAV/qATfqAUUCAV3wARnwAVgCAVXyAQ/5ARgCAVf8ARn8AXYCATX+AQ+aAhoCATenAhGnAkACATKjAjejAk0CATCrAhmrAlgCASitAg+0AhgCASq3Ahm3AnYCAQm5Ag/VAhoCAQv3ATr3AWUCAVr0ATv0AUkCAViAAhOHAh4CAUaPAheWAiICATiyAjqyAmUCAS2vAjuvAkkCASu7AhPCAh4CARnKAhfRAiICAQyBAhWFAiMCAUmGAhWGAqgCAgFHkAIZlAInAgE7lQIZlQK1AQIBObwCFcACIwIBHMECFcECqAICARrLAhnPAicCAQ/QAhnQArUBAgENgQLjBIEC8wQCAVKBAqUBgQK8AQIBUIEC4QOBAt8EAgFPgQL4AYECiwICAU6BAtACgQKGAwIBTIECpgOBAtgDAgFKhgKCAYYCpQICAUiQAucEkAL3BAIBRJACqQGQAsABAgFCkALlA5AC4wQCAUGQAvwBkAKPAgIBQJAC1AKQAooDAgE+kAKqA5AC3AMCATyVAoYBlQKyAQIBOrwC4wS8AvMEAgElvAKlAbwCvAECASO8AuEDvALfBAIBIrwC+AG8AosCAgEhvALQArwChgMCAR+8AqYDvALYAwIBHcECggHBAqUCAgEbywLnBMsC8gQCARjLAqkBywLAAQIBFssC5QPLAuMEAgEVywL8AcsCjwICARTLAtQCywKKAwIBEssCqgPLAtwDAgEQ0AKGAdACsgECAQ4=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="1155,91" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="1155,93">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="1155,93">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="1155,93">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="1155,93">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="1155,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="1155,102">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadTextFile_1" sap:VirtualizedContainerService.HintSize="1155,59" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="1155,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="1155,60" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="1155,60" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="1155,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="543,60" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="543,60" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="543,208" />
      <sap2010:ViewStateData Id="SendMail_1" sap:VirtualizedContainerService.HintSize="314,145">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="336,400">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendMail_3" sap:VirtualizedContainerService.HintSize="314,145">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="336,400">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="418,627" />
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="543,775" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="565,1347">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="543,60" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="543,208" />
      <sap2010:ViewStateData Id="SendMail_2" sap:VirtualizedContainerService.HintSize="314,145">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="336,400">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendMail_4" sap:VirtualizedContainerService.HintSize="314,145">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="336,400">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="418,627">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="543,775" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="565,1247">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="1155,1495" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="1155,91" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="1177,3427">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendEmail_1" sap:VirtualizedContainerService.HintSize="1217,3507" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>