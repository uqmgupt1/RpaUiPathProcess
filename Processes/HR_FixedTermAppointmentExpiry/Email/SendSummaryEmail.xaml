<Activity mc:Ignorable="sap sap2010 sads" x:Class="SendSummaryEmail"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TransactionNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="in_exceptionCount" Type="InArgument(x:Int32)" />
    <x:Property Name="in_breCount" Type="InArgument(x:Int32)" />
    <x:Property Name="in_DTasHTML" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>SendEmail_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="SendSummaryEmail" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="UQ_SMTP_SERVER" />
      <Variable x:TypeArguments="x:String" Name="UQ_SMTP_PORT" />
      <Variable x:TypeArguments="x:String" Name="ReportEmailTemplate" />
      <Variable x:TypeArguments="x:String" Name="messageText" />
      <Variable x:TypeArguments="x:Int32" Name="successCount" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Begin Send Summary Email&quot;]" />
    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="UQ_SMTP_SERVER" DisplayName="Get Asset UQ_SMTP_SERVER" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:String">[UQ_SMTP_SERVER]</OutArgument>
      </ui:GetRobotAsset.Value>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="UQ_SMTP_PORT" DisplayName="Get Asset UQ_SMTP_PORT" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:String">[UQ_SMTP_PORT]</OutArgument>
      </ui:GetRobotAsset.Value>
    </ui:GetRobotAsset>
    <Assign DisplayName="Assign successCount" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[successCount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[in_TransactionNumber - 1 - in_breCount - in_exceptionCount]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[in_TransactionNumber - 1  &gt; 0]" DisplayName="If no tasks found for processing" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Assign DisplayName="Assign messageText (Summary)" sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[messageText]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String" xml:space="preserve">[(in_TransactionNumber - 1).ToString + " renewals were processed.  " + successCount.ToString + " were successful.  " + "There were " + in_breCount.ToString +" business rule exceptions and " + in_exceptionCount.ToString + " automation errors."]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Assign DisplayName="Assign messageText (No tasks)" sap2010:WorkflowViewState.IdRef="Assign_6">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[messageText]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">["No renewals were found to be processed."]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <ui:ReadTextFile Content="[ReportEmailTemplate]" DisplayName="Read Text File" FileName="Data\Report Email Template.html" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
    <Assign DisplayName="Assign ReportEmailTemplate" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[ReportEmailTemplate]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[ReportEmailTemplate.Replace("{Message}",messageText)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign ReportEmailTemplate" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[ReportEmailTemplate]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[ReportEmailTemplate.Replace("{ProcessName}","FTAE")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign ReportEmailTemplate" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[ReportEmailTemplate]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[ReportEmailTemplate.Replace("{Table}",in_DTasHTML)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" Password="{x:Null}" TimeoutMS="{x:Null}" Body="[ReportEmailTemplate]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="noreply@uq.edu.au" sap2010:WorkflowViewState.IdRef="SendMail_1" IsBodyHtml="True" Port="[CInt(UQ_SMTP_PORT)]" SecureConnection="Auto" Server="[UQ_SMTP_SERVER]" Subject="[in_Config(&quot;OperatingEnvironment&quot;).ToString + &quot; Report Summary Test&quot;]" To="s.debbe@uq.edu.au">
      <ui:SendMail.Files>
        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
      </ui:SendMail.Files>
    </ui:SendMail>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;End Send Summary Email&quot;]" />
    <sads:DebugSymbol.Symbol>d3BDOlxVc2Vyc1x1cXNkZWJiZVxEb2N1bWVudHNcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcSFJfRml4ZWRUZXJtQXBwb2ludG1lbnRFeHBpcnlcRW1haWxcU2VuZFN1bW1hcnlFbWFpbC54YW1sKEsDnAEOAgEBUwVTnQECAUJUBVgYAgE+WQVdGAIBOl4FZQ4CATNmBXsKAgEkfAV8sQECASB9BYQBDgIBGoUBBYwBDgIBFY0BBZQBDgIBD5UBBZkBEwIBBJoBBZoBmwECAQJTclOaAQIBQ1YxVkECAUBUNlRGAgE/WzFbPwIBPFk2WUQCATtjL2NrAgE2YDBgPgIBNGYTZjcCASVoCW8SAgErcgl5EgIBJ3xcfH0CASN8Hnw1AgEhggEwggFmAgEdfzF/RgIBG4oBMIoBZQIBGIcBMYcBRgIBFpIBMJIBZAIBEo8BMY8BRgIBEJUB8AOVAYMEAgEOlQGVAZUBrAECAQyVAZEDlQHsAwIBCpUB6AGVAfsBAgEJlQHAApUB1gICAQeVAfYClQGIAwIBBZoBcpoBmAECAQNqNWpCAgEsdzR3XwIBKnQ1dEICASg=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="509,91" />
      <sap2010:ViewStateData Id="GetRobotAsset_1" sap:VirtualizedContainerService.HintSize="509,22" />
      <sap2010:ViewStateData Id="GetRobotAsset_2" sap:VirtualizedContainerService.HintSize="509,22" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="509,208" />
      <sap2010:ViewStateData Id="ReadTextFile_1" sap:VirtualizedContainerService.HintSize="509,59" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="SendMail_1" sap:VirtualizedContainerService.HintSize="509,145">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="509,91" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="531,1402">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendEmail_1" sap:VirtualizedContainerService.HintSize="571,1482" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>