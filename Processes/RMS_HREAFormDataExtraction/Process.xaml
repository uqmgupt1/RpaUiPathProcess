<Activity mc:Ignorable="sap sap2010 sads" x:Class="ProcessTransaction"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.uipath.com/workflow/activities/word"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing"
 xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="in_ProceedWithDataEntry" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.XPath</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: In this file all other process specific files will be invoked. If an application exception occurs, the current transaction can be retried. If a BRE is thrown, the transaction will be skipped. Can be a flowchart or sequence. &#xA;&#xA;Description: &#xA;&#xA;Inputs:&#xA;in_ &lt;String&gt;.&#xA;io_ &lt;String&gt;.&#xA;&#xA;Outputs:&#xA;out_ &lt;String&gt;.&#xA;&#xA;Pre Condition: NA&#xA;Post Condition: NA" DisplayName="ProcessTransaction" sap2010:WorkflowViewState.IdRef="Sequence_8">
    <Sequence.Variables>
      <Variable x:TypeArguments="sxl:XElement" Name="sortedElements" />
      <Variable x:TypeArguments="sd:DataTable" Name="fileMatching" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Start Process.xaml&quot;]" />
    <Sequence DisplayName="Identify and Sort files" sap2010:WorkflowViewState.IdRef="Sequence_16">
      <If Condition="[Not File.Exists(in_Config(&quot;FileServer_BotFiles&quot;) + &quot;\hrea_5_loftover_docs.xml&quot;)]" DisplayName="If no record of leftover files then the directory should be empty" sap2010:WorkflowViewState.IdRef="If_13">
        <If.Then>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each FileServer Leftover" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Directory.GetDirectories(in_Config(&quot;FileServer_Leftover&quot;))]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="folder" />
                </ActivityAction.Argument>
                <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete leftover" sap2010:WorkflowViewState.IdRef="Delete_2" Path="[folder]" />
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </If.Then>
      </If>
      <If Condition="[Not File.Exists(in_Config(&quot;FileServer_BotFiles&quot;) + &quot;\hrea_6_sorted_docs.xml&quot;)]" DisplayName="If no record of sorted files then the directory should be empty" sap2010:WorkflowViewState.IdRef="If_14">
        <If.Then>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each FileServer Sorted" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetDirectories(in_Config(&quot;FileServer_Sorted&quot;))]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="folder" />
                </ActivityAction.Argument>
                <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete sorted" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[folder]" />
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </If.Then>
      </If>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Process_IdentifyAndSort workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Process_IdentifyAndSort.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_SourcePath">[in_Config("FileServer_Source")]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_SortedPath">[in_Config("FileServer_Sorted")]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_LeftoverPath">[in_Config("FileServer_Leftover")]</InArgument>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[in_Config]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="[&quot;Finished identifying and sorting &quot; &amp; Directory.GetDirectories(in_Config(&quot;FileServer_Sorted&quot;)).Length &amp; &quot; files.&quot;]" />
    </Sequence>
    <If Condition="[Not File.Exists(in_Config(&quot;FileServer_BotFiles&quot;) + &quot;\hrea_5_loftover_docs.xml&quot;)]" DisplayName="If no sorted items" sap2010:WorkflowViewState.IdRef="If_11">
      <If.Then>
        <Sequence DisplayName="5 get unsorted items" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <Sequence.Variables>
            <Variable x:TypeArguments="sxl:XElement" Name="leftoverElements" />
          </Sequence.Variables>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetFilesAndFolders workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="IdentifyAndSort\GetFilesAndFolders.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_CurrentPath">[in_Config("FileServer_Leftover")]</InArgument>
              <InOutArgument x:TypeArguments="sxl:XElement" x:Key="io_FilesElement">[leftoverElements]</InOutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:WriteTextFile DisplayName="Write Text File" FileName="[in_Config(&quot;FileServer_BotFiles&quot;) + &quot;\hrea_5_loftover_docs.xml&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="[leftoverElements.ToString]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Info" Message="[&quot;Already sorted identified files.&quot;]" />
      </If.Else>
    </If>
    <If Condition="[Not File.Exists(in_Config(&quot;FileServer_BotFiles&quot;) + &quot;\hrea_6_sorted_docs.xml&quot;)]" DisplayName="If getting sorted items" sap2010:WorkflowViewState.IdRef="If_12">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_49">
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetFilesAndFolders workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="IdentifyAndSort\GetFilesAndFolders.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_CurrentPath">[in_Config("FileServer_Sorted")]</InArgument>
              <InOutArgument x:TypeArguments="sxl:XElement" x:Key="io_FilesElement">[sortedElements]</InOutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:WriteTextFile DisplayName="Write Text File" FileName="[in_Config(&quot;FileServer_BotFiles&quot;) + &quot;\hrea_6_sorted_docs.xml&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[sortedElements.ToString]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_50">
          <Assign DisplayName="Assign sorted files" sap2010:WorkflowViewState.IdRef="Assign_11">
            <Assign.To>
              <OutArgument x:TypeArguments="sxl:XElement">[sortedElements]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sxl:XElement">[XElement.Load(in_Config("FileServer_BotFiles") + "\hrea_6_sorted_docs.xml")]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Info" Message="[&quot;Already sorted remaining files.&quot;]" />
        </Sequence>
      </If.Else>
    </If>
    <If Condition="[Directory.GetFiles(in_Config(&quot;FileServer_BotFiles&quot;), &quot;hrea_7_files*&quot;).Count &lt; 1]" DisplayName="If no files gathered" sap2010:WorkflowViewState.IdRef="If_18">
      <If.Then>
        <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_12" Values="[sortedElements.Elements]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="sxl:XElement">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sxl:XElement" Name="folder" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_17">
                <ui:BuildDataTable DataTable="[fileMatching]" DisplayName="Build Data Table" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Status&quot; type=&quot;xs:string&quot; default=&quot;Skip&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Item_x0020_Reference&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;File_x0020_Name&quot; type=&quot;xs:string&quot; default=&quot;Skip&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_35" Level="Trace" Message="[&quot;Reading from &quot; &amp; folder.Attribute(&quot;path&quot;).Value &amp; &quot; with &quot; &amp; folder.DescendantsAndSelf.Count &amp; &quot; elements for entry.&quot;]" />
                <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[folder.Descendants]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="sxl:XElement">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sxl:XElement" Name="element" />
                      </ActivityAction.Argument>
                      <If Condition="[Not element.HasElements]" sap2010:WorkflowViewState.IdRef="If_6">
                        <If.Then>
                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Skip&quot;, Path.GetFileName(element.Value), Path.GetFullPath(element.Value)}]" DataTable="[fileMatching]" DisplayName="Add Data Row" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                        </If.Then>
                      </If>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Trace" Message="[&quot;Building file list for &quot; + folder.Name.LocalName]" />
                <ui:WriteCsvFile Encoding="{x:Null}" AddHeaders="True" DataTable="[fileMatching]" Delimitator="Comma" DisplayName="Write CSV" FilePath="[in_Config(&quot;FileServer_BotFiles&quot;) + &quot;\hrea_7_files&quot; + folder.Name.LocalName + &quot;.csv&quot;]" sap2010:WorkflowViewState.IdRef="WriteCsvFile_1" />
                <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[folder.Descendants]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="sxl:XElement">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                      </ActivityAction.Argument>
                      <If Condition="[Not item.HasElements]" sap2010:WorkflowViewState.IdRef="If_3">
                        <If.Then>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_19">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="content">
                                <Variable.Default>
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </Variable.Default>
                              </Variable>
                              <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="lines" />
                            </Sequence.Variables>
                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Checking &quot; + item.Value]" />
                            <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[Path.GetExtension(item.Value).ToUpper]" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                              <Switch.Default>
                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Warn" Message="[&quot;Not handling &quot; + Path.GetExtension(item.Value).ToUpper]" />
                              </Switch.Default>
                              <TryCatch x:Key=".PDF" DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                <TryCatch.Try>
                                  <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="[item.Value]" sap2010:WorkflowViewState.IdRef="ReadPDFText_2" Range="All" Text="[content]" />
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception1" />
                                      </ActivityAction.Argument>
                                      <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                                        <TryCatch.Try>
                                          <ui:ReadPDFWithOCR DegreeOfParallelism="-1" DisplayName="Read PDF With OCR" FileName="[item.Value]" sap2010:WorkflowViewState.IdRef="ReadPDFWithOCR_2" ImageDpi="150" Range="All" Text="[content]">
                                            <ui:ReadPDFWithOCR.OCREngine>
                                              <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                                                <ActivityFunc.Argument>
                                                  <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                                                </ActivityFunc.Argument>
                                                <ui:MicrosoftOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_2" Image="[Image]" Language="en" Profile="Legacy" Scale="1" />
                                              </ActivityFunc>
                                            </ui:ReadPDFWithOCR.OCREngine>
                                          </ui:ReadPDFWithOCR>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception2" />
                                              </ActivityAction.Argument>
                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Error" Message="[exception1.Message + vbNewLine + exception2.Message]" />
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                              <TryCatch x:Key=".DOCX" DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                                <TryCatch.Try>
                                  <p:DocumentReadText DisplayName="Read Text" FilePath="[item.Value]" sap2010:WorkflowViewState.IdRef="DocumentReadText_1" Text="[content]" />
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception1" />
                                      </ActivityAction.Argument>
                                      <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                                        <TryCatch.Try>
                                          <p:WordApplicationScope DisplayName="Word Application Scope" FilePath="[item.Value]" sap2010:WorkflowViewState.IdRef="WordApplicationScope_1">
                                            <p:WordApplicationScope.Body>
                                              <ActivityAction x:TypeArguments="ui:WordDocument">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                                </ActivityAction.Argument>
                                                <p:WordReadText DisplayName="Read Text" sap2010:WorkflowViewState.IdRef="WordReadText_1" Text="[content]" />
                                              </ActivityAction>
                                            </p:WordApplicationScope.Body>
                                          </p:WordApplicationScope>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception2" />
                                              </ActivityAction.Argument>
                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Error" Message="[exception1.Message + vbNewLine + exception2.Message]" />
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                              <TryCatch x:Key=".DOC" DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                                <TryCatch.Try>
                                  <p:DocumentReadText DisplayName="Read Text" FilePath="[item.Value]" sap2010:WorkflowViewState.IdRef="DocumentReadText_2" Text="[content]" />
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception1" />
                                      </ActivityAction.Argument>
                                      <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                                        <TryCatch.Try>
                                          <p:WordApplicationScope DisplayName="Word Application Scope" FilePath="[item.Value]" sap2010:WorkflowViewState.IdRef="WordApplicationScope_2">
                                            <p:WordApplicationScope.Body>
                                              <ActivityAction x:TypeArguments="ui:WordDocument">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                                </ActivityAction.Argument>
                                                <p:WordReadText DisplayName="Read Text" sap2010:WorkflowViewState.IdRef="WordReadText_2" Text="[content]" />
                                              </ActivityAction>
                                            </p:WordApplicationScope.Body>
                                          </p:WordApplicationScope>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception2" />
                                              </ActivityAction.Argument>
                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Error" Message="[exception1.Message + vbNewLine + exception2.Message]" />
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                              <TryCatch x:Key=".RTF" DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                                <TryCatch.Try>
                                  <p:DocumentReadText DisplayName="Read Text" FilePath="[item.Value]" sap2010:WorkflowViewState.IdRef="DocumentReadText_3" Text="[content]" />
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception1" />
                                      </ActivityAction.Argument>
                                      <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                                        <TryCatch.Try>
                                          <p:WordApplicationScope DisplayName="Word Application Scope" FilePath="[item.Value]" sap2010:WorkflowViewState.IdRef="WordApplicationScope_3">
                                            <p:WordApplicationScope.Body>
                                              <ActivityAction x:TypeArguments="ui:WordDocument">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                                </ActivityAction.Argument>
                                                <p:WordReadText DisplayName="Read Text" sap2010:WorkflowViewState.IdRef="WordReadText_3" Text="[content]" />
                                              </ActivityAction>
                                            </p:WordApplicationScope.Body>
                                          </p:WordApplicationScope>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception2" />
                                              </ActivityAction.Argument>
                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Error" Message="[exception1.Message + vbNewLine + exception2.Message]" />
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                            </Switch>
                            <Assign DisplayName="Assign lines with content between comments and note" sap2010:WorkflowViewState.IdRef="Assign_1">
                              <Assign.To>
                                <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">[lines]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="scg:IEnumerable(x:String)" xml:space="preserve">[content.Split(vbNewLine.ToCharArray).
Where(Function(s) Not String.IsNullOrWhiteSpace(s))]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[lines.Any(Function(s) s.Contains(&quot;Comments/Conditions:&quot;) Or s.Contains(&quot;Note:&quot;))]" sap2010:WorkflowViewState.IdRef="If_4">
                              <If.Then>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_20">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="filtered" />
                                  </Sequence.Variables>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">[lines]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="scg:IEnumerable(x:String)" xml:space="preserve">[lines.SkipWhile(Function(s) Not s.Contains("Comments/Conditions:")).
TakeWhile(Function(s) Not s.Contains("Note:")).
Skip(1)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Trace" Message="[&quot;Got &quot; &amp; lines.Count &amp; &quot; from &quot; + item.Value]" />
                                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[lines]">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="x:String">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:String" Name="line" />
                                        </ActivityAction.Argument>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_26">
                                          <Assign DisplayName="Assign decimal-less line" sap2010:WorkflowViewState.IdRef="Assign_4">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[line]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[Regex.Replace(line, "\d+\.", "")]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign trimmed line" sap2010:WorkflowViewState.IdRef="Assign_3">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[line]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[line.Trim("• ".ToCharArray)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <If Condition="[line &lt;&gt; &quot;&quot;]" sap2010:WorkflowViewState.IdRef="If_5">
                                            <If.Then>
                                              <AddToCollection x:TypeArguments="x:String" Collection="[filtered]" DisplayName="Add To Collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[line]" />
                                            </If.Then>
                                          </If>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                  </ui:ForEach>
                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Info" Message="[&quot;Filtered lines to &quot; &amp; filtered.Count &amp; &quot; items.&quot;]" />
                                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[filtered]">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="x:String">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:String" Name="comment" />
                                        </ActivityAction.Argument>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_28">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:Int32" Name="index" />
                                          </Sequence.Variables>
                                          <ui:LookupDataTable CellValue="{x:Null}" LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" TargetColumnIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[fileMatching]" DisplayName="Lookup Data Table" sap2010:WorkflowViewState.IdRef="LookupDataTable_1" LookupColumnName="Item Reference" LookupValue="[comment]" RowIndex="[index]" />
                                          <If Condition="[index &lt; 0]" DisplayName="If not found" sap2010:WorkflowViewState.IdRef="If_7">
                                            <If.Then>
                                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;To Sort&quot;, comment, &quot;&quot;}]" DataTable="[fileMatching]" DisplayName="Add Data Row" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                                            </If.Then>
                                            <If.Else>
                                              <Assign DisplayName="Assign matched" sap2010:WorkflowViewState.IdRef="Assign_5">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Object">[fileMatching.Rows(index).Item("Status")]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Object">["Matched"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                  </ui:ForEach>
                                  <ui:WriteCsvFile Encoding="{x:Null}" AddHeaders="True" DataTable="[fileMatching]" Delimitator="Comma" DisplayName="Write CSV" FilePath="[in_Config(&quot;FileServer_BotFiles&quot;) + &quot;\hrea_7_files&quot; + folder.Name.LocalName + &quot;.csv&quot;]" sap2010:WorkflowViewState.IdRef="WriteCsvFile_2" />
                                </Sequence>
                              </If.Then>
                            </If>
                          </Sequence>
                        </If.Then>
                      </If>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </If.Then>
    </If>
    <If Condition="[Directory.GetFiles(in_Config(&quot;FileServer_BotFiles&quot;), &quot;hrea_8_app*&quot;).Count &lt; 1]" DisplayName="If no applications set up" sap2010:WorkflowViewState.IdRef="If_16">
      <If.Then>
        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[Directory.GetFiles(in_Config(&quot;FileServer_BotFiles&quot;), &quot;hrea_7_files*&quot;)]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="csvFile" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_30">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Int32" Name="index" />
                  <Variable x:TypeArguments="sxl:XElement" Name="applicationDocument" />
                  <Variable x:TypeArguments="sd:DataTable" Name="projectFiles" />
                  <Variable x:TypeArguments="x:String" Name="applicationFileName" />
                </Sequence.Variables>
                <ui:ReadCsvFile Encoding="{x:Null}" DataTable="[projectFiles]" Delimitator="Comma" DisplayName="Read CSV" FilePath="[csvFile]" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1" />
                <ui:LookupDataTable CellValue="{x:Null}" LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" TargetColumnIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[projectFiles]" DisplayName="Lookup Data Table" sap2010:WorkflowViewState.IdRef="LookupDataTable_2" LookupColumnName="Item Reference" LookupValue="Application.xml" RowIndex="[index]" />
                <If Condition="[index &lt; 0]" sap2010:WorkflowViewState.IdRef="If_8">
                  <If.Then>
                    <ui:Continue sap2010:WorkflowViewState.IdRef="Continue_1" />
                  </If.Then>
                </If>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[applicationFileName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[projectFiles.Rows(index).Item("File Name").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info" Message="[&quot;Gathering files for &quot; + applicationFileName]" />
                <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sxl:XElement">[applicationDocument]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sxl:XElement">[XElement.Load(applicationFileName)]</InArgument>
                  </Assign.Value>
                </Assign>
                <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_11">
                  <TryCatch.Try>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_38">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="researchMaster" />
                      </Sequence.Variables>
                      <Assign DisplayName="Assign RM number" sap2010:WorkflowViewState.IdRef="Assign_14">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[researchMaster]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[applicationFileName.Replace(in_Config("FileServer_Sorted"), "").Split({"\"}, StringSplitOptions.RemoveEmptyEntries).First]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Process_GatherAndCheck workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Process_GatherAndCheck.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_ProjectFiles">[projectFiles]</InArgument>
                          <InOutArgument x:TypeArguments="sxl:XElement" x:Key="io_ApplicationFile">[applicationDocument]</InOutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_39" Level="Info" Message="[&quot;Saving application at &quot; + in_Config(&quot;FileServer_BotFiles&quot;) + &quot;\hrea_8_app_&quot; + researchMaster + &quot;.xml&quot;]" />
                      <ui:WriteTextFile DisplayName="Write Text File" FileName="[in_Config(&quot;FileServer_BotFiles&quot;) + &quot;\hrea_8_app_&quot; + researchMaster + &quot;.xml&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_5" Text="[applicationDocument.ToString]" />
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Error" Message="[exception]" />
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </If.Then>
    </If>
    <If Condition="[in_ProceedWithDataEntry]" sap2010:WorkflowViewState.IdRef="If_17">
      <If.Then>
        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_13" Values="[Directory.GetFiles(in_Config(&quot;FileServer_BotFiles&quot;), &quot;hrea_8_app*&quot;)]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="application" />
              </ActivityAction.Argument>
              <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_13">
                <TryCatch.Try>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_52">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="researchMaster" />
                      <Variable x:TypeArguments="sxl:XElement" Name="applicationDocument" />
                    </Sequence.Variables>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sxl:XElement">[applicationDocument]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sxl:XElement">[XElement.Load(application)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign RM number" sap2010:WorkflowViewState.IdRef="Assign_12">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[researchMaster]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Path.GetFileName(application).Replace("hrea_8_app_", "").Replace(".xml", "")]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_38" Level="Info" Message="[&quot;Entering data for RM: &quot; + researchMaster + &quot; and App: &quot; + applicationDocument.Element(&quot;ApplicationInfo&quot;).Element(&quot;ApplicationIdentifier&quot;).Value]" />
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke HREANewApplication workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="NHMRC\HREANewApplication.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sxl:XElement" x:Key="in_ApplicationDetails">[applicationDocument]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_ResearchMasterNo">[researchMaster]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_13">
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Error" Message="[exception.Message]" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
                <TryCatch.Finally>
                  <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_15">
                    <TryCatch.Try>
                      <Sequence>
                        <ui:Click ClickType="CLICK_SINGLE" DelayBefore="5" DelayMS="5" DisplayName="Click Applications page" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;html app='chrome.exe' title='* - External Portal' /&gt;&lt;webctrl aaname='Applications' tag='SPAN' /&gt;" WaitForReady="COMPLETE">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                            </ui:Target>
                          </ui:Click.Target>
                        </ui:Click>
                        <ui:RetryScope DisplayName="Retry Scope" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:03">
                          <ui:RetryScope.ActivityBody>
                            <ActivityAction>
                              <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_14">
                                <TryCatch.Try>
                                  <ui:WaitUiElementAppear FoundElement="{x:Null}" DisplayName="Find Search Bar" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_1" WaitActive="False" WaitVisible="False">
                                    <ui:WaitUiElementAppear.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;html app='chrome.exe' title='* - External Portal' /&gt;&lt;webctrl tag='INPUT' type='search' /&gt;" WaitForReady="COMPLETE">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                      </ui:Target>
                                    </ui:WaitUiElementAppear.Target>
                                  </ui:WaitUiElementAppear>
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_14">
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                      </ActivityAction.Argument>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_54">
                                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_40" Level="Warn" Message="[exception.Message]" />
                                        <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                                      </Sequence>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                            </ActivityAction>
                          </ui:RetryScope.ActivityBody>
                          <ui:RetryScope.Condition>
                            <ActivityFunc x:TypeArguments="x:Boolean" />
                          </ui:RetryScope.Condition>
                        </ui:RetryScope>
                        <sap2010:WorkflowViewState.IdRef>Sequence_55</sap2010:WorkflowViewState.IdRef>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_15">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <If Condition="[exception.InnerException Is Nothing]" DisplayName="If inner exception to throw" sap2010:WorkflowViewState.IdRef="If_19">
                            <If.Then>
                              <Rethrow DisplayName="Rethrow exception" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
                            </If.Then>
                            <If.Else>
                              <Throw DisplayName="Throw inner exception" Exception="[exception.InnerException]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                            </If.Else>
                          </If>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                    <TryCatch.Finally>
                      <ui:Break sap2010:WorkflowViewState.IdRef="Break_1" />
                    </TryCatch.Finally>
                  </TryCatch>
                </TryCatch.Finally>
              </TryCatch>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </If.Then>
    </If>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="639,91" />
      <sap2010:ViewStateData Id="Delete_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="287,195" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="464,345" />
      <sap2010:ViewStateData Id="Delete_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="287,195" />
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="464,345" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_23" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="LogMessage_30" sap:VirtualizedContainerService.HintSize="464,93" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="639,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_25" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WriteTextFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_31" sap:VirtualizedContainerService.HintSize="314,93" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="639,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_24" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WriteTextFile_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_49" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_32" sap:VirtualizedContainerService.HintSize="314,93" />
      <sap2010:ViewStateData Id="Sequence_50" sap:VirtualizedContainerService.HintSize="336,317">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="639,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildDataTable_1" sap:VirtualizedContainerService.HintSize="815,59" />
      <sap2010:ViewStateData Id="LogMessage_35" sap:VirtualizedContainerService.HintSize="815,93" />
      <sap2010:ViewStateData Id="AddDataRow_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="464,210" />
      <sap2010:ViewStateData Id="ForEach`1_9" sap:VirtualizedContainerService.HintSize="815,345">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_36" sap:VirtualizedContainerService.HintSize="815,93" />
      <sap2010:ViewStateData Id="WriteCsvFile_1" sap:VirtualizedContainerService.HintSize="815,155" />
      <sap2010:ViewStateData Id="LogMessage_14" sap:VirtualizedContainerService.HintSize="652,93" />
      <sap2010:ViewStateData Id="LogMessage_15" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="ReadPDFText_2" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="MicrosoftOCR_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ReadPDFWithOCR_2" sap:VirtualizedContainerService.HintSize="314,131" />
      <sap2010:ViewStateData Id="LogMessage_13" sap:VirtualizedContainerService.HintSize="314,93" />
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="404,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="418,391" />
      <sap2010:ViewStateData Id="Catch`1_4" sap:VirtualizedContainerService.HintSize="404,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="438,658" />
      <sap2010:ViewStateData Id="DocumentReadText_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WordReadText_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="WordApplicationScope_1" sap:VirtualizedContainerService.HintSize="414,168" />
      <sap2010:ViewStateData Id="LogMessage_17" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="418,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="432,399" />
      <sap2010:ViewStateData Id="Catch`1_6" sap:VirtualizedContainerService.HintSize="438,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_6" sap:VirtualizedContainerService.HintSize="452,695" />
      <sap2010:ViewStateData Id="DocumentReadText_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WordReadText_2" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="WordApplicationScope_2" sap:VirtualizedContainerService.HintSize="414,168" />
      <sap2010:ViewStateData Id="LogMessage_19" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_7" sap:VirtualizedContainerService.HintSize="418,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_7" sap:VirtualizedContainerService.HintSize="432,399" />
      <sap2010:ViewStateData Id="Catch`1_8" sap:VirtualizedContainerService.HintSize="438,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_8" sap:VirtualizedContainerService.HintSize="452,695" />
      <sap2010:ViewStateData Id="DocumentReadText_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WordReadText_3" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="WordApplicationScope_3" sap:VirtualizedContainerService.HintSize="414,168" />
      <sap2010:ViewStateData Id="LogMessage_21" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_9" sap:VirtualizedContainerService.HintSize="418,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_9" sap:VirtualizedContainerService.HintSize="432,399" />
      <sap2010:ViewStateData Id="Catch`1_10" sap:VirtualizedContainerService.HintSize="438,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_10" sap:VirtualizedContainerService.HintSize="452,695" />
      <sap2010:ViewStateData Id="Switch`1_1" sap:VirtualizedContainerService.HintSize="652,210" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="652,64" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="505,64" />
      <sap2010:ViewStateData Id="LogMessage_23" sap:VirtualizedContainerService.HintSize="505,93" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,210" />
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="486,534">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_7" sap:VirtualizedContainerService.HintSize="505,669" />
      <sap2010:ViewStateData Id="LogMessage_33" sap:VirtualizedContainerService.HintSize="505,93" />
      <sap2010:ViewStateData Id="LookupDataTable_1" sap:VirtualizedContainerService.HintSize="467,22" />
      <sap2010:ViewStateData Id="AddDataRow_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="467,210" />
      <sap2010:ViewStateData Id="Sequence_28" sap:VirtualizedContainerService.HintSize="489,396">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_10" sap:VirtualizedContainerService.HintSize="505,531" />
      <sap2010:ViewStateData Id="WriteCsvFile_2" sap:VirtualizedContainerService.HintSize="505,155" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="527,1929">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="652,2079">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="674,2690">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="799,2840" />
      <sap2010:ViewStateData Id="ForEach`1_6" sap:VirtualizedContainerService.HintSize="815,2975">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="837,4044">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_12" sap:VirtualizedContainerService.HintSize="853,4179">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_18" sap:VirtualizedContainerService.HintSize="639,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadCsvFile_1" sap:VirtualizedContainerService.HintSize="464,152" />
      <sap2010:ViewStateData Id="LookupDataTable_2" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Continue_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="LogMessage_27" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_27" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_39" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="WriteTextFile_5" sap:VirtualizedContainerService.HintSize="314,132" />
      <sap2010:ViewStateData Id="Sequence_38" sap:VirtualizedContainerService.HintSize="336,614">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_28" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_11" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_11" sap:VirtualizedContainerService.HintSize="464,841" />
      <sap2010:ViewStateData Id="Sequence_30" sap:VirtualizedContainerService.HintSize="486,1798">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_11" sap:VirtualizedContainerService.HintSize="502,1932">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="639,2080">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_38" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_30" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_52" sap:VirtualizedContainerService.HintSize="336,542">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_37" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_13" sap:VirtualizedContainerService.HintSize="484,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_1" sap:VirtualizedContainerService.HintSize="440,68" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_1" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="LogMessage_40" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Rethrow_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_54" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_14" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_14" sap:VirtualizedContainerService.HintSize="418,295" />
      <sap2010:ViewStateData Id="RetryScope_1" sap:VirtualizedContainerService.HintSize="440,469">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_55" sap:VirtualizedContainerService.HintSize="462,701">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Rethrow_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_19" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Catch`1_15" sap:VirtualizedContainerService.HintSize="466,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Break_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="TryCatch_15" sap:VirtualizedContainerService.HintSize="480,928">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_13" sap:VirtualizedContainerService.HintSize="498,1155" />
      <sap2010:ViewStateData Id="ForEach`1_13" sap:VirtualizedContainerService.HintSize="514,1289" />
      <sap2010:ViewStateData Id="If_17" sap:VirtualizedContainerService.HintSize="639,1437">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="661,4398">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ProcessTransaction_1" sap:VirtualizedContainerService.HintSize="701,4518" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>