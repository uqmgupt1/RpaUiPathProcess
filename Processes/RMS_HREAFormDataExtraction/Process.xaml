<Activity mc:Ignorable="sap sap2010 sads" x:Class="ProcessTransaction"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.uipath.com/workflow/activities/word"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing"
 xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.XPath</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: In this file all other process specific files will be invoked. If an application exception occurs, the current transaction can be retried. If a BRE is thrown, the transaction will be skipped. Can be a flowchart or sequence. " DisplayName="ProcessTransaction" sap2010:WorkflowViewState.IdRef="Sequence_8">
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Start Process.xaml&quot;]" />
    <If Condition="[Not File.Exists(&quot;hrea_4_grouped_by_rm.xml&quot;)]" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_16">
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each FileServer Sorted" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetDirectories(in_Config(&quot;FileServer_Sorted&quot;))]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="folder" />
                </ActivityAction.Argument>
                <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete sorted" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[folder]" />
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each FileServer Leftover" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Directory.GetDirectories(in_Config(&quot;FileServer_Leftover&quot;))]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="folder" />
                </ActivityAction.Argument>
                <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete leftover" sap2010:WorkflowViewState.IdRef="Delete_2" Path="[folder]" />
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Process_IdentifyAndSort workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Process_IdentifyAndSort.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_SourcePath">[in_Config("FileServer_Source")]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_SortedPath">[in_Config("FileServer_Sorted")]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_LeftoverPath">[in_Config("FileServer_Leftover")]</InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[in_Config]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Then>
    </If>
    <Sequence DisplayName="5 get unsorted items" sap2010:WorkflowViewState.IdRef="Sequence_9">
      <Sequence.Variables>
        <Variable x:TypeArguments="sxl:XElement" Name="leftoverElements" />
      </Sequence.Variables>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetFilesAndFolders workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="IdentifyAndSort\GetFilesAndFolders.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_CurrentPath">[in_Config("FileServer_Leftover")]</InArgument>
          <InOutArgument x:TypeArguments="sxl:XElement" x:Key="io_FilesElement">[leftoverElements]</InOutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:WriteTextFile DisplayName="Write Text File" FileName="hrea_5_loftover_docs.xml" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="[leftoverElements.ToString]" />
    </Sequence>
    <Sequence DisplayName="6 get sorted items" sap2010:WorkflowViewState.IdRef="Sequence_10">
      <Sequence.Variables>
        <Variable x:TypeArguments="sxl:XElement" Name="sortedElements" />
      </Sequence.Variables>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetFilesAndFolders workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="IdentifyAndSort\GetFilesAndFolders.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_CurrentPath">[in_Config("FileServer_Sorted")]</InArgument>
          <InOutArgument x:TypeArguments="sxl:XElement" x:Key="io_FilesElement">[sortedElements]</InOutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:WriteTextFile DisplayName="Write Text File" FileName="hrea_6_sorted_docs.xml" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[sortedElements.ToString]" />
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[Directory.GetDirectories(in_Config(&quot;FileServer_Sorted&quot;))]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="folder" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_17">
              <Sequence.Variables>
                <Variable x:TypeArguments="sxl:XElement" Name="elements" />
              </Sequence.Variables>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetFilesAndFolders workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="IdentifyAndSort\GetFilesAndFolders.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_CurrentPath">[folder]</InArgument>
                  <InOutArgument x:TypeArguments="sxl:XElement" x:Key="io_FilesElement">[elements]</InOutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:WriteTextFile DisplayName="Write Text File" FileName="[in_Config(&quot;FileServer_Sorted&quot;) + &quot;\&quot; + elements.Name.LocalName + &quot;.xml&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_4" Text="[elements.ToString]" />
              <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[elements.Descendants]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="sxl:XElement">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                    </ActivityAction.Argument>
                    <If Condition="[Not item.HasElements]" sap2010:WorkflowViewState.IdRef="If_3">
                      <If.Then>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_19">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="content">
                              <Variable.Default>
                                <Literal x:TypeArguments="x:String" Value="" />
                              </Variable.Default>
                            </Variable>
                            <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="lines" />
                          </Sequence.Variables>
                          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Checking &quot; + item.Value]" />
                          <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[Path.GetExtension(item.Value).ToUpper]" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                            <Switch.Default>
                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Warn" Message="[&quot;Not handling &quot; + Path.GetExtension(item.Value).ToUpper]" />
                            </Switch.Default>
                            <TryCatch x:Key=".PDF" DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                              <TryCatch.Try>
                                <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="[item.Value]" sap2010:WorkflowViewState.IdRef="ReadPDFText_2" Range="All" Text="[content]" />
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception1" />
                                    </ActivityAction.Argument>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_18">
                                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Trace" Message="[exception1.Message]" />
                                      <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                                        <TryCatch.Try>
                                          <ui:ReadPDFWithOCR DegreeOfParallelism="-1" DisplayName="Read PDF With OCR" FileName="[item.Value]" sap2010:WorkflowViewState.IdRef="ReadPDFWithOCR_2" ImageDpi="150" Range="All" Text="[content]">
                                            <ui:ReadPDFWithOCR.OCREngine>
                                              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                <ActivityFunc.Argument>
                                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                </ActivityFunc.Argument>
                                                <ui:MicrosoftOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_2" Image="[Image]" Language="en" Profile="Legacy" Scale="1" />
                                              </ActivityFunc>
                                            </ui:ReadPDFWithOCR.OCREngine>
                                          </ui:ReadPDFWithOCR>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception2" />
                                              </ActivityAction.Argument>
                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Error" Message="[exception1.Message + vbNewLine + exception2.Message]" />
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </Sequence>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                            <TryCatch x:Key=".DOCX" DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                              <TryCatch.Try>
                                <p:DocumentReadText DisplayName="Read Text" FilePath="[item.Value]" sap2010:WorkflowViewState.IdRef="DocumentReadText_1" Text="[content]" />
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception1" />
                                    </ActivityAction.Argument>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_21">
                                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Trace" Message="[exception1.Message]" />
                                      <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                                        <TryCatch.Try>
                                          <p:WordApplicationScope DisplayName="Word Application Scope" FilePath="[item.Value]" sap2010:WorkflowViewState.IdRef="WordApplicationScope_1">
                                            <p:WordApplicationScope.Body>
                                              <ActivityAction x:TypeArguments="ui:WordDocument">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                                </ActivityAction.Argument>
                                                <p:WordReadText DisplayName="Read Text" sap2010:WorkflowViewState.IdRef="WordReadText_1" Text="[content]" />
                                              </ActivityAction>
                                            </p:WordApplicationScope.Body>
                                          </p:WordApplicationScope>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception2" />
                                              </ActivityAction.Argument>
                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Error" Message="[exception1.Message + vbNewLine + exception2.Message]" />
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </Sequence>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                            <TryCatch x:Key=".DOC" DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                              <TryCatch.Try>
                                <p:DocumentReadText DisplayName="Read Text" FilePath="[item.Value]" sap2010:WorkflowViewState.IdRef="DocumentReadText_2" Text="[content]" />
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception1" />
                                    </ActivityAction.Argument>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_22">
                                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Trace" Message="[exception1.Message]" />
                                      <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                                        <TryCatch.Try>
                                          <p:WordApplicationScope DisplayName="Word Application Scope" FilePath="[item.Value]" sap2010:WorkflowViewState.IdRef="WordApplicationScope_2">
                                            <p:WordApplicationScope.Body>
                                              <ActivityAction x:TypeArguments="ui:WordDocument">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                                </ActivityAction.Argument>
                                                <p:WordReadText DisplayName="Read Text" sap2010:WorkflowViewState.IdRef="WordReadText_2" Text="[content]" />
                                              </ActivityAction>
                                            </p:WordApplicationScope.Body>
                                          </p:WordApplicationScope>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception2" />
                                              </ActivityAction.Argument>
                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Error" Message="[exception1.Message + vbNewLine + exception2.Message]" />
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </Sequence>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                            <TryCatch x:Key=".RTF" DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                              <TryCatch.Try>
                                <p:DocumentReadText DisplayName="Read Text" FilePath="[item.Value]" sap2010:WorkflowViewState.IdRef="DocumentReadText_3" Text="[content]" />
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception1" />
                                    </ActivityAction.Argument>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_23">
                                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Trace" Message="[exception1.Message]" />
                                      <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                                        <TryCatch.Try>
                                          <p:WordApplicationScope DisplayName="Word Application Scope" FilePath="[item.Value]" sap2010:WorkflowViewState.IdRef="WordApplicationScope_3">
                                            <p:WordApplicationScope.Body>
                                              <ActivityAction x:TypeArguments="ui:WordDocument">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                                </ActivityAction.Argument>
                                                <p:WordReadText DisplayName="Read Text" sap2010:WorkflowViewState.IdRef="WordReadText_3" Text="[content]" />
                                              </ActivityAction>
                                            </p:WordApplicationScope.Body>
                                          </p:WordApplicationScope>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception2" />
                                              </ActivityAction.Argument>
                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Error" Message="[exception1.Message + vbNewLine + exception2.Message]" />
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </Sequence>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                          </Switch>
                          <Assign DisplayName="Assign lines with content between comments and note" sap2010:WorkflowViewState.IdRef="Assign_1">
                            <Assign.To>
                              <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">[lines]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="scg:IEnumerable(x:String)" xml:space="preserve">[content.Split(vbNewLine.ToCharArray).
Where(Function(s) Not String.IsNullOrWhiteSpace(s))]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <If Condition="[lines.Any(Function(s) s.Contains(&quot;Comments/Conditions:&quot;) Or s.Contains(&quot;Note:&quot;))]" sap2010:WorkflowViewState.IdRef="If_4">
                            <If.Then>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_20">
                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info" Message="[lines]" />
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">[lines]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="scg:IEnumerable(x:String)" xml:space="preserve">[lines.SkipWhile(Function(s) Not s.Contains("Comments/Conditions:")).
TakeWhile(Function(s) Not s.Contains("Note:")).
Skip(1)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:AppendLine DisplayName="Append Line" FileName="[in_Config(&quot;FileServer_Sorted&quot;) + &quot;\&quot; + elements.Name.LocalName + &quot;.xml&quot;]" sap2010:WorkflowViewState.IdRef="AppendLine_1" Text="[String.Join(vbNewLine, lines)]" />
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </If.Then>
                    </If>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
      <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_1">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[sortedElements.Elements]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="sxl:XElement">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sxl:XElement" Name="rm" />
                  </ActivityAction.Argument>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Int32" Name="index" />
                    </Sequence.Variables>
                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[rm.Name.ToString.Substring(1)]" />
                    <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="[index]" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[rm.Descendants]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="sxl:XElement">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                          </ActivityAction.Argument>
                          <If Condition="[Not item.HasElements And item.Value.EndsWith(&quot;.pdf&quot;)]" sap2010:WorkflowViewState.IdRef="If_1">
                            <If.Then>
                              <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                                <TryCatch.Variables>
                                  <Variable x:TypeArguments="x:String" Name="documentContent">
                                    <Variable.Default>
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </Variable.Default>
                                  </Variable>
                                </TryCatch.Variables>
                                <TryCatch.Try>
                                  <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="[item.Value]" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[documentContent]" />
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception1" />
                                      </ActivityAction.Argument>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
                                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Warn" Message="[exception1.Message]" />
                                        <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                          <TryCatch.Try>
                                            <ui:ReadPDFWithOCR DegreeOfParallelism="-1" DisplayName="Read PDF With OCR" FileName="[item.Value]" sap2010:WorkflowViewState.IdRef="ReadPDFWithOCR_1" ImageDpi="150" Range="All" Text="[documentContent]">
                                              <ui:ReadPDFWithOCR.OCREngine>
                                                <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                  <ActivityFunc.Argument>
                                                    <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                  </ActivityFunc.Argument>
                                                  <ui:MicrosoftOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_1" Image="[Image]" Language="en" Profile="Legacy" Scale="1" />
                                                </ActivityFunc>
                                              </ui:ReadPDFWithOCR.OCREngine>
                                            </ui:ReadPDFWithOCR>
                                          </TryCatch.Try>
                                          <TryCatch.Catches>
                                            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                              <ActivityAction x:TypeArguments="s:Exception">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception2" />
                                                </ActivityAction.Argument>
                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Error" Message="[exception2.Message]" />
                                              </ActivityAction>
                                            </Catch>
                                          </TryCatch.Catches>
                                        </TryCatch>
                                      </Sequence>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                                <TryCatch.Finally>
                                  <ui:WriteTextFile DisplayName="Write Text File" FileName="[rm.Attribute(&quot;path&quot;).Value &amp; &quot; - &quot; &amp; Path.GetFileNameWithoutExtension(item.Value) &amp; &quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_3" Text="[documentContent]" />
                                </TryCatch.Finally>
                              </TryCatch>
                            </If.Then>
                          </If>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ui:CommentOut.Body>
      </ui:CommentOut>
    </Sequence>
    <sads:DebugSymbol.Symbol>d0xDOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcUk1TX0hSRUFGb3JtRGF0YUV4dHJhY3Rpb25cUHJvY2Vzcy54YW1shQFRA9QDDgIBAVIFUpcBAwGiAVMFdAoDAYsBdQWAARADAYEBgQEF0gMQAgECUnJSlAEDAaMBUxNTTAMBjAFVCXIUAwGNAXkHfh8DAYUBfwd/sgEDAYIBhQEHigEfAgF7iwEHiwGuAQIBeIwBB/wCFAIBBP0CB9EDFwIBA1YLXxgDAZ0BYAtpGAMBmAFqC3EjAwGOAXtJe2sDAYkBfFF8YwMBhwF5wgF56wEDAYYBf5IBf68BAwGEAX9Af1oDAYMBhwFJhwFpAgF/iAFRiAFhAgF9hQHCAYUB6wECAXyLAZABiwGrAQIBeosBQIsBWAIBeYwBkgGMAdgBAgF3kgEN+QIYAgEFVqgBVu4BAwGhAVwRXJABAwGeAWCqAWDyAQMBnAFmEWaSAQMBmQFuTm5wAwGWAW1MbWwDAZQBb2JvbQMBkgFqywFq6QEDAZEBbExsbAMBjwGWAQ+bAScCAXGcAQ+cAYECAgFunQEP+AIcAgEGXIMBXI0BAwGfAWaFAWaPAQMBmgGYAVGYAVkCAXWZAVmZAWMCAXOWAcoBlgHzAQIBcpwB6QGcAf4BAgFwnAFInAGxAQIBb50BngGdAbYBAgFtowEV9QIaAgEHowEjowE7AgEIpQEZ8wIkAgEJqQEhqQFQAgEKrgEbrgGyAQIBa68BG9cCJAIBHNgCG+ACJAIBGOECG/ICIAIBC64BiQGuAa8BAgFsrwFerwGHAQIBHbMBHdsBKAIBU9wBHYQCKAIBQoUCHa0CKAIBMa4CHdYCKAIBILEBH7EB1QECAR7aAljaAl8CARnhAinhApEBAgEM4wIf8AIqAgENtQEhtQHSAQIBZr0BJdcBMAIBVN4BId4BrQECAU/mASWAAjACAUOHAiGHAq0BAgE+jwIlqQIwAgEysAIhsAKtAQIBLbgCJdICMAIBIbEBjQGxAdIBAgEf5AIh5AKbAQIBFeUCIe4CKgIBEe8CIe8ClQICAQ61AcQBtQHPAQIBabUBdLUBggECAWi1AbkBtQG+AQIBZ74BJ74BrwECAWO/ASfWATICAVXeAZ8B3gGqAQIBUd4BVt4BZAIBUOcBJ+cBrwECAUzoASf/ATICAUSHAp8BhwKqAQIBQIcCVocCZAIBP5ACJ5ACrwECATuRAieoAjICATOwAp8BsAKqAQIBL7ACVrACZAIBLrkCJ7kCrwECASq6AifRAjICASLkAo8B5AKYAQIBFucCXucCZQIBEu8C8QHvApICAgEQ7wJT7wK8AQIBD74BlgG+AawBAgFkwQErygE/AgFY0gEv0gHYAQIBVucBlgHnAawBAgFN6gEr8wFEAgFH+wEv+wHYAQIBRZAClgGQAqwBAgE8kwIrnAJEAgE2pAIvpALYAQIBNLkClgG5AqwBAgErvAIrxQJEAgElzQIvzQLYAQIBI8EBUsEBVgIBYsEB4gHBAe0BAgFgwQGAAcEBjgECAV/BAdcBwQHcAQIBXscBMccBsgICAVnSAZ4B0gHVAQIBV+oBceoBfwIBS/ABMfABnQECAUj7AZ4B+wHVAQIBRpMCcZMCfwIBOpkCMZkCnQECATekAp4BpALVAQIBNbwCcbwCfwIBKcICMcICnQECASbNAp4BzQLVAQIBJMcBrALHAa8CAgFdxwH9AccBhgICAVvHAZACxwGUAgIBWvABjwHwAZoBAgFJmQKPAZkCmgECATjCAo8BwgKaAQIBJw==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="700,91" />
      <sap2010:ViewStateData Id="Delete_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="314,194" />
      <sap2010:ViewStateData Id="Delete_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="314,194" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_23" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="336,679">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="700,827" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_25" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WriteTextFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="700,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_24" sap:VirtualizedContainerService.HintSize="678,87" />
      <sap2010:ViewStateData Id="WriteTextFile_1" sap:VirtualizedContainerService.HintSize="678,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_26" sap:VirtualizedContainerService.HintSize="640,87" />
      <sap2010:ViewStateData Id="WriteTextFile_4" sap:VirtualizedContainerService.HintSize="640,87" />
      <sap2010:ViewStateData Id="LogMessage_14" sap:VirtualizedContainerService.HintSize="477,91" />
      <sap2010:ViewStateData Id="LogMessage_15" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="ReadPDFText_2" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="MicrosoftOCR_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ReadPDFWithOCR_2" sap:VirtualizedContainerService.HintSize="314,131" />
      <sap2010:ViewStateData Id="LogMessage_13" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="418,358" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="440,573">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_4" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="418,287" />
      <sap2010:ViewStateData Id="DocumentReadText_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_16" sap:VirtualizedContainerService.HintSize="432,91" />
      <sap2010:ViewStateData Id="WordReadText_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="WordApplicationScope_1" sap:VirtualizedContainerService.HintSize="414,168" />
      <sap2010:ViewStateData Id="LogMessage_17" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="418,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="432,395" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="454,650">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_6" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_6" sap:VirtualizedContainerService.HintSize="418,314" />
      <sap2010:ViewStateData Id="DocumentReadText_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_18" sap:VirtualizedContainerService.HintSize="432,91" />
      <sap2010:ViewStateData Id="WordReadText_2" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="WordApplicationScope_2" sap:VirtualizedContainerService.HintSize="414,168" />
      <sap2010:ViewStateData Id="LogMessage_19" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_7" sap:VirtualizedContainerService.HintSize="418,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_7" sap:VirtualizedContainerService.HintSize="432,395" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="454,610">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_8" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_8" sap:VirtualizedContainerService.HintSize="418,314" />
      <sap2010:ViewStateData Id="DocumentReadText_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_20" sap:VirtualizedContainerService.HintSize="432,91" />
      <sap2010:ViewStateData Id="WordReadText_3" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="WordApplicationScope_3" sap:VirtualizedContainerService.HintSize="414,168" />
      <sap2010:ViewStateData Id="LogMessage_21" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_9" sap:VirtualizedContainerService.HintSize="418,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_9" sap:VirtualizedContainerService.HintSize="432,395" />
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="454,650">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_10" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_10" sap:VirtualizedContainerService.HintSize="418,314" />
      <sap2010:ViewStateData Id="Switch`1_1" sap:VirtualizedContainerService.HintSize="477,339" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="477,64" />
      <sap2010:ViewStateData Id="LogMessage_23" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="314,64" />
      <sap2010:ViewStateData Id="AppendLine_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="336,446">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="477,594" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="499,1332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="624,1480" />
      <sap2010:ViewStateData Id="ForEach`1_6" sap:VirtualizedContainerService.HintSize="640,1614" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="662,1992">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_5" sap:VirtualizedContainerService.HintSize="678,2126" />
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="559,91" />
      <sap2010:ViewStateData Id="ReadPDFText_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="MicrosoftOCR_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ReadPDFWithOCR_1" sap:VirtualizedContainerService.HintSize="314,131" />
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="418,358" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="440,613">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTextFile_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="418,287" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="543,435">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_4" sap:VirtualizedContainerService.HintSize="559,569" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="287,193" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="309,317">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="678,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="700,2595">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="722,4137">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ProcessTransaction_1" sap:VirtualizedContainerService.HintSize="762,4217" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>