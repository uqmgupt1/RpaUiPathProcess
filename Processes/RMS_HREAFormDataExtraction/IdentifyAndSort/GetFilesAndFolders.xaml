<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetFiles"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_CurrentPath" Type="InArgument(x:String)" />
    <x:Property Name="io_FilesElement" Type="InOutArgument(sxl:XElement)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetFiles_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetFiles" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <If Condition="[io_FilesElement Is Nothing]" DisplayName="If first element" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="root" />
          </Sequence.Variables>
          <Assign DisplayName="Assign rootXML" sap2010:WorkflowViewState.IdRef="Assign_12">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[root]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[String.Join(String.Empty, in_CurrentPath.Where(function(c) XmlConvert.IsNCNameChar(c)))]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[Char.IsDigit(root.FirstOrDefault)]" DisplayName="If starts with number" sap2010:WorkflowViewState.IdRef="If_6">
            <If.Then>
              <Assign DisplayName="Assign number prefix" sap2010:WorkflowViewState.IdRef="Assign_13">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[root]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">["_" + root]</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
          </If>
          <Assign DisplayName="Assign root element" sap2010:WorkflowViewState.IdRef="Assign_14">
            <Assign.To>
              <OutArgument x:TypeArguments="sxl:XElement">[io_FilesElement]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sxl:XElement">[New XElement(root, New XAttribute("path", in_CurrentPath))]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
    </If>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Folder" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetDirectories(in_CurrentPath)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="folder" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="sxl:XElement" Name="node" />
              <Variable x:TypeArguments="x:String" Name="name" />
              <Variable x:TypeArguments="x:String" Name="valid" />
            </Sequence.Variables>
            <Assign DisplayName="Assign file name" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[name]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Path.GetFileName(folder)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign validXML" sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[valid]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Join(String.Empty, name.Where(function(c) XmlConvert.IsNCNameChar(c)))]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[Char.IsDigit(valid.FirstOrDefault)]" DisplayName="If starts with number" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Then>
                <Assign DisplayName="Assign number prefix" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[valid]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["_" + valid]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[name + &quot; =&gt; &quot; + valid]" />
            <Assign DisplayName="Init element" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="sxl:XElement">[node]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sxl:XElement">[New XElement(valid, New XAttribute("path", folder))]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetFilesAndFolders workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="IdentifyAndSort\GetFilesAndFolders.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_CurrentPath">[folder]</InArgument>
                <InOutArgument x:TypeArguments="sxl:XElement" x:Key="io_FilesElement">[node]</InOutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <InvokeMethod DisplayName="Invoke XElement Add Folder" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Add">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="sxl:XElement">[io_FilesElement]</InArgument>
              </InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="x:Object">[node]</InArgument>
            </InvokeMethod>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each file" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Directory.GetFiles(in_CurrentPath)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="file" />
          </ActivityAction.Argument>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="sxl:XElement" Name="item" />
              <Variable x:TypeArguments="x:String" Name="name" />
              <Variable x:TypeArguments="x:String" Name="valid" />
            </Sequence.Variables>
            <If Condition="[file.EndsWith(&quot;.DS_Store&quot;) Or file.EndsWith(&quot;Thumbs.db&quot;)]" DisplayName="If .DS_Store or Thumbs.db" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete stupid file" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[file]" />
                  <ui:Continue sap2010:WorkflowViewState.IdRef="Continue_1" />
                </Sequence>
              </If.Then>
            </If>
            <Assign DisplayName="Assign file name" sap2010:WorkflowViewState.IdRef="Assign_18">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[name]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(file)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign validXML" sap2010:WorkflowViewState.IdRef="Assign_15">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[valid]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Join(String.Empty, name.Where(function(c) XmlConvert.IsNCNameChar(c)))]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[Char.IsDigit(valid.FirstOrDefault)]" DisplayName="If starts with number" sap2010:WorkflowViewState.IdRef="If_7">
              <If.Then>
                <Assign DisplayName="Assign number prefix" sap2010:WorkflowViewState.IdRef="Assign_16">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[valid]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["_" + valid]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[name + &quot; =&gt; &quot; + valid]" />
            <Assign DisplayName="Assign element and text" sap2010:WorkflowViewState.IdRef="Assign_17">
              <Assign.To>
                <OutArgument x:TypeArguments="sxl:XElement">[item]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sxl:XElement">[New XElement(valid, New XText(file))]</InArgument>
              </Assign.Value>
            </Assign>
            <InvokeMethod DisplayName="Invoke XElement Add File" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="sxl:XElement">[io_FilesElement]</InArgument>
              </InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="x:Object">[item]</InArgument>
            </InvokeMethod>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <sads:DebugSymbol.Symbol>d2dDOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcUk1TX0hSRUFGb3JtRGF0YUV4dHJhY3Rpb25cSWRlbnRpZnlBbmRTb3J0XEdldEZpbGVzQW5kRm9sZGVycy54YW1sRUsD9gEOAgEBTAVwCgIBTXEFsQESAgEpsgEF9AESAgECTBNMMQIBTk4JbhQCAU9xlwFxwwECAUx3C64BFgIBKrIBlQGyAbsBAgEouAEL8QEWAgEDUgtZFAIBW1oLZRACAVRmC20UAgFQfQ2EARYCAUiFAQ2MARYCAUSNAQ2YARICAT2ZAQ2ZAaMBAgE5mgENoQEWAgE1ogENpwElAgEvqAENrQEcAgErvgENxQESAgEfxgENzQEWAgEbzgEN1QEWAgEX1gEN4QESAgEQ4gEN4gGjAQIBDOMBDeoBFgIBCOsBDfABHAIBBFc2V48BAgFeVDdUPQIBXFoZWj4CAVVcD2MYAgFWazprdgIBU2g7aEwCAVGCATiCAVICAUt/OX8/AgFJigE4igGHAQIBR4cBOYcBQAIBRY0BG40BQQIBPo8BEZYBGgIBP5kBepkBoAECATqfATyfAXECATicAT2cAUMCATakAU+kAVcCATOlAVelAV0CATGiAccBogHwAQIBMKwBNqwBPAIBLqoBPKoBTQIBLL4BG74BawIBIMABEcMBHAIBI8sBOMsBYAIBHsgBOcgBPwIBHNMBONMBhwECARrQATnQAUACARjWARvWAUECARHYARHfARoCARLiAXriAaABAgEN6AE86AFiAgEL5QE95QFDAgEJ7wE27wE8AgEH7QE87QFNAgEFYTphRgIBWV47XkECAVeUATyUAUkCAUKRAT2RAUQCAUDBARPBAZUBAgElwgETwgFPAgEk3QE83QFJAgEV2gE92gFEAgETwQGKAcEBkgECASY=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="486,532">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="611,680" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="InvokeMethod_2" sap:VirtualizedContainerService.HintSize="464,132" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="486,1062">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="611,1196" />
      <sap2010:ViewStateData Id="Delete_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Continue_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,356" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="InvokeMethod_1" sap:VirtualizedContainerService.HintSize="464,132" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="486,1331">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="611,1465" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="633,3545">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetFiles_1" sap:VirtualizedContainerService.HintSize="673,3625" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>