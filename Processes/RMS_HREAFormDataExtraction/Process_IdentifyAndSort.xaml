<Activity mc:Ignorable="sap sap2010 sads" x:Class="Process_IdentifyAndSort"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_SourcePath" Type="InArgument(x:String)" />
    <x:Property Name="in_SortedPath" Type="InArgument(x:String)" />
    <x:Property Name="in_LeftoverPath" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Process_IdentifyAndSort_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Gather all documents in the source directory, identify the Application.xml, Approval Form.docx and Approval Form.pdf documents, then sort files into the destination under a subdirectory named after the RM number.&#xD;&#xA;&#xD;&#xA;Description: &#xA;&#xA;Inputs:&#xA;in_ &lt;String&gt;.&#xA;io_ &lt;String&gt;.&#xA;&#xA;Outputs:&#xA;out_ &lt;String&gt;.&#xA;&#xA;Pre Condition: NA&#xA;Post Condition: NA" DisplayName="Process_IdentifyAndSort" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <Sequence.Variables>
      <Variable x:TypeArguments="sxl:XElement" Name="elementsFound" />
      <Variable x:TypeArguments="sd:DataTable" Name="lookupTable" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Start IdentifyAndSort.xaml, working in '&quot; + in_SourcePath + &quot;' as '&quot; + String.Join(String.Empty, in_SourcePath.Where(function(c) XmlConvert.IsNCNameChar(c))) + &quot;'&quot;]" />
    <Sequence DisplayName="Get all files in directory and subfolders" sap2010:WorkflowViewState.IdRef="Sequence_10">
      <Sequence.Variables>
        <Variable x:TypeArguments="s:String[]" Name="files" />
      </Sequence.Variables>
      <Assign DisplayName="Assign all files" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[files]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(in_SourcePath, "*", SearchOption.AllDirectories)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:WriteTextFile DisplayName="Write Text File" FileName="[in_Config(&quot;FileServer_BotFiles&quot;) + &quot;\hrea_1_file_paths.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[String.Join(vbNewLine, files)]" />
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Got &quot; &amp; files.Length &amp; &quot; to process.&quot;]" />
    </Sequence>
    <If Condition="[Not File.Exists(in_Config(&quot;FileServer_BotFiles&quot;) + &quot;\hrea_2_documents.xml&quot;)]" sap2010:WorkflowViewState.IdRef="If_9">
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetFilesAndFolders workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="IdentifyAndSort\GetFilesAndFolders.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_CurrentPath">[in_SourcePath]</InArgument>
            <InOutArgument x:TypeArguments="sxl:XElement" x:Key="io_FilesElement">[elementsFound]</InOutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
          <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="sxl:XElement">[elementsFound]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sxl:XElement">[XElement.Load(in_Config("FileServer_BotFiles") + "\hrea_2_documents.xml")]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Already got items in XML format.&quot;]" />
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Sorted &quot; &amp; elementsFound.Descendants.Where(function(e) Not e.HasElements).Count &amp; &quot; elements&quot;]" />
    <ui:WriteTextFile DisplayName="Write Text File" FileName="[in_Config(&quot;FileServer_BotFiles&quot;) + &quot;\hrea_2_documents.xml&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="[elementsFound.ToString]" />
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ReadLookupTable workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="ReadLookupTable.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_LookupWorkbook">[in_Config("LinkingWorkbook")]</InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_ReadDataTable">[lookupTable]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <If Condition="[Not File.Exists(in_Config(&quot;FileServer_BotFiles&quot;) + &quot;\hrea_3_identified.xml&quot;)]" sap2010:WorkflowViewState.IdRef="If_10">
      <If.Then>
        <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[elementsFound.DescendantsAndSelf]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="sxl:XElement">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
              </ActivityAction.Argument>
              <If Condition="[Not item.HasElements]" sap2010:WorkflowViewState.IdRef="If_1">
                <If.Then>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke IdentifyAttributes workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="IdentifyAndSort\IdentifyAttributes.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InOutArgument x:TypeArguments="sxl:XElement" x:Key="io_CurrentElement">[item]</InOutArgument>
                      <InArgument x:TypeArguments="sd:DataTable" x:Key="in_LookupDataTable">[lookupTable]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </If.Then>
              </If>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
          <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="sxl:XElement">[elementsFound]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sxl:XElement">[XElement.Load(in_Config("FileServer_BotFiles") + "\hrea_3_identified.xml")]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Already identified files.&quot;]" />
        </Sequence>
      </If.Else>
    </If>
    <ui:WriteTextFile DisplayName="Write Text File" FileName="[in_Config(&quot;FileServer_BotFiles&quot;) + &quot;\hrea_3_identified.xml&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_3" Text="[elementsFound.ToString]" />
    <If Condition="[Not File.Exists(in_Config(&quot;FileServer_BotFiles&quot;) + &quot;\hrea_4_grouped_by_rm.xml&quot;)]" sap2010:WorkflowViewState.IdRef="If_11">
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GroupItems workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="IdentifyAndSort\GroupItems.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InOutArgument x:TypeArguments="sxl:XElement" x:Key="io_RootElement">[elementsFound]</InOutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_13">
          <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="sxl:XElement">[elementsFound]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sxl:XElement">[XElement.Load(in_Config("FileServer_BotFiles") + "\hrea_4_grouped_by_rm.xml")]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Already grouped files.&quot;]" />
        </Sequence>
      </If.Else>
    </If>
    <ui:WriteTextFile DisplayName="Write Text File" FileName="[in_Config(&quot;FileServer_BotFiles&quot;) + &quot;\hrea_4_grouped_by_rm.xml&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_4" Text="[elementsFound.ToString]" />
    <sads:DebugSymbol.Symbol>d1xDOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcUk1TX0hSRUFGb3JtRGF0YUV4dHJhY3Rpb25cUHJvY2Vzc19JZGVudGlmeUFuZFNvcnQueGFtbEJQA8EBDgIBAVUFVbsCAgFRVgVkEAIBRWUFewoCATZ8BXzzAQIBNH0FfeUBAgEwfgWDAR0CASqEAQWnAQoCAReoAQWoAeYBAgETqQEFvgEKAgEGvwEFvwHpAQIBAlVyVbgCAgFSWgdhEAIBTWIHYu8BAgFJYwdjvQECAUZlE2V2AgE3ZwlsIQIBP28JeRQCATh8cnzwAQIBNX3IAX3iAQIBM30+fZABAgExgQFPgQFcAgEugAFKgAFoAgEsfrwBftIBAgErhAEThAF3AgEYhgEJmAEWAgEgmwEJpQEUAgEZqAHJAagB4wECARaoAT6oAZEBAgEUqQETqQF6AgEHqwEJrwEhAgEPsgEJvAEUAgEIvwHMAb8B5gECAQW/AT6/AZQBAgEDXzRfeQIBUFw1XDwCAU5iywFi7AECAUxiQGKTAQIBSmN0Y7oBAgFHaUtpWgIBQ2pTamICAUFnwwFn7AECAUBwC3cUAgE7eAt4qwECATmGAZgBhgG8AQIBKYwBD5UBFAIBIZwBC6MBFAIBHKQBC6QBpAECARqtAVKtAWECARGrAbsBqwHcAQIBELMBC7oBFAIBC7sBC7sBoQECAQl1OnWFAQIBPnI7ckoCATx4eHioAQIBOowBHYwBNQIBIo4BE5MBKwIBI6EBOqEBhgECAR+eATueAUoCAR2kAXikAaEBAgEbuAE6uAGJAQIBDrUBO7UBSgIBDLsBeLsBngECAQqRAV2RAWoCASeOAc0BjgH2AQIBJpABX5ABZQIBJA==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="841,91" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteTextFile_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="841,442">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="841,463" />
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="841,91" />
      <sap2010:ViewStateData Id="WriteTextFile_2" sap:VirtualizedContainerService.HintSize="841,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_8" sap:VirtualizedContainerService.HintSize="841,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,235" />
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="480,369">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="841,517" />
      <sap2010:ViewStateData Id="WriteTextFile_3" sap:VirtualizedContainerService.HintSize="841,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_9" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="841,463" />
      <sap2010:ViewStateData Id="WriteTextFile_4" sap:VirtualizedContainerService.HintSize="841,87" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="863,3121">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Process_IdentifyAndSort_1" sap:VirtualizedContainerService.HintSize="903,3241" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>