<Activity mc:Ignorable="sap sap2010 sads" x:Class="Paragraph"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Selector" Type="InArgument(x:String)" />
    <x:Property Name="in_Scope" Type="InArgument(ui:UiElement)" />
    <x:Property Name="in_Entries" Type="InArgument(s:String[])" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Checkbox_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Paragraph" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="content" />
      <Variable x:TypeArguments="s:String[]" Name="lines" />
    </Sequence.Variables>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SanitiseHtmlText workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="SanitiseHtmlText.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InOutArgument x:TypeArguments="s:String[]" x:Key="io_Text">[in_Entries]</InOutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:RetryScope DisplayName="Retry Scope Paragraph" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:05">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="ui:UiElement" Name="inputElement" />
              <Variable x:TypeArguments="ui:UiElement" Name="checkElement" />
            </Sequence.Variables>
            <If Condition="[in_Scope Is Nothing]" DisplayName="If scope defined" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
                  <ui:WaitUiElementAppear DisplayName="Find Full Input Element" FoundElement="[inputElement]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_1" WaitActive="False" WaitVisible="False">
                    <ui:WaitUiElementAppear.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="[in_Selector]" TimeoutMS="1000" WaitForReady="INTERACTIVE" />
                    </ui:WaitUiElementAppear.Target>
                  </ui:WaitUiElementAppear>
                  <ui:WaitUiElementAppear DisplayName="Find Full Check Element" FoundElement="[checkElement]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_3" WaitActive="False" WaitVisible="False">
                    <ui:WaitUiElementAppear.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="[in_Selector + &quot;&lt;nav up='4' /&gt;&lt;webctrl tag='TEXTAREA' /&gt;&quot;]" TimeoutMS="1000" WaitForReady="INTERACTIVE" />
                    </ui:WaitUiElementAppear.Target>
                  </ui:WaitUiElementAppear>
                </Sequence>
              </If.Then>
              <If.Else>
                <ui:ElementScope UiElement="{x:Null}" DisplayName="Element Scope" sap2010:WorkflowViewState.IdRef="ElementScope_1">
                  <ui:ElementScope.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                      </ActivityAction.Argument>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
                        <ui:WaitUiElementAppear DisplayName="Find Sub Input Element" FoundElement="[inputElement]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_2" WaitActive="False" WaitVisible="False">
                          <ui:WaitUiElementAppear.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="[in_Selector]" TimeoutMS="1000" WaitForReady="INTERACTIVE" />
                          </ui:WaitUiElementAppear.Target>
                        </ui:WaitUiElementAppear>
                        <ui:WaitUiElementAppear DisplayName="Find Sub Check Element" FoundElement="[checkElement]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_4" WaitActive="False" WaitVisible="False">
                          <ui:WaitUiElementAppear.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="[in_Selector + &quot;&lt;nav up='4' /&gt;&lt;webctrl tag='TEXTAREA' /&gt;&quot;]" TimeoutMS="1000" WaitForReady="INTERACTIVE" />
                          </ui:WaitUiElementAppear.Target>
                        </ui:WaitUiElementAppear>
                      </Sequence>
                    </ActivityAction>
                  </ui:ElementScope.Body>
                  <ui:ElementScope.Target>
                    <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[in_Scope]" TimeoutMS="1000" WaitForReady="INTERACTIVE" />
                  </ui:ElementScope.Target>
                </ui:ElementScope>
              </If.Else>
            </If>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Trace" Message="[&quot;Setting paragraph &quot; + in_Selector + &quot; to &quot; + If(in_Entries.First.Length &lt; 20, in_Entries.First, in_Entries.First.Substring(0, 20) + &quot;...&quot;)]" />
            <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Send Select All Hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="a" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[inputElement]" WaitForReady="INTERACTIVE" />
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
            <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Backspace Hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="back" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[inputElement]" WaitForReady="INTERACTIVE" />
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[in_Entries]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="entry" />
                  </ActivityAction.Argument>
                  <ui:TypeInto DelayBefore="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DelayBetweenKeys="1" DisplayName="Type Into Paragraph" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_1" SendWindowMessages="False" SimulateType="False" Text="[entry + &quot;[k(enter)]&quot;]">
                    <ui:TypeInto.Target>
                      <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[inputElement]" WaitForReady="INTERACTIVE" />
                    </ui:TypeInto.Target>
                  </ui:TypeInto>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Backspace Hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="back" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[inputElement]" WaitForReady="INTERACTIVE" />
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Entered Text" sap2010:WorkflowViewState.IdRef="GetValue_1">
              <ui:GetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[checkElement]" WaitForReady="INTERACTIVE" />
              </ui:GetValue.Target>
              <ui:GetValue.Value>
                <OutArgument x:TypeArguments="x:String">[content]</OutArgument>
              </ui:GetValue.Value>
            </ui:GetValue>
            <Assign DisplayName="Assign lines" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[lines]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[content.Split(vbNewLine.ToCharArray)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SanitiseHtmlText workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="SanitiseHtmlText.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InOutArgument x:TypeArguments="s:String[]" x:Key="io_Text">[lines]</InOutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Warn" Message="[String.Join(&quot;|&quot;, in_Entries)]" />
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Error" Message="[String.Join(&quot;|&quot;, lines)]" />
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Trace" Message="[&quot;Verifying entry into &quot; + in_Selector + &quot;&lt;nav up='4' /&gt;&lt;webctrl tag='TEXTAREA' /&gt;  for lines &quot; + String.Join(&quot;, &quot;, lines.Select(function(line) in_Entries.Contains(line)))]" />
          </Sequence>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean">
          <p:IsTrue DisplayName="Are all lines contained in entry" sap2010:WorkflowViewState.IdRef="IsTrue_1" Input="[lines.All(function(line) in_Entries.Contains(line))]" />
        </ActivityFunc>
      </ui:RetryScope.Condition>
    </ui:RetryScope>
    <sads:DebugSymbol.Symbol>d15DOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcUk1TX0hSRUFGb3JtRGF0YUV4dHJhY3Rpb25cTkhNUkNcRGF0YUVudHJ5XFBhcmFncmFwaC54YW1sQU0DyQEOAgEBUgVWHQIBVVcFxwEVAgECVEVUUQIBV1K9AVLUAQIBVleJAVeTAQIBVFd3V3oCAVNaC78BFgIBBcQBC8QBrwECAQNfDYgBEgIBM4kBDYkBrwICATGKAQ2OAR0CAS2PAQ2TAR0CASmUAQ2hARoCASCiAQ2mAR0CARynAQ2uARsCARavAQ22ARYCARK3AQ27ASUCAQ68AQ28AagBAgELvQENvQGkAQIBCL4BDb4B1wICAQbEAXXEAawBAgEEXxtfMgIBNGERbBwCAUZvEYYBIwIBNYkBfIkBrAICATKMAWeMAXcCAS+KAfYBigH5AQIBLpEBZ5EBdwIBK48B9gGPAfwBAgEqlAGYAZQBpgECASeaAROeASECASGkAWekAXcCAR6iAfYBogH8AQIBHawBOawBQgIBGKkBZ6kBdwIBGrQBOrQBYAIBFbEBO7EBQgIBE7kBTbkBVAIBELcBxQG3AdwBAgEPvAF7vAGlAQIBDL0BfL0BoQECAQm+AXy+AdQCAgEHYhNmLAIBTWcTaywCAUeEAW2EAXMCAUWEAVaEAWICAUN1F4ABIgIBNpoBoAKaAcICAgElmgGFAZoBiAECASScAW2cAX0CASJiXmJuAgFRZFhkZwIBT2RyZHgCAU5nXmduAgFLaVhpqgECAUlptQFpuwECAUh2GXoyAgE9exl/MgIBN3ZjdnMCAUF4XnhtAgE/eHh4fgIBPntje3MCATt9Xn2wAQIBOX27AX3BAQIBOA==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="819,87" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_1" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_3" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="336,300">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WaitUiElementAppear_2" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_4" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="336,300">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ElementScope_1" sap:VirtualizedContainerService.HintSize="414,408" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="775,555" />
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="775,91" />
      <sap2010:ViewStateData Id="SendHotkey_2" sap:VirtualizedContainerService.HintSize="775,116" />
      <sap2010:ViewStateData Id="SendHotkey_3" sap:VirtualizedContainerService.HintSize="775,116" />
      <sap2010:ViewStateData Id="TypeInto_1" sap:VirtualizedContainerService.HintSize="314,96" />
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="775,229" />
      <sap2010:ViewStateData Id="SendHotkey_1" sap:VirtualizedContainerService.HintSize="775,116" />
      <sap2010:ViewStateData Id="GetValue_1" sap:VirtualizedContainerService.HintSize="775,68" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="775,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="775,87" />
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="775,91" />
      <sap2010:ViewStateData Id="LogMessage_13" sap:VirtualizedContainerService.HintSize="775,91" />
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="775,91" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="797,2275">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsTrue_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_1" sap:VirtualizedContainerService.HintSize="819,2456" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="841,2707">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Checkbox_1" sap:VirtualizedContainerService.HintSize="881,2987" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>