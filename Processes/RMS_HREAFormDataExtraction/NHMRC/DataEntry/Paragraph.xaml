<Activity mc:Ignorable="sap sap2010 sads" x:Class="Paragraph"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Entry" Type="InArgument(x:String)" />
    <x:Property Name="in_Selector" Type="InArgument(x:String)" />
    <x:Property Name="in_Scope" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Checkbox_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: Removes any HTML and invalid characters from an entry, then sets a complex text field to the appropriate string.&#xA;&#xA;Inputs:&#xA;in_Entry &lt;String&gt;.&#xA;in_Selector &lt;String&gt;: Selector of paragraph input to update.&#xA;in_Scope&lt;UiElement&gt;: Selector of parent UiElement.&#xD;&#xA;&#xA;Outputs: NA&#xA;Pre Condition: NA&#xA;Post Condition: NA" DisplayName="Paragraph" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="content" />
    </Sequence.Variables>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SanitiseHtmlText workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="SanitiseHtmlText.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InOutArgument x:TypeArguments="x:String" x:Key="io_Text">[in_Entry]</InOutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:RetryScope DisplayName="Retry Scope Paragraph" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:05">
          <ui:RetryScope.ActivityBody>
            <ActivityAction>
              <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <Sequence.Variables>
                  <Variable x:TypeArguments="ui:UiElement" Name="inputElement" />
                  <Variable x:TypeArguments="ui:UiElement" Name="checkElement" />
                  <Variable x:TypeArguments="x:Int32" Name="i" />
                </Sequence.Variables>
                <If Condition="[in_Scope Is Nothing]" DisplayName="If scope defined" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
                      <ui:WaitUiElementAppear DisplayName="Find Full Input Element" FoundElement="[inputElement]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_1" WaitActive="False" WaitVisible="False">
                        <ui:WaitUiElementAppear.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="[in_Selector]" TimeoutMS="1000" WaitForReady="COMPLETE" />
                        </ui:WaitUiElementAppear.Target>
                      </ui:WaitUiElementAppear>
                      <ui:WaitUiElementAppear DisplayName="Find Full Check Element" FoundElement="[checkElement]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_3" WaitActive="False" WaitVisible="False">
                        <ui:WaitUiElementAppear.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="[in_Selector + &quot;&lt;nav up='4' /&gt;&lt;webctrl tag='TEXTAREA' /&gt;&quot;]" TimeoutMS="1000" WaitForReady="COMPLETE" />
                        </ui:WaitUiElementAppear.Target>
                      </ui:WaitUiElementAppear>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <ui:ElementScope UiElement="{x:Null}" DisplayName="Element Scope" sap2010:WorkflowViewState.IdRef="ElementScope_1">
                      <ui:ElementScope.Body>
                        <ActivityAction x:TypeArguments="x:Object">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                          </ActivityAction.Argument>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
                            <ui:WaitUiElementAppear DisplayName="Find Sub Input Element" FoundElement="[inputElement]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_2" WaitActive="False" WaitVisible="False">
                              <ui:WaitUiElementAppear.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="[in_Selector]" TimeoutMS="1000" WaitForReady="COMPLETE" />
                              </ui:WaitUiElementAppear.Target>
                            </ui:WaitUiElementAppear>
                            <ui:WaitUiElementAppear DisplayName="Find Sub Check Element" FoundElement="[checkElement]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_4" WaitActive="False" WaitVisible="False">
                              <ui:WaitUiElementAppear.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="[in_Selector + &quot;&lt;nav up='4' /&gt;&lt;webctrl tag='TEXTAREA' /&gt;&quot;]" TimeoutMS="1000" WaitForReady="COMPLETE" />
                              </ui:WaitUiElementAppear.Target>
                            </ui:WaitUiElementAppear>
                          </Sequence>
                        </ActivityAction>
                      </ui:ElementScope.Body>
                      <ui:ElementScope.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="[in_Scope]" TimeoutMS="1000" WaitForReady="INTERACTIVE" />
                      </ui:ElementScope.Target>
                    </ui:ElementScope>
                  </If.Else>
                </If>
                <ui:SetFocus DelayBefore="5" DelayMS="5" DisplayName="Set Focus" sap2010:WorkflowViewState.IdRef="SetFocus_1">
                  <ui:SetFocus.Target>
                    <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[inputElement]" WaitForReady="INTERACTIVE" />
                  </ui:SetFocus.Target>
                </ui:SetFocus>
                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Trace" Message="[&quot;Setting paragraph &quot; + in_Selector + &quot; to &quot; + If(in_Entry.Length &lt; 20, in_Entry, in_Entry.Substring(0, 20) + &quot;...&quot;)]" />
                <ui:SendHotkey DelayBetweenKeys="{x:Null}" Activate="True" ClickBeforeTyping="False" DelayBefore="5" DelayMS="5" DisplayName="Send Select All Hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="a" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[inputElement]" WaitForReady="INTERACTIVE" />
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SetToClipboard DisplayName="Set To Clipboard" sap2010:WorkflowViewState.IdRef="SetToClipboard_1" Text="[in_Entry]" />
                <If Condition="[in_Entry.Trim = &quot;&quot;]" DisplayName="If entry is blank" sap2010:WorkflowViewState.IdRef="If_7">
                  <If.Then>
                    <ui:SendHotkey DelayBetweenKeys="{x:Null}" Activate="True" ClickBeforeTyping="False" DelayBefore="5" DelayMS="5" DisplayName="Send Backspace Hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_5" Key="back" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[inputElement]" WaitForReady="INTERACTIVE" />
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                  </If.Then>
                  <If.Else>
                    <ui:SendHotkey DelayBetweenKeys="{x:Null}" Activate="True" ClickBeforeTyping="False" DelayBefore="5" DelayMS="5" DisplayName="Send Paste Hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="v" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                      <ui:SendHotkey.Target>
                        <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[inputElement]" WaitForReady="INTERACTIVE" />
                      </ui:SendHotkey.Target>
                    </ui:SendHotkey>
                  </If.Else>
                </If>
                <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Entered Text" sap2010:WorkflowViewState.IdRef="GetValue_1">
                  <ui:GetValue.Target>
                    <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[checkElement]" WaitForReady="INTERACTIVE" />
                  </ui:GetValue.Target>
                  <ui:GetValue.Value>
                    <OutArgument x:TypeArguments="x:String">[content]</OutArgument>
                  </ui:GetValue.Value>
                </ui:GetValue>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SanitiseHtmlText workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="SanitiseHtmlText.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="io_Text">[content]</InOutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Trace" Message="[&quot;Verifying entry into &quot; + in_Selector + &quot;&lt;nav up='4' /&gt;&lt;webctrl tag='TEXTAREA' /&gt;  matching lines are: &quot; + (in_Entry = content).ToString]" />
                <If Condition="[in_Entry &lt;&gt; content]" sap2010:WorkflowViewState.IdRef="If_6">
                  <If.Then>
                    <ui:ForEach x:TypeArguments="x:Char" CurrentIndex="[i]" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[in_Entry]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:Char">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Char" Name="c" />
                          </ActivityAction.Argument>
                          <If Condition="[i &lt; content.Length AndAlso in_Entry(i) &lt;&gt; content(i)]" DisplayName="If first mismatch" sap2010:WorkflowViewState.IdRef="If_8">
                            <If.Then>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_20">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:Int32" Name="l" />
                                </Sequence.Variables>
                                <Assign DisplayName="Assign minimum index" sap2010:WorkflowViewState.IdRef="Assign_5">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[i]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[If(i &gt; 10, i, 10)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Assign maximum length" sap2010:WorkflowViewState.IdRef="Assign_6">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[l]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32" xml:space="preserve">[If(in_Entry.Length &gt; content.Length,
If(i + 20 &gt; content.Length, content.Length - i, 20),
If(i + 20 &gt; in_Entry.Length, in_Entry.Length - i, 20))]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Error" Message="[String.Format(&quot;First mismatch at {1} section is{0}{2}{0}{3}&quot;,&#xA;vbNewLine, i,&#xA;WebUtility.UrlEncode(in_Entry.Substring(i - 10, l)),&#xA;WebUtility.UrlEncode(content.Substring(i - 10, l)))]" />
                                <ui:Break sap2010:WorkflowViewState.IdRef="Break_1" />
                              </Sequence>
                            </If.Then>
                          </If>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                  </If.Then>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:RetryScope.ActivityBody>
          <ui:RetryScope.Condition>
            <ActivityFunc x:TypeArguments="x:Boolean">
              <p:IsTrue DisplayName="Are all lines contained in entry" sap2010:WorkflowViewState.IdRef="IsTrue_1" Input="[in_Entry = content]" />
            </ActivityFunc>
          </ui:RetryScope.Condition>
        </ui:RetryScope>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <If Condition="[exception.InnerException Is Nothing]" sap2010:WorkflowViewState.IdRef="If_9">
              <If.Then>
                <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_1" />
              </If.Then>
              <If.Else>
                <Throw DisplayName="Throw inner exception" Exception="[exception.InnerException]" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </If.Else>
            </If>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <sads:DebugSymbol.Symbol>d15DOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcUk1TX0hSRUFGb3JtRGF0YUV4dHJhY3Rpb25cTkhNUkNcRGF0YUVudHJ5XFBhcmFncmFwaC54YW1sWE0D/AEOAgEBUQVVHQMBjgFWBfoBEAIBAlNDU00DAZABUb0BUdQBAwGPAVgJ5wEZAgEK7wEN9gESAgEDWI0BWJcBAwGNAVh7WH4DAYwBWw/fARoCAQ/kAQ/kAZIBAgEL7wEb7wFCAgEE8QER8QFIAgEJ9AER9AGPAQIBBmERigEWAgFriwERjwEfAgFmkAERkAGbAgIBYJEBEZUBIQIBWpYBEZYBigECAVeXARGmARYCAUinARGuAR8CAUKvARGzASkCAT60ARG0Aa8CAgE5tQER3gEWAgEQ5AF55AGPAQIBDPQBRvQBYgIBB2EfYTYCAWxjFW4gAgF/cRWIAScCAW6LATaLATkCAWqNAWuNAXsCAWiLASqLAS0CAWeQAYABkAGYAgIBYZEBfpEBgQECAV+TAWuTAXsCAV2RAXKRAXUCAVyRAe0BkQHwAQIBW5YBe5YBhwECAViXAR+XAT8CAUmZARWdASUCAVGgARWkASUCAUusAT2sAUYCAUSpAWupAXsCAUaxAU+xAVgCAUCvAckBrwHgAQIBP7QBgAG0AawCAgE6tQEftQE8AgERtwEV3AEiAgEUZBdoMAMBhgFpF20wAwGAAYYBWoYBZgIBfYYBcYYBdwIBfHcbggEmAgFvmQGCAZkBhQECAVabAW+bAX8CAVSZAXaZAXkCAVOZAfABmQH2AQIBUqABggGgAYUBAgFQogFvogF/AgFOoAF2oAF5AgFNoAHsAaAB7wECAUy3AZkBtwGlAQIBN7cBR7cBTAIBNb0BG9kBIAIBFWRiZHIDAYoBZlxmawMBiAFmdmZ8AwGHAWliaXIDAYQBa1xrrgEDAYIBa7kBa78BAwGBAXgdfDYCAXZ9HYEBNgIBcL0BKb0BagIBFr8BH9cBKgIBHXhneHcCAXp6YnpxAgF4enx6ggECAXd9Z313AgF0f2J/tAECAXJ/vwF/xQECAXHDASHKASoCAS/LASHUASoCASHVASHVAeECAgEf1gEh1gFXAgEeyAFLyAFhAgEyxQFMxQFPAgEwzQFMzQFPAgEi1QGQAdUB3gICASA=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="837,87" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_1" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_3" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="336,300">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WaitUiElementAppear_2" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_4" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="336,300">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ElementScope_1" sap:VirtualizedContainerService.HintSize="414,408" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="775,555" />
      <sap2010:ViewStateData Id="SetFocus_1" sap:VirtualizedContainerService.HintSize="775,68" />
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="775,91" />
      <sap2010:ViewStateData Id="SendHotkey_2" sap:VirtualizedContainerService.HintSize="775,116" />
      <sap2010:ViewStateData Id="SetToClipboard_1" sap:VirtualizedContainerService.HintSize="775,59" />
      <sap2010:ViewStateData Id="SendHotkey_5" sap:VirtualizedContainerService.HintSize="314,116" />
      <sap2010:ViewStateData Id="SendHotkey_4" sap:VirtualizedContainerService.HintSize="314,116" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="775,263" />
      <sap2010:ViewStateData Id="GetValue_1" sap:VirtualizedContainerService.HintSize="775,68" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="775,87" />
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="775,91" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="314,64" />
      <sap2010:ViewStateData Id="LogMessage_17" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Break_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="336,481">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="464,628" />
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="480,761">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="775,908" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="797,2790">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsTrue_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="RetryScope_1" sap:VirtualizedContainerService.HintSize="819,2971" />
      <sap2010:ViewStateData Id="Rethrow_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="823,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="837,3198" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="859,3611">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Checkbox_1" sap:VirtualizedContainerService.HintSize="899,3691" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>