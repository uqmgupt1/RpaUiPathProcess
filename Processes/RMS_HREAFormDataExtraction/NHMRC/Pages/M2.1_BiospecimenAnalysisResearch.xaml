<Activity mc:Ignorable="sap sap2010 sads" x:Class="BiospecimenAnalysisResearch"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Browser" Type="InArgument(ui:Browser)" />
    <x:Property Name="in_Application" Type="InArgument(sxl:XElement)" />
    <x:Property Name="in_PageFrame" Type="InArgument(ui:UiElement)" />
    <x:Property Name="in_LoadingWheel" Type="InArgument(ui:UiElement)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Sequence_3</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: If Q1.17 contains Biospecimen analysis research then display page:&#xA;    M2.1 What type/s of human biospecimen/s will be collected and used? *&#xA;    M2.2 Will you be collecting biospecimens prospectively? *&#xA;    M2.3 Will you be using biospecimens from one or more existing archives or biobanks? *&#xA;    M2.4 Will you be importing and/or exporting biospecimens internationally?*&#xA;    M2.5 Will you be obtaining post-mortem biospecimens? *&#xA;    M2.6 Will you be performing any genetic or genomic testing, investigation or analysis of the biospecimens?*&#xA;    M2.7 Will the biospecimens be destroyed at the conclusion of the project or will they be retained for future use? *&#xA;    M2.8 Having regard to the answers to the above questions, describe any ethical considerations related to your collection, use and analysis of biospecimens.*&#xA;&#xA;If M2.2 Is Yes then:&#xA;    M2.2.1 How, and from whom, will you be obtaining these biospecimens? *&#xA;&#xA;If M2.3 is Yes then For Each BioBankRpt item:&#xA;    M2.3.1 Name of archive or biobank *&#xA;    M2.3.2 Do you have confirmation that you can access the biospecimens? *&#xA;    M2.3.3 Is your use of the biospecimens consistent with the consent obtained at the time the biospecimens were collected?*&#xA;    M2.3.3.1 Attach any available evidence of the consent obtained at the time the biospecimens were collected.&#xA;&#xA;If M2.4 contains Importing then For Each ImportedBiospecimensRpt item:&#xA;    M2.4.1.1 What is the source of the biospecimens? *&#xA;    M2.4.1.2 Do you have confirmation that you can access the biospecimens? *&#xA;&#xA;If M2.4.1.2 is Yes then:&#xA;    M2.4.1.2.1 Who provided the confirmation? *&#xA;    M2.4.1.2.2 Attach evidence of the confirmation.&#xA;&#xA;If M2.4 contains Importing then:&#xA;    M2.4.1.3 How will you ensure that the research meets the guidance provided in National Statement 3.2.7 and, if applicable, National Statement 3.2.10 regarding the use of imported biospecimens?*&#xA;&#xA;If M2.4 contains Exporting then For Each ExportedBiospecimensRpt item:&#xA;    M2.4.2.1 Name of entity to whom the biospecimens are being exported. *&#xA;    M2.4.2.2 Location of the entity to whom the biospecimens are being exported. *&#xA;&#xA;If M2.4 contains Exporting then:&#xA;    M2.4.2.3 How will you ensure that the research meets the guidance provided in National Statement 3.2.9 regarding the exportation of biospecimens?*&#xA;&#xA;If M2.7 contains Destroyed at the conclusion of the project then:&#xA;    M2.7.1.1 How will the biospecimens be destroyed? *&#xA;&#xA;If M2.7 contains Retained for future use then:&#xA;    M2.7.2.1 Describe which biospecimens will be retained, any intended future use/s and any arrangements for future access to the biospecimens?*&#xA;&#xA;Inputs:&#xA;in_Application &lt;XElement&gt;: The XML element containing the application details.&#xA;in_Browser &lt;Browser&gt;: HREA new application chrome browser window.&#xA;in_PageFrame &lt;UiElement&gt;: Main content area of page to use when scoping.&#xA;in_LoadingWheel &lt;UiElement&gt;: Wheel that appears when page is refreshing.&#xA;&#xA;Outputs: NA&#xA;Pre Condition: NA&#xA;Post Condition: NA" DisplayName="Biospecimen analysis research" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:UiElement" Name="loading" />
      <Variable x:TypeArguments="scg:List(sxl:XElement)" Name="bioBankRpt" />
      <Variable x:TypeArguments="x:Int32" Name="position" />
      <Variable x:TypeArguments="x:String" Name="bioBankSelector" />
    </Sequence.Variables>
    <ui:BrowserScope SearchScope="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" Browser="[in_Browser]" BrowserType="Chrome" DisplayName="Attach Browser New Application" sap2010:WorkflowViewState.IdRef="BrowserScope_3">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Enter Data" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <ui:ElementScope UiElement="{x:Null}" DisplayName="Element Scope" sap2010:WorkflowViewState.IdRef="ElementScope_1">
              <ui:ElementScope.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                  </ActivityAction.Argument>
                  <DoWhile DisplayName="Do While files exist" sap2010:WorkflowViewState.IdRef="DoWhile_1">
                    <DoWhile.Variables>
                      <Variable x:TypeArguments="x:Boolean" Default="True" Name="cleanedUp" />
                      <Variable x:TypeArguments="s:DateTime" Default="[Now]" Name="timer" />
                    </DoWhile.Variables>
                    <DoWhile.Condition>[cleanedUp And (Now - timer).Seconds &lt; 30]</DoWhile.Condition>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_89">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="ui:UiElement" Name="contentSelection" />
                      </Sequence.Variables>
                      <ui:WaitUiElementAppear ContinueOnError="True" DisplayName="Find Clear Content Selection Element" FoundElement="[contentSelection]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_11" WaitActive="False" WaitVisible="False">
                        <ui:WaitUiElementAppear.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;webctrl aaname='Clear content selection' tag='A' /&gt;" TimeoutMS="1000" WaitForReady="INTERACTIVE" />
                        </ui:WaitUiElementAppear.Target>
                      </ui:WaitUiElementAppear>
                      <If Condition="[contentSelection Is Nothing]" DisplayName="If no more content selection" sap2010:WorkflowViewState.IdRef="If_17">
                        <If.Then>
                          <Assign DisplayName="Assign cleaned up" sap2010:WorkflowViewState.IdRef="Assign_31">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[cleanedUp]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_92">
                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click clear content selection" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                              <ui:Click.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </ui:Click.CursorPosition>
                              <ui:Click.Target>
                                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[contentSelection]" WaitForReady="INTERACTIVE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:Click.Target>
                            </ui:Click>
                            <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" ContinueOnError="True" DisplayName="Find Loading Wheel Element">
                              <ui:WaitUiElementAppear.Target>
                                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[in_LoadingWheel]" WaitForReady="INTERACTIVE">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                </ui:Target>
                              </ui:WaitUiElementAppear.Target>
                              <sap2010:WorkflowViewState.IdRef>WaitUiElementAppear_13</sap2010:WorkflowViewState.IdRef>
                            </ui:WaitUiElementAppear>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </DoWhile>
                </ActivityAction>
              </ui:ElementScope.Body>
              <ui:ElementScope.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="[in_PageFrame.Selector.Text]" WaitForReady="COMPLETE">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                </ui:Target>
              </ui:ElementScope.Target>
            </ui:ElementScope>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.1 Q862 Paragraph workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\Paragraph.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_Entry">[in_Application.Element("q862").Value]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Selector">&lt;webctrl id='Q862_ifr' tag='IFRAME' /&gt;</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.2 Q137 YesNo workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\YesNo.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_Choice">[in_Application.Element("q137").Value]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_YesSelector">&lt;webctrl id='Q137-A194' tag='INPUT' /&gt;</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_NoSelector">&lt;webctrl id='Q137-A195' tag='INPUT' /&gt;</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading">[loading]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <If Condition="[in_Application.Element(&quot;q137&quot;).Value = &quot;Yes&quot;]" DisplayName="If M2.2 is Yes" sap2010:WorkflowViewState.IdRef="If_13">
              <If.Then>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.2.1 Q535 Paragraph workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\Paragraph.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Entry">[in_Application.Element("q535").Value]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Selector">&lt;webctrl id='Q535_ifr' tag='IFRAME' /&gt;</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </If.Then>
            </If>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.3 Q138 YesNo workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\YesNo.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_Choice">[in_Application.Element("q138").Value]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_YesSelector">&lt;webctrl id='Q138-A196' tag='INPUT' /&gt;</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_NoSelector">&lt;webctrl id='Q138-A198' tag='INPUT' /&gt;</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading">[loading]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <If Condition="[in_Application.Element(&quot;q138&quot;).Value = &quot;Yes&quot;]" DisplayName="If M2.3 is Yes" sap2010:WorkflowViewState.IdRef="If_14">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_83">
                  <Assign DisplayName="Assign bio bank" sap2010:WorkflowViewState.IdRef="Assign_27">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(sxl:XElement)">[bioBankRpt]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(sxl:XElement)">[in_Application.Elements("BioBankRpt").ToList]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.3.1 Q865 SetupMulti workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\SetupMulti.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_FirstItemSelector">&lt;webctrl id='Q865_*' tag='INPUT' type='text' /&gt;</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_PageScope">[in_PageFrame.Selector.Text]</InArgument>
                      <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading">[loading]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_ParentSelector">[bioBankSelector]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </If.Then>
              <If.Else>
                <Assign DisplayName="Reset bio bank" sap2010:WorkflowViewState.IdRef="Assign_32">
                  <Assign.To>
                    <OutArgument x:TypeArguments="scg:List(sxl:XElement)">[bioBankRpt]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="scg:List(sxl:XElement)">[New List(Of XElement)]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
            <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="[position]" DisplayName="For Each biobank" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[bioBankRpt]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="sxl:XElement">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sxl:XElement" Name="biobank" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_84">
                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click add new row" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                      <ui:Click.CursorPosition>
                        <ui:CursorPosition Position="Center">
                          <ui:CursorPosition.OffsetX>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetX>
                          <ui:CursorPosition.OffsetY>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetY>
                        </ui:CursorPosition>
                      </ui:Click.CursorPosition>
                      <ui:Click.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="[bioBankSelector + &quot;&lt;webctrl aaname='Add Row' tag='INPUT' /&gt;&quot;]" WaitForReady="INTERACTIVE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:Click.Target>
                    </ui:Click>
                    <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" ContinueOnError="True" DisplayName="Find Loading Wheel Element">
                      <ui:WaitUiElementAppear.Target>
                        <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[in_LoadingWheel]" WaitForReady="INTERACTIVE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:WaitUiElementAppear.Target>
                      <sap2010:WorkflowViewState.IdRef>WaitUiElementAppear_14</sap2010:WorkflowViewState.IdRef>
                    </ui:WaitUiElementAppear>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.3.1 Q865 Text workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_48" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\Text.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Entry">[biobank.Element("q865").Value]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Selector">["&lt;webctrl id='Q865_" &amp; position &amp; "' tag='INPUT' /&gt;"]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                        <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading" />
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.3.2 Q866 YesNo workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_52" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\YesNo.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Choice">[biobank.Element("q866").Value]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_YesSelector">["&lt;webctrl id='Q866_" &amp; position &amp; "-A1159' tag='INPUT' /&gt;"]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_NoSelector">["&lt;webctrl id='Q866_" &amp; position &amp; "-A1160' tag='INPUT' /&gt;"]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                        <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading" />
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.3.3 Q1091 YesNo workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_53" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\YesNo.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Choice">[biobank.Element("q1091").Value]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_YesSelector">["&lt;webctrl id='Q1091_" &amp; position &amp; "-A1441' tag='INPUT' /&gt;"]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_NoSelector">["&lt;webctrl id='Q1091_" &amp; position &amp; "-A1442' tag='INPUT' /&gt;"]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                        <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading" />
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <If Condition="[in_Application.Element(&quot;q1092&quot;) IsNot Nothing AndAlso Not in_Application.Element(&quot;q1092&quot;).IsEmpty]" DisplayName="If M2.3.3.1 is Set" sap2010:WorkflowViewState.IdRef="If_18">
                      <If.Then>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.3.3.1 Q1092 FileUpload workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_61" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\FileUpload.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[in_Application.Element("q1092").Value]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Selector">["&lt;webctrl id='Q1092_" &amp; position &amp; "_btnUpload' tag='INPUT' /&gt;"]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <Sequence DisplayName="M2.4 Will biospecimens be imported or exported" sap2010:WorkflowViewState.IdRef="Sequence_64">
              <Sequence.Variables>
                <Variable x:TypeArguments="s:String[]" Name="importExport" />
                <Variable x:TypeArguments="scg:List(sxl:XElement)" Name="importing" />
                <Variable x:TypeArguments="x:String" Name="importSelector" />
                <Variable x:TypeArguments="scg:List(sxl:XElement)" Name="exporting" />
                <Variable x:TypeArguments="x:String" Name="exportSelector" />
              </Sequence.Variables>
              <Assign DisplayName="Assign M2.4 Q141 import export" sap2010:WorkflowViewState.IdRef="Assign_26">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[importExport]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[in_Application.Element("q141").Value.Split("|"c)]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.4 A200 Importing Checkbox workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\Checkbox.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_Choice">[importExport.Contains("Importing")]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Selector">&lt;webctrl id='Q141-A200' tag='INPUT' /&gt;</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                  <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading">[loading]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.4 A1163 Exporting Checkbox workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\Checkbox.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_Choice">[importExport.Contains("Exporting")]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Selector">&lt;webctrl id='Q141-A1163' tag='INPUT' /&gt;</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                  <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading">[loading]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.4 A201 Neither Checkbox workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\Checkbox.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_Choice">[importExport.Contains("Neither")]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Selector">&lt;webctrl id='Q141-A201' tag='INPUT' /&gt;</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                  <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading">[loading]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <If Condition="[importExport.Contains(&quot;Importing&quot;)]" DisplayName="If M2.4 contains Importing" sap2010:WorkflowViewState.IdRef="If_11">
                <If.Then>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_85">
                    <Assign DisplayName="Assign importing" sap2010:WorkflowViewState.IdRef="Assign_28">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:List(sxl:XElement)">[importing]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:List(sxl:XElement)">[in_Application.Elements("ImportedBiospecimensRpt").ToList]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.4.1.1 Q870 SetupMulti workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_46" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\SetupMulti.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_FirstItemSelector">&lt;webctrl id='Q870_*' tag='INPUT' type='text' /&gt;</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_PageScope">[in_PageFrame.Selector.Text]</InArgument>
                        <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading">[loading]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_ParentSelector">[importSelector]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.4.1.3 Q1239 Paragraph workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_59" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\Paragraph.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Entry">[in_Application.Element("q1239").Value]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Selector">&lt;webctrl id='Q1239_ifr' tag='IFRAME' /&gt;</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Assign DisplayName="Reset importing" sap2010:WorkflowViewState.IdRef="Assign_33">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(sxl:XElement)">[importing]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(sxl:XElement)">[New List(Of XElement)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
              <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="[position]" DisplayName="For Each importing" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[importing]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="sxl:XElement">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sxl:XElement" Name="import" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_86">
                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click add new row" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="[importSelector + &quot;&lt;webctrl aaname='Add Row' tag='INPUT' /&gt;&quot;]" WaitForReady="INTERACTIVE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                      <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" ContinueOnError="True" DisplayName="Find Loading Wheel Element">
                        <ui:WaitUiElementAppear.Target>
                          <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[in_LoadingWheel]" WaitForReady="INTERACTIVE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:WaitUiElementAppear.Target>
                        <sap2010:WorkflowViewState.IdRef>WaitUiElementAppear_15</sap2010:WorkflowViewState.IdRef>
                      </ui:WaitUiElementAppear>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.4.1.1 Q870 Text workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_54" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\Text.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Entry">[import.Element("q870").Value]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Selector">["&lt;webctrl id='Q870_" &amp; position &amp; "' tag='INPUT' /&gt;"]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                          <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.4.1.2 Q871 YesNo workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_55" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\YesNo.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Choice">[import.Element("q871").Value]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_YesSelector">["&lt;webctrl id='Q871_" &amp; position &amp; "-A1166' tag='INPUT' /&gt;"]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_NoSelector">["&lt;webctrl id='Q871_" &amp; position &amp; "-A1167' tag='INPUT' /&gt;"]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                          <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading">[loading]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <If Condition="[import.Element(&quot;q871&quot;).Value = &quot;Yes&quot;]" DisplayName="If M2.4.1.2 is Yes" sap2010:WorkflowViewState.IdRef="If_16">
                        <If.Then>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_91">
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.4.1.2.1 Q872 Text workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_56" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\Text.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Entry">[import.Element("q872").Value]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Selector">["&lt;webctrl id='Q872_" &amp; position &amp; "' tag='INPUT' /&gt;"]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                                <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading" />
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <If Condition="[import.Element(&quot;q873&quot;) IsNot Nothing AndAlso Not import.Element(&quot;q873&quot;).IsEmpty]" DisplayName="If M2.4.1.2.2 is Set" sap2010:WorkflowViewState.IdRef="If_19">
                              <If.Then>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.4.1.2.2 Q873 FileUpload workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_62" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\FileUpload.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[import.Element("q873").Value]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Selector">["&lt;webctrl id='Q873_" &amp; position &amp; "_btnUpload' tag='INPUT' /&gt;"]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </If.Then>
                            </If>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
              <If Condition="[importExport.Contains(&quot;Exporting&quot;)]" DisplayName="If M2.4 contains Exporting" sap2010:WorkflowViewState.IdRef="If_12">
                <If.Then>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_87">
                    <Assign DisplayName="Assign exporting" sap2010:WorkflowViewState.IdRef="Assign_29">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:List(sxl:XElement)">[exporting]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:List(sxl:XElement)">[in_Application.Elements("ExportedBiospecimensRpt").ToList]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.4.2.1 Q879 SetupMulti workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_47" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\SetupMulti.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_FirstItemSelector">&lt;webctrl id='Q879_*' tag='INPUT' type='text' /&gt;</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_PageScope">[in_PageFrame.Selector.Text]</InArgument>
                        <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading">[loading]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_ParentSelector">[exportSelector]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.4.2.3 Q1241 Paragraph workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_60" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\Paragraph.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Entry">[in_Application.Element("q1241").Value]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Selector">&lt;webctrl id='Q1241_ifr' tag='IFRAME' /&gt;</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Assign DisplayName="Reset exporting" sap2010:WorkflowViewState.IdRef="Assign_34">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(sxl:XElement)">[exporting]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(sxl:XElement)">[New List(Of XElement)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
              <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="[position]" DisplayName="For Each exporting" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[exporting]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="sxl:XElement">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sxl:XElement" Name="export" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_88">
                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click add new row" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="[exportSelector + &quot;&lt;webctrl aaname='Add Row' tag='INPUT' /&gt;&quot;]" WaitForReady="INTERACTIVE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:Click.Target>
                      </ui:Click>
                      <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" ContinueOnError="True" DisplayName="Find Loading Wheel Element">
                        <ui:WaitUiElementAppear.Target>
                          <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[in_LoadingWheel]" WaitForReady="INTERACTIVE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:WaitUiElementAppear.Target>
                        <sap2010:WorkflowViewState.IdRef>WaitUiElementAppear_16</sap2010:WorkflowViewState.IdRef>
                      </ui:WaitUiElementAppear>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.4.2.1 Q879 Text workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_57" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\Text.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Entry">[export.Element("q879").Value]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Selector">["&lt;webctrl id='Q879_" &amp; position &amp; "' tag='INPUT' /&gt;"]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                          <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.4.2.2 Q880 Text workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_58" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\Text.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Entry">[export.Element("q880").Value]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Selector">["&lt;webctrl id='Q880_" &amp; position &amp; "' tag='INPUT' /&gt;"]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                          <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </Sequence>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.5 Q144 YesNo workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\YesNo.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_Choice">[in_Application.Element("q144").Value]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_YesSelector">&lt;webctrl id='Q144-A205' tag='INPUT' /&gt;</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_NoSelector">&lt;webctrl id='Q144-A206' tag='INPUT' /&gt;</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading">[loading]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.6 Q143 YesNo workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\YesNo.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_Choice">[in_Application.Element("q143").Value]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_YesSelector">&lt;webctrl id='Q143-A203' tag='INPUT' /&gt;</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_NoSelector">&lt;webctrl id='Q143-A204' tag='INPUT' /&gt;</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading">[loading]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <Sequence DisplayName="M2.7 Will biospecimens be destroyed or retained" sap2010:WorkflowViewState.IdRef="Sequence_63">
              <Sequence.Variables>
                <Variable x:TypeArguments="s:String[]" Name="biospecimens" />
              </Sequence.Variables>
              <Assign DisplayName="Assign M2.7 Q1242 biospecimens" sap2010:WorkflowViewState.IdRef="Assign_25">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[biospecimens]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[in_Application.Element("q1242").Value.Split("|"c)]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.7 A Destroyed at the conclusion of the project Checkbox workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\Checkbox.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_Choice">[biospecimens.Contains("Destroyed at the conclusion of the project")]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Selector">&lt;webctrl id='Q1242-A1630' tag='INPUT' /&gt;</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                  <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading">[loading]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.7 A Retained for future use Checkbox workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\Checkbox.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_Choice">[biospecimens.Contains("Retained for future use")]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Selector">&lt;webctrl id='Q1242-A1631' tag='INPUT' /&gt;</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                  <InArgument x:TypeArguments="ui:UiElement" x:Key="in_Loading">[loading]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <If Condition="[biospecimens.Contains(&quot;Destroyed at the conclusion of the project&quot;)]" DisplayName="If M2.7 contains Destroyed at the conclusion of the project" sap2010:WorkflowViewState.IdRef="If_10">
                <If.Then>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.7.1.1 Q1243 Paragraph workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\Paragraph.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Entry">[in_Application.Element("q1243").Value]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Selector">&lt;webctrl id='Q1243_ifr' tag='IFRAME' /&gt;</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </If.Then>
              </If>
              <If Condition="[biospecimens.Contains(&quot;Retained for future use&quot;)]" DisplayName="If M2.7 contains Retained for future use" sap2010:WorkflowViewState.IdRef="If_9">
                <If.Then>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.7.2.1 Q804 Paragraph workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\Paragraph.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Entry">[in_Application.Element("q804").Value]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Selector">&lt;webctrl id='Q804_ifr' tag='IFRAME' /&gt;</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </If.Then>
              </If>
            </Sequence>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke M2.8 Q538 Paragraph workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="NHMRC\DataEntry\Paragraph.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_Entry">[in_Application.Element("q538").Value]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Selector">&lt;webctrl id='Q538_ifr' tag='IFRAME' /&gt;</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Scope">[in_PageFrame.Selector.Text]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
    </ui:BrowserScope>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WaitUiElementAppear_11" sap:VirtualizedContainerService.HintSize="603,68" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Click_7" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_13" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="Sequence_92" sap:VirtualizedContainerService.HintSize="336,300">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_17" sap:VirtualizedContainerService.HintSize="603,447" />
      <sap2010:ViewStateData Id="Sequence_89" sap:VirtualizedContainerService.HintSize="625,679">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_1" sap:VirtualizedContainerService.HintSize="651,840">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ElementScope_1" sap:VirtualizedContainerService.HintSize="671,948">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_18" sap:VirtualizedContainerService.HintSize="671,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_25" sap:VirtualizedContainerService.HintSize="671,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_34" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="671,234" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_26" sap:VirtualizedContainerService.HintSize="671,87" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_45" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_83" sap:VirtualizedContainerService.HintSize="336,311">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="671,458" />
      <sap2010:ViewStateData Id="Click_4" sap:VirtualizedContainerService.HintSize="464,68" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_14" sap:VirtualizedContainerService.HintSize="464,68" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_48" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_52" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_53" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_61" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_18" sap:VirtualizedContainerService.HintSize="464,234" />
      <sap2010:ViewStateData Id="Sequence_84" sap:VirtualizedContainerService.HintSize="486,955">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_4" sap:VirtualizedContainerService.HintSize="671,1088">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="649,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_20" sap:VirtualizedContainerService.HintSize="649,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_21" sap:VirtualizedContainerService.HintSize="649,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_22" sap:VirtualizedContainerService.HintSize="649,87" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_46" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_59" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_85" sap:VirtualizedContainerService.HintSize="336,438">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="649,585" />
      <sap2010:ViewStateData Id="Click_5" sap:VirtualizedContainerService.HintSize="611,68" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_15" sap:VirtualizedContainerService.HintSize="611,68" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_54" sap:VirtualizedContainerService.HintSize="611,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_55" sap:VirtualizedContainerService.HintSize="611,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_56" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_62" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_19" sap:VirtualizedContainerService.HintSize="464,234" />
      <sap2010:ViewStateData Id="Sequence_91" sap:VirtualizedContainerService.HintSize="486,485">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="611,632" />
      <sap2010:ViewStateData Id="Sequence_86" sap:VirtualizedContainerService.HintSize="633,1226">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_5" sap:VirtualizedContainerService.HintSize="649,1359">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_47" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_60" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_87" sap:VirtualizedContainerService.HintSize="336,438">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="649,585" />
      <sap2010:ViewStateData Id="Click_6" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_16" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_57" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_58" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_88" sap:VirtualizedContainerService.HintSize="336,554">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_6" sap:VirtualizedContainerService.HintSize="649,687">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_64" sap:VirtualizedContainerService.HintSize="671,3941">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_27" sap:VirtualizedContainerService.HintSize="671,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_28" sap:VirtualizedContainerService.HintSize="671,87" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_24" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_29" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_30" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="464,234" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_31" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="464,234" />
      <sap2010:ViewStateData Id="Sequence_63" sap:VirtualizedContainerService.HintSize="671,986">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_19" sap:VirtualizedContainerService.HintSize="671,87" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="693,8741">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BrowserScope_3" sap:VirtualizedContainerService.HintSize="707,8849">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="729,9825">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="769,9905" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>