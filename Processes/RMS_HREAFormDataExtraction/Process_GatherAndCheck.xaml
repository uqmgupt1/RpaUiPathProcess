<Activity mc:Ignorable="sap sap2010 sads" x:Class="Process_GatherAndCheck"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:si="clr-namespace:System.IO;assembly=mscorlib"
 xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ProjectFiles" Type="InArgument(sd:DataTable)" />
    <x:Property Name="io_ApplicationFile" Type="InOutArgument(sxl:XElement)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Process_GatherAndCheck_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Checks files in q479, q783, q1092, q873, q1115, q1636, q1644, q737 &amp; q1082 and Application PDF documents, will throw an error if a file isn't found, a file's size exceeds 10MB or all project files exceeds 95MB.&#xD;&#xA;Checks if item q659 is set" DisplayName="Process_GatherAndCheck" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int64" Name="projectSize" />
    </Sequence.Variables>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each application attachment" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[{&quot;q479&quot;, &quot;q783&quot;, &quot;q1092&quot;, &quot;q873&quot;, &quot;q1115&quot;, &quot;q1636&quot;, &quot;q1644&quot;, &quot;q737&quot;, &quot;q1082&quot;}]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
          </ActivityAction.Argument>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
            <If Condition="[io_ApplicationFile.Descendants(item) Is Nothing]" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <ui:Continue sap2010:WorkflowViewState.IdRef="Continue_2" />
              </If.Then>
            </If>
            <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For Each element" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[io_ApplicationFile.Descendants(item)]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="sxl:XElement">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sxl:XElement" Name="element" />
                  </ActivityAction.Argument>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Int32" Name="position" />
                      <Variable x:TypeArguments="si:FileInfo" Name="fileDetails" />
                    </Sequence.Variables>
                    <If Condition="[element.Value = &quot;&quot;]" sap2010:WorkflowViewState.IdRef="If_5">
                      <If.Then>
                        <ui:Continue sap2010:WorkflowViewState.IdRef="Continue_3" />
                      </If.Then>
                    </If>
                    <ui:ForEachRow CurrentIndex="[position]" DataTable="[in_ProjectFiles]" DisplayName="For Each Row" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                          </ActivityAction.Argument>
                          <If Condition="[element.Value.Contains(Path.GetFileNameWithoutExtension(row(&quot;Item Reference&quot;).ToString)) Or&#xD;&#xA;row(&quot;Item Reference&quot;).ToString.Contains(Path.GetFileNameWithoutExtension(element.Value))]" sap2010:WorkflowViewState.IdRef="If_6">
                            <If.Then>
                              <ui:Break sap2010:WorkflowViewState.IdRef="Break_2" />
                            </If.Then>
                            <If.Else>
                              <Assign DisplayName="Assign 1 up position" sap2010:WorkflowViewState.IdRef="Assign_7">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[position]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[position + 1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Else>
                          </If>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                    </ui:ForEachRow>
                    <If Condition="[position = in_ProjectFiles.Rows.Count]" sap2010:WorkflowViewState.IdRef="If_8">
                      <If.Then>
                        <Throw Exception="[New BusinessRuleException(&quot;No project files to match this item&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_2" />
                      </If.Then>
                    </If>
                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Trace" Message="[item + vbTab &amp; position &amp; vbTab + element.Value]" />
                    <Assign DisplayName="Assign filename" sap2010:WorkflowViewState.IdRef="Assign_4">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[element.Value]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[in_ProjectFiles.Rows(position).Item("File Name").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[Not File.Exists(element.Value)]" DisplayName="If file exists" sap2010:WorkflowViewState.IdRef="If_9">
                      <If.Then>
                        <Throw Exception="[New BusinessRuleException(&quot;The file '&quot; + element.Value + &quot;' does not exist&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_3" />
                      </If.Then>
                    </If>
                    <Assign DisplayName="Assign file information" sap2010:WorkflowViewState.IdRef="Assign_5">
                      <Assign.To>
                        <OutArgument x:TypeArguments="si:FileInfo">[fileDetails]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="si:FileInfo">[New FileInfo(element.Value)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[fileDetails.Length &gt; 10000000 Or projectSize + fileDetails.Length &gt; 95000000]" sap2010:WorkflowViewState.IdRef="If_7">
                      <If.Then>
                        <Throw Exception="[New BusinessRuleException(&quot;Project files were oversized: File: &quot; &amp; fileDetails.Length &amp; &quot; and Total: &quot; &amp; projectSize)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                      </If.Then>
                      <If.Else>
                        <Assign DisplayName="Assign project size" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int64">[projectSize]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int64">[projectSize + fileDetails.Length]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[in_ProjectFiles]" DisplayName="For Each Row project files" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="reference" />
              <Variable x:TypeArguments="si:FileInfo" Name="fileDetails" />
              <Variable x:TypeArguments="sxl:XElement" Name="attachments" />
            </Sequence.Variables>
            <Assign DisplayName="Assign item reference" sap2010:WorkflowViewState.IdRef="Assign_14">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[reference]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[row("Item Reference").ToString.ToLower]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[reference.Contains(&quot;approv&quot;) And Path.GetExtension(reference).Contains(&quot;pdf&quot;)]" DisplayName="If approve/al and pdf document" sap2010:WorkflowViewState.IdRef="If_12">
              <If.Else>
                <ui:Continue sap2010:WorkflowViewState.IdRef="Continue_4" />
              </If.Else>
            </If>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="[row(&quot;File Name&quot;).ToString]" />
            <Assign DisplayName="Init other attachments" sap2010:WorkflowViewState.IdRef="Assign_18">
              <Assign.To>
                <OutArgument x:TypeArguments="sxl:XElement">[attachments]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sxl:XElement">[New XElement("OtherAttachmentsRpt", New XElement("q1082"), New XElement("q621"))]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign filename" sap2010:WorkflowViewState.IdRef="Assign_17">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[attachments.Element("q1082").Value]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[row("File Name").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign reference" sap2010:WorkflowViewState.IdRef="Assign_19">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[attachments.Element("q621").Value]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[row("Item Reference").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <InvokeMethod DisplayName="Invoke XElement Add Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Add">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="sxl:XElement">[io_ApplicationFile]</InArgument>
              </InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sxl:XElement">[attachments]</InArgument>
            </InvokeMethod>
            <Assign DisplayName="Assign file information" sap2010:WorkflowViewState.IdRef="Assign_15">
              <Assign.To>
                <OutArgument x:TypeArguments="si:FileInfo">[fileDetails]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="si:FileInfo">[New FileInfo(row("File Name").ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[fileDetails.Length &gt; 10000000 Or projectSize + fileDetails.Length &gt; 95000000]" sap2010:WorkflowViewState.IdRef="If_18">
              <If.Then>
                <Throw Exception="[New BusinessRuleException(&quot;Project files were oversized: File: &quot; &amp; fileDetails.Length &amp; &quot; and Total: &quot; &amp; projectSize)]" sap2010:WorkflowViewState.IdRef="Throw_7" />
              </If.Then>
              <If.Else>
                <Assign DisplayName="Assign project size" sap2010:WorkflowViewState.IdRef="Assign_16">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int64">[projectSize]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int64">[projectSize + fileDetails.Length]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For Each team member program" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[io_ApplicationFile.Elements(&quot;TeamMembersRpt&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sxl:XElement">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
          </ActivityAction.Argument>
          <If Condition="[item.Element(&quot;q656&quot;).Value = &quot;Yes&quot;]" DisplayName="If program is required" sap2010:WorkflowViewState.IdRef="If_10">
            <If.Then>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
                <If Condition="[item.Element(&quot;q659&quot;) Is Nothing]" DisplayName="If element doesn't exist" sap2010:WorkflowViewState.IdRef="If_19">
                  <If.Then>
                    <InvokeMethod DisplayName="Invoke XElement Add Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="sxl:XElement">[item]</InArgument>
                      </InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="x:Object">[New XElement("q659")]</InArgument>
                    </InvokeMethod>
                  </If.Then>
                </If>
                <If Condition="[item.Element(&quot;q659&quot;).IsEmpty Or item.Element(&quot;q659&quot;).Value = &quot;&quot;]" DisplayName="If invalid value" sap2010:WorkflowViewState.IdRef="If_20">
                  <If.Then>
                    <Assign DisplayName="Assign Doctorate" sap2010:WorkflowViewState.IdRef="Assign_8">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[item.Element("q659").Value]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Doctorate</InArgument>
                      </Assign.Value>
                    </Assign>
                  </If.Then>
                </If>
              </Sequence>
            </If.Then>
          </If>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <If Condition="[io_ApplicationFile.Element(&quot;q448&quot;).Value.Split(&quot;|&quot;c).Length &gt; 1 Or&#xD;&#xA;(  io_ApplicationFile.Element(&quot;q448&quot;).Value.Split(&quot;|&quot;c).Length = 1 And&#xD;&#xA;  Not io_ApplicationFile.Element(&quot;q448&quot;).Value.Contains(&quot;Individual participants&quot;)  )]" DisplayName="If Q3.6 multiple checked Or single not contains Individual Participants" sap2010:WorkflowViewState.IdRef="If_22">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
          <If Condition="[io_ApplicationFile.Element(&quot;q1641&quot;) Is Nothing]" DisplayName="If Q3.6.1 is not Set" sap2010:WorkflowViewState.IdRef="If_21">
            <If.Then>
              <InvokeMethod DisplayName="Invoke XElement Add Method" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Add">
                <InvokeMethod.TargetObject>
                  <InArgument x:TypeArguments="sxl:XElement">[io_ApplicationFile]</InArgument>
                </InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="sxl:XElement">[New XElement("q1641")]</InArgument>
              </InvokeMethod>
            </If.Then>
          </If>
          <If Condition="[io_ApplicationFile.Element(&quot;q1641&quot;).IsEmpty Or io_ApplicationFile.Element(&quot;q1641&quot;).Value = &quot;&quot;]" DisplayName="If invalid value" sap2010:WorkflowViewState.IdRef="If_23">
            <If.Then>
              <Assign DisplayName="Assign Data custodian has approved access to data" sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[io_ApplicationFile.Element("q1641").Value]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Data custodian has approved access to data</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
          </If>
        </Sequence>
      </If.Then>
    </If>
    <sads:DebugSymbol.Symbol>d1tDOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcUk1TX0hSRUFGb3JtRGF0YUV4dHJhY3Rpb25cUHJvY2Vzc19HYXRoZXJBbmRDaGVjay54YW1sak8DzgIOAgEBUwW4ARICAU25AQWLAhUCASCMAgWwAhICARCxAgXMAgoCAQJTpwFT0gIDAYMBWQu1ARYCAU65ATa5AUkCAUu/AQuIAhYCASGMAqgBjALjAQIBH5ICC60CEAIBEbECE7ECxwICAQOzAgnKAhQCAQRaDV4SAwGAAV8NtAEaAgFPxQENzAEWAgFHzQEN0QESAgFE0gEN0gGlAQIBQtMBDdoBFgIBPtsBDeIBFgIBO+MBDeoBFgIBOOsBDfABHAIBM/EBDfgBFgIBL/kBDYcCEgIBIpICGZICUwIBEpQCD6sCGgIBE7QCC70CEAIBCr4CC8kCEAIBBVobWk4DAYEBXBFcTQMBggFfpAFfzAECAX9lE7EBHgIBUMoBOMoBYAIBSscBOccBRAIBSM0BG80BgAECAUXPARHPAU0CAUbSAXvSAaIBAgFD2AE82AGOAQIBQdUBPdUBSgIBP+ABOOABUwIBPd0BOd0BXQIBPOgBOOgBWAIBOuUBOeUBXAIBOe8BOu8BRwIBNu0BPO0BUAIBNPYBO/YBZAIBMvMBPPMBSQIBMPkBG/kBcQIBI/sBEfsB6AECAS3+ARGFAhoCASeVAhGeAhYCARmfAhGqAhYCARS0Ahm0AlUCAQu2Ag+7Ah4CAQy+Ahm+ApgBAgEGwAIPxwIYAgEHahVuGgIBfG8VhgElAgFvhwEViwEaAgFrjAEVjAHBAQIBaY0BFZQBHgIBZpUBFZkBGgIBYpoBFaEBHgIBXqIBFbABGgIBUfsBIvsBuwECAS6DAjuDAl0CASqAAjyAAkkCASiVAh+VAkwCARqXAhWcAiQCARufAh+fAoABAgEVoQIVqAIeAgEWugI8ugJTAgEPuAI+uAJSAgENxQI6xQJkAgEJwgI7wgJmAgEIaiNqQwIBfWwZbFUCAX5vMW89AgF6b0hvWwIBeHUbgwEgAgFwhwEjhwFMAgFsiQEZiQGlAQIBbYwBgwGMAb4BAgFqkgFAkgF7AgFojwFBjwFQAgFnlQEjlQFFAgFjlwEZlwG7AQIBZJ8BQ58BYAIBYZwBRJwBUQIBX6IBI6IBeQIBUqQBGaQB8AECAVynARmuASICAVabAj6bAlQCAR6ZAkSZAkoCARymAkCmAkkCARijAkGjAl0CARd1KXX+AQIBcXcfd1UCAXd6H4EBKAIBcokBKokBeAIBbpcBKpcBjgECAWWkASqkAcMBAgFdrAFDrAFlAgFZqQFEqQFRAgFXf0l/VwIBdXxKfFQCAXM=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Continue_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="535,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Continue_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="497,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Break_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="467,212" />
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="497,360" />
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="497,208" />
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="497,91" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="497,60" />
      <sap2010:ViewStateData Id="Throw_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="497,208" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="497,60" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="497,208" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="519,1807">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_4" sap:VirtualizedContainerService.HintSize="535,1941" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="557,2313">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="627,2447">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="467,60" />
      <sap2010:ViewStateData Id="Continue_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="467,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="467,91" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="467,60" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="467,60" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="467,60" />
      <sap2010:ViewStateData Id="InvokeMethod_3" sap:VirtualizedContainerService.HintSize="467,132" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="467,60" />
      <sap2010:ViewStateData Id="Throw_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_18" sap:VirtualizedContainerService.HintSize="467,208" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="489,1383">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_2" sap:VirtualizedContainerService.HintSize="627,1531" />
      <sap2010:ViewStateData Id="InvokeMethod_1" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="If_19" sap:VirtualizedContainerService.HintSize="464,280" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_20" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="486,652">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="611,800" />
      <sap2010:ViewStateData Id="ForEach`1_5" sap:VirtualizedContainerService.HintSize="627,934">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_2" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="If_21" sap:VirtualizedContainerService.HintSize="464,280" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_23" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="486,652">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_22" sap:VirtualizedContainerService.HintSize="627,804">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="649,6017">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Process_GatherAndCheck_1" sap:VirtualizedContainerService.HintSize="689,6097" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>