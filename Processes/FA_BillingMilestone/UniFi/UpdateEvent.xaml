<Activity mc:Ignorable="sap sap2010 sads" x:Class="UpdateEvent"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ContractID" Type="InArgument(x:String)" />
    <x:Property Name="in_MilestoneID" Type="InArgument(x:String)" />
    <x:Property Name="in_MilestoneDescription" Type="InArgument(x:String)" />
    <x:Property Name="in_EventDate" Type="InArgument(s:DateTime)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>UpdateEvent_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>Newtonsoft.Json</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: Searches for Contract and Billing Plan Identifiers, should return a single result or no matching values found.&#xA;&#xA;Inputs:&#xA;in_ContractID &lt;String&gt;.&#xA;in_MilestoneID &lt;String&gt;.&#xA;&#xA;Outputs: NA&#xA;Pre Condition:&#xA;Must be on the Define Billing Plan page.&#xA;&#xA;Post Condition:&#xA;No matching values were found for ContractID and BillingPlanID" DisplayName="Update Billing Plan Event" sap2010:WorkflowViewState.IdRef="Sequence_3">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="EventID" />
      <Variable x:TypeArguments="x:String" Name="BillingPlanID" />
      <Variable x:TypeArguments="x:Decimal" Name="milestoneAmount" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Start UpdateEvent.xaml, using &quot; + in_ContractID + &quot; and &quot; + in_MilestoneID]" />
    <Assign DisplayName="Assign Billing Plan ID" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[BillingPlanID]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_MilestoneID.Substring(0, 4)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Event ID" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[EventID]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[CInt(in_MilestoneID.Substring(4))]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Amount" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Decimal">[milestoneAmount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Decimal">[Decimal.Parse(in_MilestoneDescription.Split("-"c).First, NumberStyles.Currency, CultureInfo.CurrentCulture)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser UniFi Define Billing Plan" sap2010:WorkflowViewState.IdRef="BrowserScope_1" Selector="&lt;html app='chrome.exe' title='Define Billing Plan' /&gt;">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="noResults" />
              <Variable x:TypeArguments="ui:UiElement" Name="pageFrame" />
              <Variable x:TypeArguments="ui:UiElement" Name="eventDetail" />
              <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="eventAmounts" />
              <Variable x:TypeArguments="x:String" Name="noteText" />
              <Variable x:TypeArguments="scg:List(x:String)" Name="noteLines" />
              <Variable x:TypeArguments="ui:UiElement" Name="eventNote" />
            </Sequence.Variables>
            <ui:WaitUiElementAppear DisplayName="Find Page Frame Element" FoundElement="[pageFrame]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_1" WaitActive="False" WaitVisible="False">
              <ui:WaitUiElementAppear.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl tag='IFRAME' parentclass='PSPAGE' /&gt;" WaitForReady="COMPLETE" />
              </ui:WaitUiElementAppear.Target>
            </ui:WaitUiElementAppear>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke EnterValue Business Unit workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="UniFi\EnterValue.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_FieldSelector">&lt;webctrl tag='INPUT' rowName=' Business Unit' type='text' /&gt;</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_NewValue">UQ001</InArgument>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="opt_ParentScope">[pageFrame]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke EnterValue Contract ID workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="UniFi\EnterValue.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_FieldSelector">&lt;webctrl tag='INPUT' rowName=' Contract' type='text' /&gt;</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_NewValue">[in_ContractID]</InArgument>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="opt_ParentScope">[pageFrame]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke EnterValue Billing Plan ID workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="UniFi\EnterValue.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_FieldSelector">&lt;webctrl tag='INPUT' rowName=' Billing Plan ID' type='text' /&gt;</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_NewValue">[BillingPlanID]</InArgument>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="opt_ParentScope">[pageFrame]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:Click ClickType="CLICK_SINGLE" DelayBefore="5" DelayMS="5" DisplayName="Click search button" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl tag='INPUT' aaname='Search*' type='button' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:Click.Target>
            </ui:Click>
            <ui:UiElementExists DisplayName="Element Exists no matching values" Exists="[noResults]" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;webctrl aaname='No matching values were found.' class='PSSRCHINSTRUCTIONS' /&gt;" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[&quot;Matching search results: &quot; &amp; Not noResults]" />
            <If Condition="[noResults]" DisplayName="If no matching values" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Throw DisplayName="Throw No Results" Exception="[New BusinessRuleException(&quot;No matching values were found.&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </If.Then>
            </If>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Searched and matched &quot; + in_ContractID + &quot; and &quot; + BillingPlanID]" />
            <ui:Click ClickType="CLICK_SINGLE" DelayBefore="5" DelayMS="5" DisplayName="Click Events tab" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl aaname='Events' tag='A' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:Click.Target>
            </ui:Click>
            <ui:FindChildren Children="[eventAmounts]" DisplayName="Find Event Amounts Children" Filter="&lt;webctrl id='CA_BP_EVENTS_AMOUNT*' /&gt;" sap2010:WorkflowViewState.IdRef="FindChildren_2" Scope="FIND_DESCENDANTS">
              <ui:FindChildren.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;html app='chrome.exe' title='Define Billing Plan' /&gt;&#xA;&lt;webctrl id='ptifrmtgtframe' tag='IFRAME' /&gt;&#xA;&lt;webctrl id='*CA_BP_EVENTS*' tag='TABLE' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:FindChildren.Target>
            </ui:FindChildren>
            <ui:ForEach x:TypeArguments="ui:UiElement" CurrentIndex="{x:Null}" DisplayName="For Each Event Detail Amount" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[eventAmounts]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="ui:UiElement">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:UiElement" Name="amount" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="ui:GenericValue" Name="value" />
                    </Sequence.Variables>
                    <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Amount Text" sap2010:WorkflowViewState.IdRef="GetValue_2">
                      <ui:GetValue.Target>
                        <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[amount]" WaitForReady="INTERACTIVE" />
                      </ui:GetValue.Target>
                      <ui:GetValue.Value>
                        <OutArgument x:TypeArguments="ui:GenericValue">[value]</OutArgument>
                      </ui:GetValue.Value>
                    </ui:GetValue>
                    <If Condition="[Decimal.Parse(value, NumberStyles.Number) = 0.0]" DisplayName="If value isn't reversed" sap2010:WorkflowViewState.IdRef="If_4">
                      <If.Then>
                        <Throw DisplayName="Throw Reversal In Progress" Exception="[New BusinessRuleException(&quot;Event &quot; &amp; eventAmounts.ToList.IndexOf(amount) + 1 &amp; &quot; is a reversal in progress&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_3" />
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <If Condition="[EventID &lt; 0 Or EventID &gt; eventAmounts.Count]" DisplayName="If event ID outside of items" sap2010:WorkflowViewState.IdRef="If_8">
              <If.Then>
                <Throw DisplayName="Throw event ID not found" Exception="[New BusinessRuleException(&quot;Couldn't find event ID &quot; &amp; EventID &amp; &quot; out of &quot; &amp; eventAmounts.Count)]" sap2010:WorkflowViewState.IdRef="Throw_5" />
              </If.Then>
            </If>
            <ui:WaitUiElementAppear DisplayName="Find Event Detail Element" FoundElement="[eventDetail]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_2" WaitActive="False" WaitVisible="False">
              <ui:WaitUiElementAppear.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl id='ptifrmtgtframe' tag='IFRAME' /&gt;&lt;webctrl id='*CA_BP_EVENTS*' tag='TABLE' /&gt;&lt;webctrl idx='{{EventID}}' id='CA_BP_EVENTS_EVENT_OCCURRENCE*' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:WaitUiElementAppear.Target>
            </ui:WaitUiElementAppear>
            <While DisplayName="While inside row element" sap2010:WorkflowViewState.IdRef="While_1" Condition="[eventDetail.Selector.GetTags.Last.GetRole &lt;&gt; &quot;Tr&quot;]">
              <ui:WaitUiElementAppear DisplayName="Find Parent Element" FoundElement="[eventDetail]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_3" WaitActive="False" WaitVisible="False">
                <ui:WaitUiElementAppear.Target>
                  <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[eventDetail.Parent]" WaitForReady="INTERACTIVE" />
                </ui:WaitUiElementAppear.Target>
              </ui:WaitUiElementAppear>
            </While>
            <ui:ElementScope UiElement="{x:Null}" DisplayName="Event Row Element Scope" sap2010:WorkflowViewState.IdRef="ElementScope_1">
              <ui:ElementScope.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="eventAmount" />
                      <Variable x:TypeArguments="x:String" Name="eventStatus" />
                      <Variable x:TypeArguments="x:String" Name="eventDate" />
                    </Sequence.Variables>
                    <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Amount Text" sap2010:WorkflowViewState.IdRef="GetValue_1">
                      <ui:GetValue.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl id='CA_BP_EVENTS_AMOUNT*' /&gt;" WaitForReady="INTERACTIVE" />
                      </ui:GetValue.Target>
                      <ui:GetValue.Value>
                        <OutArgument x:TypeArguments="x:String">[eventAmount]</OutArgument>
                      </ui:GetValue.Value>
                    </ui:GetValue>
                    <If Condition="[Decimal.Parse(eventAmount, NumberStyles.Number) &lt;&gt; milestoneAmount]" DisplayName="If amount doesn't match" sap2010:WorkflowViewState.IdRef="If_3">
                      <If.Then>
                        <Throw DisplayName="Throw Amount Mismatch" Exception="[New BusinessRuleException(&quot;Amount values don't match: &quot; &amp; Decimal.Parse(eventAmount, NumberStyles.Number) &amp; &quot; vs &quot; &amp; milestoneAmount)]" sap2010:WorkflowViewState.IdRef="Throw_2" />
                      </If.Then>
                    </If>
                    <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Event Status Text" sap2010:WorkflowViewState.IdRef="GetValue_3">
                      <ui:GetValue.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl id='CA_BP_EVENTS_BP_EVENT_STATUS*' /&gt;" WaitForReady="INTERACTIVE" />
                      </ui:GetValue.Target>
                      <ui:GetValue.Value>
                        <OutArgument x:TypeArguments="x:String">[eventStatus]</OutArgument>
                      </ui:GetValue.Value>
                    </ui:GetValue>
                    <If Condition="[eventStatus &lt;&gt; &quot;Pending&quot;]" DisplayName="If status not Pending" sap2010:WorkflowViewState.IdRef="If_5">
                      <If.Then>
                        <Throw DisplayName="Throw Not Pending" Exception="[New BusinessRuleException(&quot;The event status was &quot; &amp; eventStatus)]" sap2010:WorkflowViewState.IdRef="Throw_4" />
                      </If.Then>
                    </If>
                    <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Event Date Text" sap2010:WorkflowViewState.IdRef="GetValue_6">
                      <ui:GetValue.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl id='CA_BP_EVENTS_EVENT_DT*' /&gt;" WaitForReady="INTERACTIVE" />
                      </ui:GetValue.Target>
                      <ui:GetValue.Value>
                        <OutArgument x:TypeArguments="x:String">[eventDate]</OutArgument>
                      </ui:GetValue.Value>
                    </ui:GetValue>
                    <If Condition="[in_EventDate.ToString(&quot;MM/dd/yyyy&quot;) &lt;&gt; eventDate]" DisplayName="If event dates don't match" sap2010:WorkflowViewState.IdRef="If_9">
                      <If.Then>
                        <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_12">
                              <Throw DisplayName="Throw Mismatched dates" Exception="[New BusinessRuleException(&quot;Date values don't match: &quot; &amp; eventDate &amp; &quot; vs &quot; &amp; in_EventDate.ToString(&quot;MM/dd/yyyy&quot;))]" sap2010:WorkflowViewState.IdRef="Throw_6" />
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                      </If.Then>
                    </If>
                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Event &quot; &amp; EventID &amp; &quot; has &quot; &amp; eventAmount &amp; &quot; &quot; &amp; eventStatus &amp; &quot; due &quot; &amp; eventDate]" />
                    <ui:Click ClickType="CLICK_SINGLE" DelayBefore="5" DelayMS="5" DisplayName="Click Event Note" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                      <ui:Click.CursorPosition>
                        <ui:CursorPosition Position="Center">
                          <ui:CursorPosition.OffsetX>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetX>
                          <ui:CursorPosition.OffsetY>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetY>
                        </ui:CursorPosition>
                      </ui:Click.CursorPosition>
                      <ui:Click.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl id='EVENT_NOTE*' tag='A' /&gt;" WaitForReady="INTERACTIVE" />
                      </ui:Click.Target>
                    </ui:Click>
                  </Sequence>
                </ActivityAction>
              </ui:ElementScope.Body>
              <ui:ElementScope.Target>
                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[eventDetail]" WaitForReady="INTERACTIVE" />
              </ui:ElementScope.Target>
            </ui:ElementScope>
            <ui:WaitUiElementAppear DisplayName="Find Event Note Element" FoundElement="[eventNote]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_6" WaitActive="False" WaitVisible="False">
              <ui:WaitUiElementAppear.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl id='ptModFrame*' tag='IFRAME' /&gt;&lt;webctrl tag='BODY' title='Billing Plan Event Note' /&gt;&lt;webctrl tag='TEXTAREA' id='CA_BP_EVENTS_TEXT*' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:WaitUiElementAppear.Target>
            </ui:WaitUiElementAppear>
            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Note Text" sap2010:WorkflowViewState.IdRef="GetValue_5">
              <ui:GetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[eventNote]" WaitForReady="INTERACTIVE" />
              </ui:GetValue.Target>
              <ui:GetValue.Value>
                <OutArgument x:TypeArguments="x:String">[noteText]</OutArgument>
              </ui:GetValue.Value>
            </ui:GetValue>
            <Assign DisplayName="Assign note lines" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">[noteLines]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">[noteText.Split(vbNewLine.ToCharArray).ToList]</InArgument>
              </Assign.Value>
            </Assign>
            <While DisplayName="While more lines to check" sap2010:WorkflowViewState.IdRef="While_2">
              <While.Variables>
                <Variable x:TypeArguments="x:Int32" Default="0" Name="i" />
              </While.Variables>
              <While.Condition>[i &lt; noteLines.Count]</While.Condition>
              <If Condition="[noteLines(i).Trim.StartsWith(&quot;*&quot;)]" DisplayName="If line to remove" sap2010:WorkflowViewState.IdRef="If_6">
                <If.Then>
                  <RemoveFromCollection x:TypeArguments="x:String" Collection="[noteLines]" DisplayName="Remove Line From Note" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_1" Item="[noteLines(i)]" />
                </If.Then>
                <If.Else>
                  <Assign DisplayName="Increment i" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[i]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[i + 1]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
            </While>
            <If Condition="[noteText &lt;&gt; String.Join(vbLf, noteLines).Trim]" DisplayName="If event note updated" sap2010:WorkflowViewState.IdRef="If_7">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
                  <Assign DisplayName="Assign trimmed note text" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[noteText]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[String.Join(vbLf, noteLines).Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Updating event note to &quot; + JsonConvert.SerializeObject(noteText)]" />
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke EnterValue Event Note workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="UniFi\EnterValue.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_FieldSelector">[eventNote.Selector.Text]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_NewValue">[noteText]</InArgument>
                      <InArgument x:TypeArguments="ui:UiElement" x:Key="opt_ParentScope" />
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </If.Then>
              <If.Else>
                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Keeping event note as &quot; + JsonConvert.SerializeObject(noteText)]" />
              </If.Else>
            </If>
            <ui:Click ClickType="CLICK_SINGLE" DelayBefore="5" DelayMS="5" DisplayName="Click Ok" sap2010:WorkflowViewState.IdRef="Click_8" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl tag='INPUT' aaname='Ok*' type='button' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:Click.Target>
            </ui:Click>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke EnterValue Event Date workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="UniFi\EnterValue.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_FieldSelector">&lt;webctrl id='CA_BP_EVENTS_EVENT_DT*' tag='INPUT' /&gt;</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_NewValue">[in_EventDate.ToString("MM/dd/yyyy")]</InArgument>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="opt_ParentScope">[eventDetail]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke EnterValue Event Status workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="UniFi\EnterValue.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_FieldSelector">&lt;webctrl id='CA_BP_EVENTS_BP_EVENT_STATUS*' tag='SELECT' /&gt;</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_NewValue">Ready</InArgument>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="opt_ParentScope">[eventDetail]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:Click ClickType="CLICK_SINGLE" DelayBefore="5" DelayMS="5" DisplayName="Click Save" sap2010:WorkflowViewState.IdRef="Click_11" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="&lt;webctrl tag='IFRAME' parentclass='PSPAGE' /&gt;&lt;webctrl tag='INPUT' aaname='Save*' type='button' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:Click.Target>
            </ui:Click>
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
    </ui:BrowserScope>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;End UpdateEvent.xaml, event 'Ready' on '&quot; + Today.ToShortDateString + &quot;'&quot;]" />
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="711,91" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="711,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="711,60" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="711,60" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_1" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="675,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="675,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="675,87" />
      <sap2010:ViewStateData Id="Click_1" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="UiElementExists_1" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="675,207" />
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="Click_3" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="FindChildren_2" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="GetValue_2" sap:VirtualizedContainerService.HintSize="464,68" />
      <sap2010:ViewStateData Id="Throw_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,207" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="486,439">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="675,572" />
      <sap2010:ViewStateData Id="Throw_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="675,207" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_2" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_3" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="675,225" />
      <sap2010:ViewStateData Id="GetValue_1" sap:VirtualizedContainerService.HintSize="541,68" />
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="541,207" />
      <sap2010:ViewStateData Id="GetValue_3" sap:VirtualizedContainerService.HintSize="541,68" />
      <sap2010:ViewStateData Id="Throw_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="541,207" />
      <sap2010:ViewStateData Id="GetValue_6" sap:VirtualizedContainerService.HintSize="541,68" />
      <sap2010:ViewStateData Id="Throw_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_3" sap:VirtualizedContainerService.HintSize="416,224" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="541,371" />
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="541,91" />
      <sap2010:ViewStateData Id="Click_5" sap:VirtualizedContainerService.HintSize="541,68" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="563,1552">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ElementScope_1" sap:VirtualizedContainerService.HintSize="675,1660">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WaitUiElementAppear_6" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="GetValue_5" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="RemoveFromCollection`1_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="467,207" />
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="675,364" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="336,442">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="675,589" />
      <sap2010:ViewStateData Id="Click_8" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="675,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="675,87" />
      <sap2010:ViewStateData Id="Click_11" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="697,6265">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BrowserScope_1" sap:VirtualizedContainerService.HintSize="711,6373">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="711,91" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="733,7251">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UpdateEvent_1" sap:VirtualizedContainerService.HintSize="773,7331" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>