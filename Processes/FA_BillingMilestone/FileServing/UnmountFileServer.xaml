<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_MappedDrive" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Main_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security.Principal</x:String>
      <x:String>System.DirectoryServices.AccountManagement</x:String>
      <x:String>Microsoft.IdentityModel.Clients.ActiveDirectory</x:String>
      <x:String>System.Net</x:String>
      <x:String>SimpleImpersonation</x:String>
      <x:String>Dapplo.Windows.Advapi32</x:String>
      <x:String>PInvoke</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.DirectoryServices.AccountManagement</AssemblyReference>
      <AssemblyReference>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyReference>
      <AssemblyReference>SimpleImpersonation</AssemblyReference>
      <AssemblyReference>Dapplo.Windows.Advapi32</AssemblyReference>
      <AssemblyReference>PInvoke.AdvApi32</AssemblyReference>
      <AssemblyReference>PInvoke.Kernel32</AssemblyReference>
      <AssemblyReference>PInvoke.Windows.Core</AssemblyReference>
      <AssemblyReference>System.Reactive</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sco:Collection(x:String)" Name="response" />
    </Sequence.Variables>
    <Assign DisplayName="Assign without variable part of name" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[in_MappedDrive]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_MappedDrive.Replace("{0}", "").TrimEnd("\"c)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Start UnmountFileServer.xaml, mapped: &quot; + in_MappedDrive]" />
    <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="net use" DisplayName="Invoke List Mapped Drives" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_5" IsScript="True" Output="[response]" />
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Trace" Message="[&quot;Existing mappings: &quot; + String.Join(vbNewLine, response.Where(function(s) s.Trim &lt;&gt; &quot;&quot;))]" />
    <While DisplayName="While drives mapped" sap2010:WorkflowViewState.IdRef="While_1" Condition="[response.Any(Function(r) r.Contains(Path.GetPathRoot(in_MappedDrive)))]">
      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
        <Sequence.Variables>
          <Variable x:TypeArguments="ui:GenericValue" Name="driveLetter" />
        </Sequence.Variables>
        <Assign DisplayName="Assign first mapped drive" sap2010:WorkflowViewState.IdRef="Assign_5">
          <Assign.To>
            <OutArgument x:TypeArguments="ui:GenericValue">[driveLetter]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="ui:GenericValue">[response.First(Function(r) r.Contains(Path.GetPathRoot(in_MappedDrive)))]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Trace" Message="[&quot;Removing: &quot; + driveLetter]" />
        <Assign DisplayName="Assign letter part of name" sap2010:WorkflowViewState.IdRef="Assign_6">
          <Assign.To>
            <OutArgument x:TypeArguments="ui:GenericValue">[driveLetter]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="ui:GenericValue">[driveLetter.Substring(13, 2)]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="net use $drive /delete /yes" DisplayName="Invoke Remove Existing Mapping" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_13" IsScript="True" Output="[response]">
          <ui:InvokePowerShell.PowerShellVariables>
            <InArgument x:TypeArguments="x:String" x:Key="drive">[driveLetter]</InArgument>
          </ui:InvokePowerShell.PowerShellVariables>
        </ui:InvokePowerShell>
        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Trace" Message="[&quot;Removed: &quot; + String.Join(vbNewLine, response.Where(function(s) s.Trim &lt;&gt; &quot;&quot;))]" />
        <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="net use" DisplayName="Invoke List Mapped Drives" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_14" IsScript="True" Output="[response]" />
        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Trace" Message="[&quot;Existing mappings: &quot; + String.Join(vbNewLine, response.Where(function(s) s.Trim &lt;&gt; &quot;&quot;))]" />
      </Sequence>
    </While>
    <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="net use" DisplayName="Invoke List Mapped Drives" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_11" IsScript="True" Output="[response]" />
    <ui:CheckTrue DisplayName="Check Drive Removed" ErrorMessage="[&quot;Errors removing mapping to: &quot; + in_MappedDrive]" Expression="[Not response.Any(Function(r) r.Contains(in_MappedDrive))]" sap2010:WorkflowViewState.IdRef="CheckTrue_1" />
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="[&quot;End UnmountFileServer.xaml, got: &quot; + String.Join(vbNewLine, response.Where(function(s) s.Trim &lt;&gt; &quot;&quot;))]" />
    <sads:DebugSymbol.Symbol>d2JDOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcUk1TX0hSRUFGb3JtRGF0YUV4dHJhY3Rpb25cRmlsZVNlcnZpbmdcVW5tb3VudEZpbGVTZXJ2ZXIueGFtbClbA44BDgIBAV8FZg4CATBnBWe8AQIBLWgFaOsBAgEpaQVp7QECASdqBYkBDQIBDIoBBYoB7AECAQiLAQWLAfgBAgEEjAEFjAH6AQIBAmQwZGECATNhMWFBAgExZ3JnuQECAS5o3AFo6AECAStoXGhlAgEqaXRp6gECAShrB4gBEgIBDmpiaqwBAgENigHdAYoB6QECAQqKAVyKAWUCAQmLAYsBiwHHAQIBB4sBQosBfwIBBYwBc4wB9wECAQNvCXYSAgEjdwl3owECASF4CX8SAgEcgAEJhAEfAgEXhQEJhQHnAQIBFYYBCYYB8AECARGHAQmHAfEBAgEPdDt0hQECASZxPHFJAgEkd3h3oAECASJ9O31ZAgEfejx6SQIBHYAB+gGAAYYCAgEagAFggAF9AgEZggFCggFPAgEYhQF4hQHkAQIBFoYB4QGGAe0BAgEThgFghgFpAgEShwF4hwHuAQIBEA==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="InvokePowerShell`1_5" sap:VirtualizedContainerService.HintSize="464,59" />
      <sap2010:ViewStateData Id="LogMessage_24" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_25" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokePowerShell`1_13" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="LogMessage_31" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokePowerShell`1_14" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="LogMessage_26" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="336,875">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="464,1033">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokePowerShell`1_11" sap:VirtualizedContainerService.HintSize="464,59" />
      <sap2010:ViewStateData Id="CheckTrue_1" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="LogMessage_30" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="486,1975">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="526,2095" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>