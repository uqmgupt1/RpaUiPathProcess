<Activity mc:Ignorable="sap sap2010 sads" x:Class="SetTransactionStatus"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="in_RuleException" Type="InArgument(ui:BusinessRuleException)" />
    <x:Property Name="in_SystemError" Type="InArgument(s:Exception)" />
    <x:Property Name="io_TransactionItem" Type="InOutArgument(ui:QueueItem)" />
    <x:Property Name="io_TransactionNumber" Type="InOutArgument(x:Int32)" />
    <x:Property Name="in_ProjectsUpdated" Type="InArgument(x:Int32)" />
    <x:Property Name="in_ProjectsTotal" Type="InArgument(x:Int32)" />
    <x:Property Name="in_GrantorsUpdated" Type="InArgument(x:Int32)" />
    <x:Property Name="in_GrantorsTotal" Type="InArgument(x:Int32)" />
    <x:Property Name="in_LinesUpdated" Type="InArgument(x:Int32)" />
    <x:Property Name="in_LinesTotal" Type="InArgument(x:Int32)" />
    <x:Property Name="in_EventsUpdated" Type="InArgument(x:Int32)" />
    <x:Property Name="in_EventsTotal" Type="InArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>SetTransactionStatus_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description:&#xA;The workflow moves the Response email to the Email Store directory and attempts to move the Request email and any attachment emails contained in the Specific Content.&#xA;&#xA;This workflow sets the TransactionStatus with the sequence one of three three possible Transaction Statuses: Success, Business Exception and System Error. If the System Error path is chosen then a screenshot is saved and all applications will be closed.&#xA;&#xA;Finally the TransactionItem is refreshed from orchestrator and the TransactionNumber is incremented for the next queue item. &#xA;&#xA;Inputs:&#xA;in_Config &lt;Dictionary&lt;String, String&gt;&gt;.&#xA;in_RuleException &lt;BusinessRuleException&gt;.&#xA;in_SystemError &lt;Exception&gt;.&#xA;io_TransactionItem &lt;QueueItem&gt;.&#xA;io_TransactionNumber &lt;Integer&gt;.&#xA;&#xA;The following arguments are used as metrics in successful transactions.&#xA;in_ProjectsUpdated &lt;Integer&gt;.&#xA;in_ProjectsTotal &lt;Integer&gt;.&#xA;in_GrantorsUpdated &lt;Integer&gt;.&#xA;in_GrantorsTotal &lt;Integer&gt;.&#xA;in_LinesUpdated &lt;Integer&gt;.&#xA;in_LinesTotal &lt;Integer&gt;.&#xA;in_EventsUpdated &lt;Integer&gt;.&#xA;in_EventsTotal &lt;Integer&gt;.&#xA;&#xA;Outputs:&#xA;io_TransactionItem &lt;QueueItem&gt;: Refreshed transaction.&#xA;io_TransactionNumber &lt;Integer&gt;: Incremented transaction number.&#xA;&#xA;Pre Condition:&#xA;io_TransactionItem is In Progress.&#xA;&#xA;Post Condition: NA" DisplayName="SetTransactionStatus" sap2010:WorkflowViewState.IdRef="Sequence_7">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="finishedItems" />
    </Sequence.Variables>
    <ui:MoveFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;Network Share Email Store&quot;) + &quot;\&quot; + Path.GetFileName(io_TransactionItem.SpecificContent(&quot;Response Filename&quot;).ToString)]" DisplayName="Move Response Email File" sap2010:WorkflowViewState.IdRef="MoveFile_3" Overwrite="False" Path="[io_TransactionItem.SpecificContent(&quot;Response Filename&quot;).ToString]" />
    <If Condition="[io_TransactionItem.SpecificContent.ContainsKey(&quot;Request Filename&quot;)]" DisplayName="If request is matched" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <ui:MoveFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;Network Share Email Store&quot;) + &quot;\&quot; + Path.GetFileName(io_TransactionItem.SpecificContent(&quot;Request Filename&quot;).ToString)]" DisplayName="Move Request Email File" sap2010:WorkflowViewState.IdRef="MoveFile_4" Overwrite="False" Path="[io_TransactionItem.SpecificContent(&quot;Request Filename&quot;).ToString]" />
      </If.Then>
    </If>
    <If Condition="[in_SystemError IsNot Nothing]" DisplayName="If system error thrown" sap2010:WorkflowViewState.IdRef="If_5">
      <If.Then>
        <Sequence DisplayName="Handle System Error" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="queueRetry" />
          </Sequence.Variables>
          <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" Details="[in_SystemError.ToString]" DisplayName="Set system error transaction status" ErrorType="Application" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_3" Reason="[in_SystemError.Message]" Status="Failed" TransactionItem="[io_TransactionItem]">
            <ui:SetTransactionStatus.Output>
              <scg:Dictionary x:TypeArguments="x:String, InArgument" />
            </ui:SetTransactionStatus.Output>
          </ui:SetTransactionStatus>
          <TryCatch DisplayName="Try catch - TakeScreenshot" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <TryCatch.Try>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TakeScreenshot workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\TakeScreenshot.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Folder">[in_Config("ExScreenshotsFolderPath").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Reference">[io_TransactionItem.Reference]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Warn" Message="[String.Format(in_Config(&quot;LogMessage TakeScreenshot&quot;), io_TransactionItem.Reference, exception.Message, exception.Source)]" />
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <TryCatch DisplayName="Try catch CloseAllApplications" sap2010:WorkflowViewState.IdRef="TryCatch_3">
            <TryCatch.Try>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Warn" Message="[String.Format(&quot;Applications failed to close normally. {0} at {1}&quot;, exception.Message, exception.Source)]" />
                    <TryCatch DisplayName="Try catch KillAllProcesses" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                      <TryCatch.Try>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <scg:Dictionary x:TypeArguments="x:String, Argument" />
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Warn" Message="[String.Format(&quot;KillAllProcesses failed. {0} at {1}&quot;, exception.Message, exception.Source)]" />
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </If.Then>
      <If.Else>
        <If Condition="[in_RuleException IsNot Nothing]" DisplayName="If rule exception thrown" sap2010:WorkflowViewState.IdRef="If_4">
          <If.Then>
            <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" Details="[in_RuleException.ToString]" DisplayName="Set rule exception transaction status" ErrorType="Business" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_2" Reason="[in_RuleException.Message]" Status="Failed" TransactionItem="[io_TransactionItem]">
              <ui:SetTransactionStatus.Output>
                <scg:Dictionary x:TypeArguments="x:String, InArgument" />
              </ui:SetTransactionStatus.Output>
            </ui:SetTransactionStatus>
          </If.Then>
          <If.Else>
            <ui:SetTransactionStatus ContinueOnError="{x:Null}" Reason="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Set successful transaction status" ErrorType="Application" Status="Successful" TransactionItem="[io_TransactionItem]">
              <ui:SetTransactionStatus.Output>
                <InArgument x:TypeArguments="x:Int32" x:Key="Projects Updated">[in_ProjectsUpdated]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="Projects Total">[in_ProjectsTotal]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="Grantors Updated">[in_GrantorsUpdated]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="Grantors Total">[in_GrantorsTotal]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="Lines Updated">[in_LinesUpdated]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="Lines Total">[in_LinesTotal]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="Events Updated">[in_EventsUpdated]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="Events Total">[in_EventsTotal]</InArgument>
              </ui:SetTransactionStatus.Output>
            </ui:SetTransactionStatus>
          </If.Else>
        </If>
      </If.Else>
    </If>
    <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" Top="{x:Null}" DisplayName="Get Finished Items" FilterStrategy="Equals" sap2010:WorkflowViewState.IdRef="GetQueueItems_1" QueueItemStates="All" QueueName="[io_TransactionItem.QueueName]" Reference="[io_TransactionItem.Reference]" Result="[finishedItems]" />
    <Assign DisplayName="Refresh transaction item" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="ui:QueueItem">[io_TransactionItem]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="ui:QueueItem">[finishedItems.First]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Increment transaction number" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[io_TransactionNumber]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[io_TransactionNumber+1]</InArgument>
      </Assign.Value>
    </Assign>
    <sads:DebugSymbol.Symbol>d1xDOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcRkFfQmlsbGluZ01pbGVzdG9uZVxGcmFtZXdvcmtcU2V0VHJhbnNhY3Rpb25TdGF0dXMueGFtbDxSA9EBDgIBAVYFVpkDAgFQVwVbCgIBS1wFvgEKAgEPvwEFvwGDAwIBC8ABBccBDgIBB8gBBc8BDgIBAlY5VtwBAgFSVsgCVpYDAgFRVxNXYwIBTFkJWZoDAgFNXBNcMwIBEF4JowEUAgEspgEJvAEOAgESvwHHAr8B5wICAQ6/AZwCvwG8AgIBDb8B7wK/AYADAgEMxQE0xQFJAgEKwgE1wgFJAgEIzQEvzQFHAgEFygEwygFGAgEDWT1Z3wECAU9ZygJZlwMCAU5iC2YlAgFEZwt6FgIBPHsLogEWAgEtpgEXpgE5AgETqAENrAEnAgEnrwENugEnAgEUYqACYroCAgFJYnpilQECAUdi2wJi8QICAUVpD24nAgE/dhN2iQICAT19D4EBJwIBOokBE54BHgIBLqgBowKoAb8CAgErqAF8qAGZAQIBKqgB4AKoAfYCAgEotQFNtQFeAgEltgFLtgFaAgEjtwFOtwFgAgEhuAFMuAFcAgEftAFOtAFgAgEdrwHyAa8BiAICARuxAVCxAWQCARmzAVCzAWQCAReyAU6yAWACARVsT2xtAgFDa0xrewIBQWnFAWnkAQIBQHaAAXaGAgIBPn3LAX3wAQIBO4oBFYoB+gECATaLARWdASACAS+KAYIBigH3AQIBN40BGZEBMQIBNJkBHZkB9AECATCNAdEBjQHyAQIBNZkBigGZAfEBAgEx</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="MoveFile_3" sap:VirtualizedContainerService.HintSize="711,22" />
      <sap2010:ViewStateData Id="MoveFile_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="711,208" />
      <sap2010:ViewStateData Id="SetTransactionStatus_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="418,314">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="440,569">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="222,328">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SetTransactionStatus_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="711,476" />
      <sap2010:ViewStateData Id="GetQueueItems_1" sap:VirtualizedContainerService.HintSize="711,22" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="711,60" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="711,60" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="733,1694">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SetTransactionStatus_1" sap:VirtualizedContainerService.HintSize="773,1774" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>