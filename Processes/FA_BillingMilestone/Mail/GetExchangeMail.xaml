<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetExchangeMail" this:GetExchangeMail.in_MailboxPath="Inbox"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mewd="clr-namespace:Microsoft.Exchange.WebServices.Data;assembly=Microsoft.Exchange.WebServices"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_CredentialsAsset" Type="InArgument(x:String)" />
    <x:Property Name="in_ServerName" Type="InArgument(x:String)" />
    <x:Property Name="out_Messages" Type="OutArgument(scg:List(snm:MailMessage))" />
    <x:Property Name="in_Number" Type="InArgument(x:Int32)" />
    <x:Property Name="in_MailboxPath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>InitExchange_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>Microsoft.Exchange.WebServices.Data</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>Microsoft.Exchange.WebServices</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: Checks if the mailbox path is accessible by the user and returns a number or 1 email message.&#xA;&#xA;Inputs:&#xA;in_CredentialsAsset (String): Orchestrator credentials asset.&#xA;in_ServerName (String): Exchange URL.&#xA;in_MailboxPath (String): Path to a shared mailbox folder or subfolder of the users mailbox.&#xA;in_Number (Integer) [optional]: If not set then get the first email.&#xA;&#xA;Outputs:&#xA;out_Messages (List&lt;MailMessage&gt;): List of mail messages from the mailbox folder.&#xA;&#xA;Pre Condition: NA.&#xA;&#xA;Post Condition:&#xA;Exchange server is reachable.&#xA;Username and password are correct.&#xA;If shared mailbox then email exists.&#xA;If subfolder then path is valid." DisplayName="Get Exchange Mail" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="password" />
      <Variable x:TypeArguments="x:String" Name="username" />
      <Variable x:TypeArguments="x:String" Default="[Nothing]" Name="mailbox" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="parts" />
      <Variable x:TypeArguments="mewd:FolderId" Name="folder" />
    </Sequence.Variables>
    <If Condition="[in_Number = 0]" DisplayName="If number not set" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Assign DisplayName="Assign one email" sap2010:WorkflowViewState.IdRef="Assign_6">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[in_Number]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">1</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
    </If>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetAppCredentials workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\GetAppCredentials.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_Domain" />
        <InArgument x:TypeArguments="x:String" x:Key="in_Host">uq.edu.au</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Credential">[in_CredentialsAsset]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Username">[username]</OutArgument>
        <OutArgument x:TypeArguments="ss:SecureString" x:Key="out_Password" />
        <OutArgument x:TypeArguments="x:String" x:Key="out_Plaintext">[password]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="Log App Initialization message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Start GetExchangeMail.xaml, as &quot; + username + &quot; connecting to &quot; + in_ServerName]" />
    <Assign DisplayName="Assign mailbox folder path parts" sap2010:WorkflowViewState.IdRef="Assign_17">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[parts]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[in_MailboxPath.Split({"\"c}, StringSplitOptions.RemoveEmptyEntries).ToList]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[parts.First.Contains(&quot;@&quot;)]" DisplayName="If shared mailbox" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
          <Sequence.Variables>
            <Variable x:TypeArguments="ui:GenericValue" Name="index" />
          </Sequence.Variables>
          <Assign DisplayName="Assign shared mailbox" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[mailbox]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[parts.First]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign mail folder" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(x:String)">[parts]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(x:String)">[parts.Skip(1).ToList]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
    </If>
    <ui:LogMessage DisplayName="Log App Initialization message" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info" Message="[&quot;Checking out '&quot; + If(mailbox Is Nothing, &quot;My Mailbox&quot;, mailbox) + &quot;' looking for '&quot; + String.Join(&quot; &gt; &quot;, parts) + &quot;'&quot;]" />
    <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence sap2010:Annotation.AnnotationText="Iteratively checks if all folders are accessible, eg. Inbox &gt; Subfolder &gt; etc..." DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <If Condition="[parts.First = &quot;Inbox&quot;]" DisplayName="If starts with inbox" sap2010:WorkflowViewState.IdRef="If_6">
            <If.Then>
              <Assign DisplayName="Assign inbox" sap2010:WorkflowViewState.IdRef="Assign_14">
                <Assign.To>
                  <OutArgument x:TypeArguments="mewd:FolderId">[folder]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="mewd:FolderId">[New FolderId(WellKnownFolderName.Inbox, mailbox)]</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
                <Assign DisplayName="Assign non inbox" sap2010:WorkflowViewState.IdRef="Assign_15">
                  <Assign.To>
                    <OutArgument x:TypeArguments="mewd:FolderId">[folder]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="mewd:FolderId">[New FolderId(WellKnownFolderName.MsgFolderRoot, mailbox)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign root folder" sap2010:WorkflowViewState.IdRef="Assign_19">
                  <Assign.To>
                    <OutArgument x:TypeArguments="scg:List(x:String)">[parts]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="scg:List(x:String)">[parts.Prepend("").ToList]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
          <If Condition="[parts.Count &gt; 1]" DisplayName="If within subfolders" sap2010:WorkflowViewState.IdRef="If_7">
            <If.Then>
              <ui:ExchangeScope Domain="{x:Null}" ExchangeService="{x:Null}" ExistingExchangeService="{x:Null}" Server="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Exchange Scope" EmailAutodiscover="[username]" ExchangeVersion="Exchange2007_SP1" sap2010:WorkflowViewState.IdRef="ExchangeScope_2" Password="[password]" User="[username]">
                <ui:ExchangeScope.Body>
                  <ActivityAction x:TypeArguments="mewd:ExchangeService">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="mewd:ExchangeService" Name="ExchangeConnection" />
                    </ActivityAction.Argument>
                    <While DisplayName="While more folders to check" sap2010:WorkflowViewState.IdRef="While_2">
                      <While.Variables>
                        <Variable x:TypeArguments="x:Int32" Default="1" Name="i" />
                      </While.Variables>
                      <While.Condition>[i &lt; parts.Count]</While.Condition>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="mewd:FindFoldersResults" Name="subfolders" />
                        </Sequence.Variables>
                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Info" Message="[&quot;Folder ID: &quot; + folder.UniqueId]" />
                        <Assign DisplayName="Assign subfolders" sap2010:WorkflowViewState.IdRef="Assign_16">
                          <Assign.To>
                            <OutArgument x:TypeArguments="mewd:FindFoldersResults">[subfolders]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="mewd:FindFoldersResults">[ExchangeConnection.FindFolders(folder, New FolderView(10))]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Trace" Message="[parts(i - 1) + &quot; contains &quot; + String.Join(&quot;, &quot;, subfolders.Select(function(f) f.DisplayName))]" />
                        <If Condition="[subfolders.Any(Function(f) f.DisplayName = parts(i))]" DisplayName="If subfolder found" sap2010:WorkflowViewState.IdRef="If_4">
                          <If.Then>
                            <Assign DisplayName="Assign next folder ID" sap2010:WorkflowViewState.IdRef="Assign_13">
                              <Assign.To>
                                <OutArgument x:TypeArguments="mewd:FolderId">[folder]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="mewd:FolderId">[subfolders.Single(Function(f) f.DisplayName = parts(i)).Id]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Throw DisplayName="Throw subfolder not found" Exception="[New Exception(&quot;Couldn't find &quot; + parts(i))]" sap2010:WorkflowViewState.IdRef="Throw_2" />
                          </If.Else>
                        </If>
                        <Assign DisplayName="Increment i" sap2010:WorkflowViewState.IdRef="Assign_18">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[i]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[i + 1]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </While>
                  </ActivityAction>
                </ui:ExchangeScope.Body>
              </ui:ExchangeScope>
            </If.Then>
          </If>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <ui:GetExchangeMailMessages Domain="{x:Null}" EmailAutodiscover="{x:Null}" TimeoutMS="{x:Null}" CustomFolder="[String.Join(&quot;\&quot;, parts)]" DisplayName="Get Exchange Mail Messages" ExchangeVersion="Exchange2007_SP1" GetAttachements="True" sap2010:WorkflowViewState.IdRef="GetExchangeMailMessages_6" IsBodyHtml="True" MailFolder="Calendar" MarkAsRead="False" Messages="[out_Messages]" OnlyUnreadMessages="False" Password="[password]" Server="[in_ServerName]" SharedMailbox="[mailbox]" Top="[in_Number]" User="[username]" />
    <Assign DisplayName="Reset password" sap2010:WorkflowViewState.IdRef="Assign_20">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[password]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;End GetExchangeMail.xaml, got &quot; &amp; out_Messages.Count &amp; &quot; from &quot; + in_MailboxPath]" />
    <sads:DebugSymbol.Symbol>d2pDOlxVc2Vyc1xzcGFtaXNoXERvY3VtZW50c1xVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcRkFfQmlsbGluZ01pbGVzdG9uZVxNYWlsXEdldEV4Y2hhbmdlTWFpbC54YW1sLAFpAW8BAlQD/wEOAgEBWDRYPwIBAlwFZwoCATxoBXEdAgEzcgVy8AECAS9zBXoOAgErewWTAQoCASCUAQWUAbgCAgEblQEF8wEVAgEa9AEF9AGWBAIBC/UBBfwBDgIBB/0BBf0B5gECAQNcE1wkAgE9XgllEgIBP2xGbFsCATptRm1QAgE4a0BrSQIBN29Hb1ECATVovgFo4AECATRyhQFy7QECATB4OniGAQIBLnU7dUICASx7E3s6AgEhfQmRARQCASKUAYYBlAG1AgIBHPQB9AP0AYEEAgEY9AFy9AGXAQIBFvQBhwT0AZMEAgEU9AHkA/QB7wMCARL0AfsC9AGLAwIBEPQBxAP0AdUDAgEO9AGwA/QBvAMCAQz6ATD6ATkCAQr3ATH3ATsCAQj9AXL9AeMBAgEEYzNjNAIBQmA0YD8CAUCBAQuIARQCASeJAQuQARQCASOGATaGAUMCASqDATeDAUACASiOAUCOAVYCASaLAUGLAUgCASQ=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,432">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_21" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_20" sap:VirtualizedContainerService.HintSize="467,91" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="467,60" />
      <sap2010:ViewStateData Id="LogMessage_19" sap:VirtualizedContainerService.HintSize="467,91" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="467,207" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="467,60" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="489,793">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="515,950" />
      <sap2010:ViewStateData Id="ExchangeScope_2" sap:VirtualizedContainerService.HintSize="529,1036">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="222,323">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="464,401" />
      <sap2010:ViewStateData Id="GetExchangeMailMessages_6" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="486,2339">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InitExchange_1" sap:VirtualizedContainerService.HintSize="526,2419" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>