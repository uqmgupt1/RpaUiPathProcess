<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" this:Main.DispatchJob="False"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="DispatchJob" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Main2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.Mail</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <StateMachine sap2010:Annotation.AnnotationText="-- ReFrameWork - Robotic Enterprise Framework --&#xA;-- TEMPLATE--&#xA;&#xA;Description:&#xA;Will run the intialization stage when the job starts or after any system error is thrown.&#xA;If the process is on it's first run and the date is nearest to the first of the month then the dispatch stage will be executed.&#xA;&#xA;If the dispatch stage finishes successfully or is skipped then new transaction data will be retrieved and processed until all emails have been processed, then the end process stage is executed.&#xA;&#xA;Note: All dispatch transactions are set to In Progress during Init, refreshed during Dispatch and Postponed during End Process." DisplayName="General Business Process" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <StateMachine.InitialState>
      <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Read Config, Init Applications set Dispatched Transactions to In Progress" DisplayName="Init" sap2010:WorkflowViewState.IdRef="State_2">
        <State.Entry>
          <TryCatch DisplayName="Catch intialization exceptions" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <TryCatch.Try>
              <Sequence DisplayName="Init State" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <TryCatch DisplayName="Try Catch - Get operating environment" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                  <TryCatch.Try>
                    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="OperatingEnvironment" DisplayName="Get Op Env Asset" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                      <ui:GetRobotAsset.Value>
                        <OutArgument x:TypeArguments="x:String">[OperatingEnvironment]</OutArgument>
                      </ui:GetRobotAsset.Value>
                    </ui:GetRobotAsset>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Throw DisplayName="Throw mode error" Exception="[New Exception(&quot;0&quot; + vbTab + &quot;Mode Asset Missing&quot; + vbNewLine + &quot;I couldn't find my operation mode asset at OperatingEnvironment&quot;, exception)]" sap2010:WorkflowViewState.IdRef="Throw_2" />
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
                <TryCatch DisplayName="Try Catch - Load configuration settings" sap2010:WorkflowViewState.IdRef="TryCatch_18">
                  <TryCatch.Try>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="s:DateTime" x:Key="in_StartTime">[StartTime]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_OperatingEnvironment">[OperatingEnvironment]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
                        <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings","Constants", "Messages"}]</InArgument>
                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_Config">[Config]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_21">
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Throw DisplayName="Throw config error" Exception="[New Exception(&quot;0&quot; + vbTab + &quot;Config Not Initialised&quot; + vbNewLine + &quot;I couldn't load my settings: &quot; + exception.Message + &quot; at &quot; + exception.Source, exception)]" sap2010:WorkflowViewState.IdRef="Throw_4" />
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
                <TryCatch DisplayName="Try Catch - Kill any residual processes" sap2010:WorkflowViewState.IdRef="TryCatch_19">
                  <TryCatch.Try>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_22">
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Throw DisplayName="Throw kill error" Exception="[New ApplicationException(String.Format(Config(&quot;SystemError KillProcesses&quot;), exception.Message, exception.Source), exception)]" sap2010:WorkflowViewState.IdRef="Throw_5" />
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitiAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_Config">[Config]</InOutArgument>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_DispatchJob">[DispatchJob]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_69">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="ui:QueueItem" Name="initItem" />
                      <Variable x:TypeArguments="ui:QueueItem" Name="initializationError" />
                    </Sequence.Variables>
                    <Assign DisplayName="Assign excepton to SystemError" sap2010:WorkflowViewState.IdRef="Assign_14">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <TryCatch DisplayName="Try catch - TakeScreenshot" sap2010:WorkflowViewState.IdRef="TryCatch_20">
                      <TryCatch.Try>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TakeScreenshot workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" UnSafe="False" WorkflowFileName="Framework\TakeScreenshot.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Folder">Exceptions_Screenshots</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Reference">Initialization</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_23">
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_55" Level="Warn" Message="[String.Format(&quot;Couldn't take screenshot for {0} due to: {1} at {2}&quot;, &quot;Initialization&quot;, exception.Message, exception.Source)]" />
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitException workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="ExceptionQueueItem.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[exception]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_StageReference">Initialization</InArgument>
                        <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_FailedItem">[initializationError]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <AddToCollection x:TypeArguments="ui:QueueItem" Collection="[TransactionsProcessed]" DisplayName="Add To Transactions" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[initializationError]" />
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </State.Entry>
        <State.Exit>
          <If Condition="[SystemError Is Nothing]" DisplayName="If init ran successfully" sap2010:WorkflowViewState.IdRef="If_18">
            <If.Then>
              <TryCatch DisplayName="Try Catch - Activate transactions" sap2010:WorkflowViewState.IdRef="TryCatch_15">
                <TryCatch.Try>
                  <DoWhile DisplayName="Do While transactions to set in progress" sap2010:WorkflowViewState.IdRef="DoWhile_3">
                    <DoWhile.Variables>
                      <Variable x:TypeArguments="ui:QueueItem" Name="transaction" />
                    </DoWhile.Variables>
                    <DoWhile.Condition>[transaction IsNot Nothing]</DoWhile.Condition>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_98">
                      <ui:GetQueueItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get Transaction Item" sap2010:WorkflowViewState.IdRef="GetQueueItem_2" QueueType="[Config(&quot;DispatchQueue&quot;)]" TransactionItem="[transaction]" />
                      <If Condition="[transaction IsNot Nothing]" DisplayName="If any transactions returned" sap2010:WorkflowViewState.IdRef="If_27">
                        <If.Then>
                          <AddToCollection x:TypeArguments="ui:QueueItem" Collection="[DispatchedItems]" DisplayName="Add to dispatched items" sap2010:WorkflowViewState.IdRef="AddToCollection`1_13" Item="[transaction]" />
                        </If.Then>
                      </If>
                    </Sequence>
                  </DoWhile>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_18">
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_76">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="ui:QueueItem" Name="activateError" />
                        </Sequence.Variables>
                        <Assign DisplayName="Assign formatted exception" sap2010:WorkflowViewState.IdRef="Assign_44">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:ApplicationException">[New ApplicationException(String.Format(Config("SystemError ActivateDispatched"), exception.Message, exception.Source), exception)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ActivateError workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="ExceptionQueueItem.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[SystemError]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StageReference">Initialization</InArgument>
                            <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_FailedItem">[activateError]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <AddToCollection x:TypeArguments="ui:QueueItem" Collection="[TransactionsProcessed]" DisplayName="Add To Transactions" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="[activateError]" />
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
                <TryCatch.Finally>
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_63" Level="Info" Message="[&quot;Got &quot; &amp; DispatchedItems.Count &amp; &quot; active transactions&quot;]" />
                </TryCatch.Finally>
              </TryCatch>
            </If.Then>
          </If>
        </State.Exit>
        <State.Transitions>
          <Transition DisplayName="Dispatch Run" sap2010:WorkflowViewState.IdRef="Transition_2">
            <Transition.To>
              <State x:Name="__ReferenceID4" sap2010:Annotation.AnnotationText="Run the Query Report and Dispatch Emails, refresh Dispatched Transactions" DisplayName="Dispatch Approvals" sap2010:WorkflowViewState.IdRef="State_5">
                <State.Entry>
                  <TryCatch DisplayName="Try Dispatch Approvals" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                    <TryCatch.Try>
                      <Sequence DisplayName="Dispatch approval requests" sap2010:WorkflowViewState.IdRef="Sequence_67">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="scg:List(ui:QueueItem)" Name="staleTransactions" />
                          <Variable x:TypeArguments="scg:List(ui:QueueItem)" Name="sentTransactions" />
                        </Sequence.Variables>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Dispatch workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Dispatch.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[Config]</InArgument>
                            <InOutArgument x:TypeArguments="scg:List(ui:QueueItem)" x:Key="io_DispatchedItems">[DispatchedItems]</InOutArgument>
                            <OutArgument x:TypeArguments="scg:List(ui:QueueItem)" x:Key="out_SentTransactions">[sentTransactions]</OutArgument>
                            <OutArgument x:TypeArguments="scg:List(ui:QueueItem)" x:Key="out_StaleTransactions">[staleTransactions]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <If Condition="[sentTransactions.Count &gt; 0]" DisplayName="If any sent transactions" sap2010:WorkflowViewState.IdRef="If_21">
                          <If.Then>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_83">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="references" />
                              </Sequence.Variables>
                              <Assign DisplayName="Assign sent references" sap2010:WorkflowViewState.IdRef="Assign_61">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">[references]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:String)">[sentTransactions.Select(Function(qi) qi.Reference)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_46" Level="Info" Message="[String.Format(&quot;Sent {0} new transactions {1}&quot;, sentTransactions.Count, String.Join(&quot;, &quot;, If(references.Count &lt; 10, references, references.Take(10).Append(&quot;...&quot;))))]" />
                              <Assign DisplayName="Assign sent transactions" sap2010:WorkflowViewState.IdRef="Assign_32">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="scg:List(ui:QueueItem)">[TransactionsProcessed]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="scg:List(ui:QueueItem)">[TransactionsProcessed.Concat(sentTransactions).ToList]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                        </If>
                        <If Condition="[staleTransactions.Count &gt; 0]" DisplayName="If any stale transactions" sap2010:WorkflowViewState.IdRef="If_17">
                          <If.Then>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_84">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="references" />
                              </Sequence.Variables>
                              <Assign DisplayName="Assign stale references" sap2010:WorkflowViewState.IdRef="Assign_62">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">[references]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:String)">[staleTransactions.Select(Function(qi) qi.Reference)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_60" Level="Info" Message="[String.Format(&quot;Got {0} expired transactions {1}&quot;, staleTransactions.Count, String.Join(&quot;, &quot;, If(references.Count &lt; 10, references, references.Take(10).Append(&quot;...&quot;))))]" />
                              <Assign DisplayName="Assign stale transactions" sap2010:WorkflowViewState.IdRef="Assign_39">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="scg:List(ui:QueueItem)">[TransactionsProcessed]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="scg:List(ui:QueueItem)">[TransactionsProcessed.Concat(staleTransactions).ToList]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_65">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="ui:QueueItem" Name="dispatchItem" />
                            </Sequence.Variables>
                            <Assign DisplayName="Assign excepton to SystemError" sap2010:WorkflowViewState.IdRef="Assign_53">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <TryCatch DisplayName="Try catch - TakeScreenshot" sap2010:WorkflowViewState.IdRef="TryCatch_22">
                              <TryCatch.Try>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TakeScreenshot workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" UnSafe="False" WorkflowFileName="Framework\TakeScreenshot.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Folder">Exceptions_Screenshots</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Reference">Dispatch</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_25">
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_57" Level="Warn" Message="[String.Format(&quot;Couldn't take screenshot for {0} due to: {1} at {2}&quot;, &quot;Dispatch&quot;, exception.Message, exception.Source)]" />
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                            <TryCatch DisplayName="TryCatch - Close and clean up" sap2010:WorkflowViewState.IdRef="TryCatch_24">
                              <TryCatch.Try>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_38" Timeout="00:01:00" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_27">
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_91">
                                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_58" Level="Warn" Message="[String.Format(&quot;Applications failed to close normally. {0} at {1}&quot;, exception.Message, exception.Source)]" />
                                      <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_23">
                                        <TryCatch.Try>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_26">
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_90">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="ui:QueueItem" Name="cleanUpException" />
                                                </Sequence.Variables>
                                                <Assign DisplayName="Assign formatted exception" sap2010:WorkflowViewState.IdRef="Assign_54">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="s:Exception">[exception]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="s:ApplicationException">[New ApplicationException(String.Format("KillAllProcesses failed. {0} at {1}", exception.Message, exception.Source), exception)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_59" Level="Warn" Message="[exception.Message]" />
                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Postpone workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_40" UnSafe="False" WorkflowFileName="ExceptionQueueItem.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[exception]</InArgument>
                                                    <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_FailedItem">[cleanUpException]</OutArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_StageReference">End Job</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <AddToCollection x:TypeArguments="ui:QueueItem" Collection="[TransactionsProcessed]" DisplayName="Add To Transactions" sap2010:WorkflowViewState.IdRef="AddToCollection`1_8" Item="[cleanUpException]" />
                                              </Sequence>
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </Sequence>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke DispatchException workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="ExceptionQueueItem.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[SystemError]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_StageReference">Dispatch Approvals</InArgument>
                                <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_FailedItem">[dispatchItem]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <AddToCollection x:TypeArguments="ui:QueueItem" Collection="[TransactionsProcessed]" DisplayName="Add To Transactions" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[dispatchItem]" />
                          </Sequence>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </State.Entry>
                <State.Transitions>
                  <Transition DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_16">
                    <Transition.To>
                      <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Close all applications, Postpone Dispatched Transactions and Send Job Report" DisplayName="End Process" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
                        <State.Entry>
                          <Sequence DisplayName="Clean up and send reports" sap2010:WorkflowViewState.IdRef="Sequence_73">
                            <TryCatch DisplayName="TryCatch - Close and clean up" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                              <TryCatch.Try>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" Timeout="00:01:00" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
                                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Warn" Message="[String.Format(&quot;Applications failed to close normally. {0} at {1}&quot;, exception.Message, exception.Source)]" />
                                      <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_13">
                                        <TryCatch.Try>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_16">
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_78">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="ui:QueueItem" Name="cleanUpException" />
                                                </Sequence.Variables>
                                                <Assign DisplayName="Assign formatted exception" sap2010:WorkflowViewState.IdRef="Assign_45">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="s:Exception">[exception]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="s:ApplicationException">[New ApplicationException(String.Format("KillAllProcesses failed. {0} at {1}", exception.Message, exception.Source), exception)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_40" Level="Warn" Message="[exception.Message]" />
                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Postpone workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="ExceptionQueueItem.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[exception]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_StageReference">End Job</InArgument>
                                                    <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_FailedItem">[cleanUpException]</OutArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <AddToCollection x:TypeArguments="ui:QueueItem" Collection="[TransactionsProcessed]" DisplayName="Add To Transactions" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6" Item="[cleanUpException]" />
                                              </Sequence>
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </Sequence>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                            <TryCatch DisplayName="Try Catch - Postpone transactions" sap2010:WorkflowViewState.IdRef="TryCatch_14">
                              <TryCatch.Try>
                                <Sequence DisplayName="Postpone all in progress transactions" sap2010:WorkflowViewState.IdRef="Sequence_74">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="queueName" />
                                  </Sequence.Variables>
                                  <If Condition="[DispatchedItems.Count &gt; 0]" DisplayName="If any dispatched items" sap2010:WorkflowViewState.IdRef="If_23">
                                    <If.Then>
                                      <Assign DisplayName="Assign queue name" sap2010:WorkflowViewState.IdRef="Assign_58">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[queueName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[DispatchedItems.First.QueueName]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                    <If.Else>
                                      <If Condition="[Config IsNot Nothing]" DisplayName="If config is set" sap2010:WorkflowViewState.IdRef="If_25">
                                        <If.Then>
                                          <Assign DisplayName="Assign queue name" sap2010:WorkflowViewState.IdRef="Assign_59">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[queueName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[Config("DispatchQueue")]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                        <If.Else>
                                          <Assign DisplayName="Assign queue name" sap2010:WorkflowViewState.IdRef="Assign_60">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[queueName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">["FA_BillingMilestone_Dispatch"]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Else>
                                      </If>
                                    </If.Else>
                                  </If>
                                  <DoWhile DisplayName="Do While transactions to postpone" sap2010:WorkflowViewState.IdRef="DoWhile_2">
                                    <DoWhile.Variables>
                                      <Variable x:TypeArguments="ui:QueueItem" Name="transaction" />
                                      <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="queueItems" />
                                    </DoWhile.Variables>
                                    <DoWhile.Condition>[queueItems.Count &gt; 0]</DoWhile.Condition>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_97">
                                      <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" Top="{x:Null}" DisplayName="Get In Progress Items" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_6" QueueItemStates="InProgress" QueueName="[queueName]" Result="[queueItems]" />
                                      <ui:ForEach x:TypeArguments="ui:QueueItem" CurrentIndex="{x:Null}" DisplayName="For Each in progress transaction" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[queueItems]">
                                        <ui:ForEach.Body>
                                          <ActivityAction x:TypeArguments="ui:QueueItem">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="ui:QueueItem" Name="transaction" />
                                            </ActivityAction.Argument>
                                            <ui:PostponeTransactionItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DeferDate="[Now]" DisplayName="Postpone Transaction Item" sap2010:WorkflowViewState.IdRef="PostponeTransactionItem_2" TransactionItem="[transaction]" />
                                          </ActivityAction>
                                        </ui:ForEach.Body>
                                      </ui:ForEach>
                                    </Sequence>
                                  </DoWhile>
                                </Sequence>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_17">
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_75">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="ui:QueueItem" Name="postponeError" />
                                      </Sequence.Variables>
                                      <Assign DisplayName="Assign formatted exception" sap2010:WorkflowViewState.IdRef="Assign_47">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:Exception">[exception]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:ApplicationException">[New ApplicationException("0" + vbTab + "System Error" + vbNewLine + "Failed to postpone dispatched transactions. " + exception.Message + " at " + exception.Source, exception)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Postpone workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="ExceptionQueueItem.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[exception]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_StageReference">End Job</InArgument>
                                          <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_FailedItem">[postponeError]</OutArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <AddToCollection x:TypeArguments="ui:QueueItem" Collection="[TransactionsProcessed]" DisplayName="Add To Transactions" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[postponeError]" />
                                    </Sequence>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                            <TryCatch DisplayName="Try Catch - Send job report" sap2010:WorkflowViewState.IdRef="TryCatch_16">
                              <TryCatch.Try>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendReport workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="Mail\SendReport.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="scg:List(ui:QueueItem)" x:Key="in_TransactionItems">[TransactionsProcessed]</InArgument>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[Config]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName" />
                                    <InArgument x:TypeArguments="x:String" x:Key="in_HtmlReport" />
                                    <InArgument x:TypeArguments="x:String" x:Key="in_HtmlLogo" />
                                    <InArgument x:TypeArguments="x:String" x:Key="in_EmailRecipients" />
                                    <InArgument x:TypeArguments="x:String" x:Key="in_TransactionItem" />
                                    <InArgument x:TypeArguments="x:String" x:Key="in_SendEmailOn" />
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_19">
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_77">
                                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_43" Level="Info" Message="[&quot;Failed to send end of job report. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                      <If Condition="[SystemError Is Nothing]" DisplayName="If system error not set" sap2010:WorkflowViewState.IdRef="If_19">
                                        <If.Then>
                                          <Assign DisplayName="Assign send report system error" sap2010:WorkflowViewState.IdRef="Assign_35">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                        <If.Else>
                                          <Assign DisplayName="Assign updated system error" sap2010:WorkflowViewState.IdRef="Assign_36">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="s:Exception">[New Exception(exception.Message + " and " + SystemError.Message, SystemError)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                            <If Condition="[SystemError IsNot Nothing]" DisplayName="If active system error" sap2010:WorkflowViewState.IdRef="If_12">
                              <If.Then>
                                <Throw DisplayName="Rethrow system error" Exception="[SystemError]" sap2010:WorkflowViewState.IdRef="Throw_3" />
                              </If.Then>
                            </If>
                          </Sequence>
                        </State.Entry>
                      </State>
                    </Transition.To>
                    <Transition.Action>
                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_47" Level="Info" Message="[String.Format(Config(&quot;LogMessage StartProcess&quot;), &quot;dispatch&quot;)]" />
                    </Transition.Action>
                    <Transition.Condition>[SystemError Is Nothing]</Transition.Condition>
                  </Transition>
                  <Transition DisplayName="System Error" sap2010:WorkflowViewState.IdRef="Transition_15" To="{x:Reference __ReferenceID0}">
                    <Transition.Action>
                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_62" Level="Error" Message="[String.Format(Config(&quot;LogMessage SystemError&quot;), &quot;dispatch&quot;, SystemError.Message, SystemError.Source)]" />
                    </Transition.Action>
                    <Transition.Condition>[SystemError IsNot Nothing]</Transition.Condition>
                  </Transition>
                </State.Transitions>
              </State>
            </Transition.To>
            <Transition.Action>
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_61" Level="Info" Message="[String.Format(Config(&quot;LogMessage StartDispatch&quot;), Today)]" />
            </Transition.Action>
            <Transition.Condition>[SystemError Is Nothing And DispatchJob]</Transition.Condition>
          </Transition>
          <Transition DisplayName="System Error" sap2010:WorkflowViewState.IdRef="Transition_3" To="{x:Reference __ReferenceID0}">
            <Transition.Action>
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[String.Format(&quot;System error at initialization: {0} at {1}&quot;, SystemError.Message, SystemError.Source)]" />
            </Transition.Action>
            <Transition.Condition>[SystemError IsNot Nothing]</Transition.Condition>
          </Transition>
          <Transition DisplayName="Process Run" sap2010:WorkflowViewState.IdRef="Transition_9">
            <Transition.To>
              <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="Get next transaction message from Operating Environment's mailbox folder" DisplayName="Get Transaction Data" sap2010:WorkflowViewState.IdRef="State_4">
                <State.Entry>
                  <Sequence sap2010:Annotation.AnnotationText="Data retrieval mechanism. The TransactionNumber variable holds the current transaction number. Incrementing this number means getting the next transaction. For a robot retry, the number is not increased, in case of application exception, until the max retry number.&#xA;TransactionItem type needs to be changed accordingly." DisplayName="Retrieve Data" sap2010:WorkflowViewState.IdRef="Sequence_1">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
                    </Sequence.Variables>
                    <ui:ShouldStop DisplayName="Check Stop Signal" sap2010:WorkflowViewState.IdRef="ShouldStop_1" Result="[ShouldStop]" />
                    <If Condition="[ShouldStop]" DisplayName="Should Stop or Get Next" sap2010:WorkflowViewState.IdRef="If_8">
                      <If.Then>
                        <Sequence DisplayName="Orchestrator stop requested" sap2010:WorkflowViewState.IdRef="Sequence_21">
                          <ui:LogMessage DisplayName="Log Stop message" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Warn" Message="[&quot;Stop process requested&quot;]" />
                          <Assign DisplayName="End Process" sap2010:WorkflowViewState.IdRef="Assign_15">
                            <Assign.To>
                              <OutArgument x:TypeArguments="snm:MailMessage">[TransactionMessage]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="snm:MailMessage">[Nothing]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <TryCatch DisplayName="Try GetTransactionData" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                          <TryCatch.Try>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionData workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Framework\GetTransactionData.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[Config]</InArgument>
                                <OutArgument x:TypeArguments="snm:MailMessage" x:Key="out_TransactionMessage">[TransactionMessage]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionSubject">[TransactionSubject]</OutArgument>
                                <OutArgument x:TypeArguments="s:DateTime" x:Key="out_TransactionReceived">[TransactionReceived]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionFilename">[TransactionFilename]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Log exception message and End process" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                  <Assign DisplayName="Assign system error" sap2010:WorkflowViewState.IdRef="Assign_52">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:ApplicationException">[New ApplicationException(String.Format(Config("SystemError GetMailExchange"), TransactionNumber, exception.Message, exception.Source), exception)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Error" Message="[SystemError.Message]" />
                                  <Assign DisplayName="End Process" sap2010:WorkflowViewState.IdRef="Assign_16">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="snm:MailMessage">[TransactionMessage]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="snm:MailMessage">[Nothing]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </If.Else>
                    </If>
                  </Sequence>
                </State.Entry>
                <State.Transitions>
                  <Transition DisplayName="New Message" sap2010:WorkflowViewState.IdRef="Transition_14">
                    <Transition.To>
                      <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="A transaction either succeeds or fails with a Business Rule Exception or a System Error. For System Error, it can be retried." DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="State_3">
                        <State.Entry>
                          <TryCatch DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                            <TryCatch.Variables>
                              <Variable x:TypeArguments="ui:QueueItem" Name="transactionItem" />
                            </TryCatch.Variables>
                            <TryCatch.Try>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_82">
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Matching workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="Matching.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[Config]</InArgument>
                                    <InOutArgument x:TypeArguments="scg:List(ui:QueueItem)" x:Key="io_DispatchedTransactions">[DispatchedItems]</InOutArgument>
                                    <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_TransactionMessage">[TransactionMessage]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_TransactionSubject">[TransactionSubject]</InArgument>
                                    <InArgument x:TypeArguments="s:DateTime" x:Key="in_TransactionReceived">[TransactionReceived]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_TransactionFilename">[TransactionFilename]</InArgument>
                                    <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_TransactionItem">[transactionItem]</OutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ProcessTransaction workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Process.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[Config]</InArgument>
                                    <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_TransactionMessage">[TransactionMessage]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_TransactionSubject">[TransactionSubject]</InArgument>
                                    <InArgument x:TypeArguments="s:DateTime" x:Key="in_TransactionReceived">[TransactionReceived]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_TransactionFilename">[TransactionFilename]</InArgument>
                                    <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transactionItem]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_81">
                                    <Assign DisplayName="Set transaction status to Rule Exception" sap2010:WorkflowViewState.IdRef="Assign_3">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="ui:BusinessRuleException">[RuleException]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <If Condition="[transactionItem Is Nothing]" DisplayName="If transaction item not declared" sap2010:WorkflowViewState.IdRef="If_20">
                                      <If.Then>
                                        <ui:AddTransactionItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Transaction Item" sap2010:WorkflowViewState.IdRef="AddTransactionItem_1" QueueType="[Config(&quot;UpdateQueue&quot;)]" Reference="Unmatched email_" TransactionItem="[transactionItem]">
                                          <ui:AddTransactionItem.TransactionInformation>
                                            <InArgument x:TypeArguments="x:String" x:Key="Response Subject">[TransactionSubject]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="Response Received">[TransactionReceived.ToString("dd/MM/yyyy")]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="Response Filename">[TransactionFilename]</InArgument>
                                          </ui:AddTransactionItem.TransactionInformation>
                                        </ui:AddTransactionItem>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Assign DisplayName="Set transaction status to SystemError" sap2010:WorkflowViewState.IdRef="Assign_4">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                            <TryCatch.Finally>
                              <TryCatch DisplayName="Set the Transaction Status and go to next Transaction" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                                <TryCatch.Try>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_95">
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[Config]</InArgument>
                                        <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_RuleException">[RuleException]</InArgument>
                                        <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[SystemError]</InArgument>
                                        <InOutArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionItem">[transactionItem]</InOutArgument>
                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <AddToCollection x:TypeArguments="ui:QueueItem" Collection="[TransactionsProcessed]" DisplayName="Add To Transactions" sap2010:WorkflowViewState.IdRef="AddToCollection`1_11" Item="[transactionItem]" />
                                  </Sequence>
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                      </ActivityAction.Argument>
                                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Error" Message="[String.Format(Config(&quot;LogMessage SetStatusError&quot;), TransactionNumber, exception.Message, exception.Source)]" />
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                            </TryCatch.Finally>
                          </TryCatch>
                        </State.Entry>
                        <State.Transitions>
                          <Transition sap2010:Annotation.AnnotationText="No need for any action here, in case of success simply go to next transaction" DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_5" To="{x:Reference __ReferenceID1}">
                            <Transition.Action>
                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_53" Level="Info" Message="[String.Format(Config(&quot;LogMessage StartProcess&quot;), &quot;process&quot;)]" />
                            </Transition.Action>
                            <Transition.Condition>[SystemError Is Nothing And RuleException is Nothing]</Transition.Condition>
                          </Transition>
                          <Transition DisplayName="Rule Exception" sap2010:WorkflowViewState.IdRef="Transition_13" To="{x:Reference __ReferenceID1}">
                            <Transition.Action>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_88">
                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_50" Level="Warn" Message="[String.Format(Config(&quot;LogMessage RuleException&quot;), &quot;process&quot;, RuleException.Message, RuleException.Source)]" />
                                <Assign DisplayName="Reset Rule Exception" sap2010:WorkflowViewState.IdRef="Assign_49">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="ui:BusinessRuleException">[RuleException]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </Transition.Action>
                            <Transition.Condition>[RuleException IsNot Nothing]</Transition.Condition>
                          </Transition>
                          <Transition DisplayName="System Error" sap2010:WorkflowViewState.IdRef="Transition_12" To="{x:Reference __ReferenceID2}">
                            <Transition.Action>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_89">
                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_51" Level="Error" Message="[String.Format(Config(&quot;LogMessage SystemError&quot;), &quot;process&quot;, SystemError.Message, SystemError.Source)]" />
                                <Assign DisplayName="Reset System Error" sap2010:WorkflowViewState.IdRef="Assign_50">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </Transition.Action>
                            <Transition.Condition>[SystemError IsNot Nothing]</Transition.Condition>
                          </Transition>
                        </State.Transitions>
                      </State>
                    </Transition.To>
                    <Transition.Action>
                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_54" Level="Info" Message="[String.Format(Config(&quot;LogMessage GotTransaction&quot;), TransactionNumber, TransactionReceived, TransactionSubject)]" />
                    </Transition.Action>
                    <Transition.Condition>[TransactionMessage IsNot Nothing]</Transition.Condition>
                  </Transition>
                  <Transition sap2010:Annotation.AnnotationText="This is a simple mecanism to stop the process.&#xA;In reallife scenario you can stop the process when there is no more data to process or on a schedule." DisplayName="No Data" sap2010:WorkflowViewState.IdRef="Transition_7" To="{x:Reference __ReferenceID0}">
                    <Transition.Action>
                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info" Message="[String.Format(Config(&quot;LogMessage NoTransactions&quot;), TransactionNumber)]" />
                    </Transition.Action>
                    <Transition.Condition>[TransactionMessage Is Nothing]</Transition.Condition>
                  </Transition>
                </State.Transitions>
              </State>
            </Transition.To>
            <Transition.Action>
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info" Message="[String.Format(Config(&quot;LogMessage StartProcess&quot;), &quot;init&quot;)]" />
            </Transition.Action>
            <Transition.Condition>[SystemError Is Nothing And Not DispatchJob]</Transition.Condition>
          </Transition>
        </State.Transitions>
      </State>
    </StateMachine.InitialState>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="s:DateTime" Default="[Now]" Name="StartTime" />
      <Variable x:TypeArguments="x:String" Name="OperatingEnvironment" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="Config" />
      <Variable x:TypeArguments="s:Exception" Default="[Nothing]" Name="SystemError" />
      <Variable x:TypeArguments="ui:BusinessRuleException" Default="[Nothing]" Name="RuleException" />
      <Variable x:TypeArguments="scg:List(ui:QueueItem)" Default="[New List(Of QueueItem)]" Name="DispatchedItems" />
      <Variable x:TypeArguments="scg:List(ui:QueueItem)" Default="[New List(Of QueueItem)]" Name="TransactionsProcessed" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="TransactionNumber" />
      <Variable x:TypeArguments="snm:MailMessage" Default="[Nothing]" Name="TransactionMessage" />
      <Variable x:TypeArguments="x:String" Name="TransactionSubject" />
      <Variable x:TypeArguments="s:DateTime" Name="TransactionReceived" />
      <Variable x:TypeArguments="x:String" Name="TransactionFilename" />
    </StateMachine.Variables>
    <sads:DebugSymbol.Symbol>d1pDOlxVc2Vyc1xzcGFtaXNoXERvY3VtZW50c1xVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcRkFfQmlsbGluZ01pbGVzdG9uZVxNYWluLnhhbWzoAgFQAVYBAlUDxwcSAgEBuQc2uQc9AwH5A7wHN7wHQgMB+AO9B0S9B08DAfcDvgdCvgdcAwH2A78HQr8HXAMB9QPABzPABzYDAfQDwQc7wQdGAwHzA8IFD6kHFwMBuQOJBhebBx8DAc4CzQMXpQUfAwHeAVcHsQcPAgFrkgIPswUXAgECxAUThAYeAwHKA6AHK6AHTQMBxwOeBxeeB4QCAwHBA6YHK6YHSgMBvwOkBxekB9sBAwG7A4sGG/EGJgMB6QL4BjP4BmgDAecC9gYf9gbjAQMB5AKIBzOIB1ADAeMC/AYfhgcqAwHcApgHM5gHTgMB2gKMBx+WByoDAdACzwMbowUmAwHgAVkL1AEWAwGjAdcBC40CEAIBf7gFI7gFSwIBe7YFD7YFxgECAXm+BSO+BT4CAXe8BQ+8BfIBAgFzrgcjrgdPAgFwrAcPrAfQAQIBbZQCE8gDHgIBEaoFK6oFQwIBDqgFF6gF3AECAQuwBSuwBUYCAQmuBReuBYUCAgEEyAUVyAWLAQMB8APJBRWDBhoDAcsDngeFAZ4HgQIDAcIDpAeFAaQH2AEDAbwDkAYfpgYqAwGbA9YGH+8GKgMBgwOuBiPCBi4DAe8CygYj0QYsAwHqAvYGjQH2BuABAwHlAv0GIf0GkwIDAeEC/gYhhQcqAwHdAo0HIY0HjgIDAdUCjgchlQcqAwHRAtADHYwEKAMBrwKNBB3rBCgDAf4B7AQdnQUoAwHnAZ4FHaIFIgMB4QFbD58BGgMBvgGnARPQAR4DAaQB1wEZ1wEzAwGAAdkBD4sCGgMBggG2BX22BcMBAgF6vAV9vAXvAQIBdKwHfawHzQECAW6WAhfXAiICAUvfAhvEAyYCARKoBYUBqAXZAQIBDK4FhgGuBYICAgEFyAV6yAWIAQMB8QPJBSPJBTEDAcwDywUZ1QUkAwHpA9gFGYEGJAMBzgORBiGbBjkDAaoDnAYhpQY5AwGcA9gGI+MGLgMBigPrBifrBpECAwGEA68GJbYGLgMB/gK3BiXBBioDAfACzwZRzwZcAwHtAswGUswGXwMB6wL9Bo8B/QaQAgMB4gKDB1yDB2UDAeACgAddgAdsAwHeAo0HkAGNB4sCAwHWApMHT5MHWAMB1AKQB1CQB10DAdIC0gMh1gM5AwHLAt4DJYgEMAMBsAKPBCHLBCwDAY8C0wQl5wQwAwH/Ae4EIfkEOQMB+QGBBSWZBTADAegBngUrngVIAwHiAaAFIaAFkQEDAeQBXBFuHAMB1wFvEYUBHAMBygGGARGYARwDAcUBmQERngEpAwG/AawBFbMBHgMBuQG0ARXHASADAbAByAEVzgEtAwGpAc8BFc8B4QEDAaUB2wET6AEdAwGVAYkCE4kC2wEDAZMB8AEXhAIiAwGDAZsCGaICMQIBZKMCGbwCHgIBWL0CGdYCHgIBTOMCHeoCJgIBRusCHf4CKAIBPf8CHbsDKAIBHrwDHcIDNQIBF8MDHcMD4gECARPMBRvMBbcBAwHuA80FG9QFJAMB6gPaBR3jBTUDAdsD6wUh/QUsAwHPA5YGapYGfgMBtwOVBnGVBoUBAwG1A5kGbZkGfgMBswOXBm2XBoIBAwGxA5MGeJMGgAEDAa8DmAZrmAaAAQMBrQOUBn+UBpABAwGsA5EG0gGRBuEBAwGrA6AGaqAGfgMBqAOfBnGfBoUBAwGmA6EGbaEGggEDAaQDngZ4ngaAAQMBogOjBmujBnwDAaADogZrogaAAQMBngOcBtsBnAbpAQMBnQPZBiXhBj0DAY8D4gYl4gbuAQMBiwPrBpYB6waOAgMBhQO0BmC0BmsDAYEDsQZhsQZwAwH/ArcGM7cGUQMB8QK5Bim/BkEDAfIC0gPGAdID0AEDAc0C0gPxAdIDlgIDAcwC3wMn3wONAgMBxwLgAyeHBDIDAbECkwQjtgQoAwGdArcEI8oELQMBkALXBCfeBDADAYsC3wQn5QQ/AwGEAuYEJ+YE7QEDAYAC8QR48QSAAQMB/AHwBHbwBI0BAwH7Ae4E1AHuBOoBAwH6AYIFJ4IFhgIDAfUBgwUnmAUsAwHpAaAFVaAFZAMB5QFeFWIoAwHaAWoZaqQCAwHYAXEVeS0DAc0BgQEZgQHCAgMBywGIARWMAS0DAcgBlAEZlAGAAgMBxgGbAWubAXMDAcMBnAFUnAFhAwHBAZkBzQGZAfEBAwHAAbEBQ7EBTgMBvAGuAUSuAVEDAboBtgEZuwExAwG1AcMBHcMBoQIDAbEBzAFczAFxAwGuAcoBWsoBZQMBrAHLAVrLAWgDAasByAHLAcgB5AEDAaoBzwFQzwFpAwGoAc8BxwHPAd4BAwGmAd8BKN8BQwMBogHgARXnASADAZYBiQKBAYkC2AEDAZQB9AEZ+wEiAwGPAfwBGYICMQMBiAGDAhmDAt8BAwGEAZ4CcJ4CgQECAWqgAnGgAoQBAgFpnQJwnQJ4AgFnnwJwnwKCAQIBZpsCygGbAtkBAgFlowInowJIAgFZpQIdugIoAgFavQInvQJJAgFNvwId1AIoAgFO6AJL6AJWAgFJ5QJM5QJZAgFH7QIh8gI5AgFC+gIl+gKjAgIBPoEDIYUDOQIBOo0DJbcDMAIBH8ADZMADcgIBHL4DYr4DbwIBGr8DYr8DdAIBGbwD1wG8A/ABAgEYwwNYwwNxAgEWwwPPAcMD3wECARTMBY4BzAW0AQMB7wPSBU3SBVYDAe0DzwVOzwViAwHrA9wFZNwFdwMB5wPhBWnhBX4DAeUD3wVo3wV8AwHjA90FdN0FfAMB4QPaBdgB2gX7AQMB4APeBW/eBYMBAwHeA+AFa+AFgAEDAdwD7AUj8wUsAwHXA/QFI/QFrAEDAdQD9QUj/AUsAwHQA9wGedwGiAEDAZkD3QZq3QZ3AwGXA94Gct4GgwEDAZUD2wZ82waEAQMBkwPfBm/fBoIBAwGRA9kG4gHZBocCAwGQA+IGYOIGeQMBjgPiBtgB4gbrAQMBjAO5BoICuQaUAgMB/QK7Bm27BoEBAwH7ArkG1AG5BvcBAwH5Ar0Gbr0GgwEDAfcCuQalArkGuAIDAfUCvAZuvAaaAQMB8wLfA5UB3wOKAgMByALiAyvmA0MDAcUC7gMvgwQ6AwGyApMEMZMEUQMBngKVBCecBDADAasCnwQntAQsAwGfArwEOLwEUQMBnAK9BCXJBDADAZEC3ARg3ASQAgMBjgLZBFbZBGEDAYwC4wRu4wR9AwGJAuEEbOEEdwMBhwLiBGziBHMDAYYC3wTYAd8E8QEDAYUC5gRi5gR7AwGDAuYE2QHmBOoBAwGBAoIFlQGCBYMCAwH2AYMFNYMFTwMB6gGFBSuMBTQDAfABjwUrlgU0AwHsAWBBYFcDAdwBXkZeXAMB2wFqSWr3AQMB2QFzV3NiAwHVAXRgdHYDAdMBd253dgMB0QFxzQFx7QEDAdABdlp2gAEDAc8BdVZ1ZgMBzgGBAUuBAZUCAwHMAYgBzgGIAe8BAwHJAZQBSZQB0wEDAccBuQFZuQFnAwG4AbgBVrgBbAMBtwG2AdABtgHvAQMBtgHDAYsBwwGeAgMBsgHhARfhAf4BAwGdAeIBF+YBHAMBlwH5AVL5AdUBAwGSAfYBSPYBVQMBkAGAAmCAAm8DAY0B/gFe/gFrAwGLAf8BXv8BbAMBigH8Ac8B/AHoAQMBiQGDAlSDAm0DAYcBgwLLAYMC3AEDAYUBqQIfsAIoAgFgsQIfsQLYAgIBXrICH7kCKAIBW8MCH8oCKAIBVMsCH8sC3AICAVLMAh/TAigCAU/wAmHwAmkCAUXvAl7vAnQCAUTtAtgB7QL3AQIBQ/oCkwH6AqACAgE/gQPGAYED0AECATyBA/EBgQOWAgIBO44DJ44DjQICATaPAye2AzICASDxBVzxBe8BAwHaA+4FUu4FXwMB2AP0BZIB9AWpAQMB1QP6BVX6BV4DAdMD9wVW9wVqAwHRA+ID4wHiA4QCAwHGAvIDMfkDOgMBwQL6AzH6A7cBAwG+AvsDMYEESQMBtwKCBDGCBPoBAwGzApoEUpoEcwMBrgKXBFOXBF4DAawCnwQ1nwRNAwGgAqEEK6gENAMBpgKrBCuyBDQDAaICvgQnvgSHAwMBmAK/BCfIBDQDAZICigVZigVkAwHzAYcFWocFZwMB8QGUBVmUBagBAwHvAZEFWpEFZwMB7QHhAbYB4QHbAQMBoAHhAewB4QH7AQMBngHiASXiAUIDAZgB5AEb5AHeAQMBmQGuAluuAo8BAgFjqwJcqwJoAgFhsQKNAbEC1QICAV+3Ali3Ao8BAgFdtAJZtAJwAgFcyAJbyAKQAQIBV8UCXMUCaAIBVcsCjQHLAtkCAgFT0QJY0QKQAQIBUc4CWc4CcAIBUI4DlQGOA4oCAgE3kQMrlQNDAgE0nQMvsgM6AgEh9wNq9wPqAQMBxAL0A2D0A2sDAcIC+gOfAfoDtAEDAb8C/wN4/wOKAQMBvAL9A3b9A4EBAwG6Av4Ddv4DfQMBuQL7A+IB+wP7AQMBuAKCBGyCBIUBAwG2AoIE4wGCBPcBAwG0AqYEVqYEbwMBqQKjBFejBGIDAacCsARWsAR2AwGlAq0EV60EYgMBowK+BOECvgTuAgMBmgK+BPYCvgSEAwMBmQK/BM4BvwTcAQMBlwLFBC3FBJECAwGTAuQBVuQBaQMBnAHkAcwB5AHbAQMBmgGRA+QBkQOFAgIBNaEDMagDOgIBMKkDMakDtwECAS2qAzGwA0kCASaxAzGxA/oBAgEixQSDAcUEigEDAZYCxQT/AcUEjgIDAZQCpgNqpgPqAQIBM6MDYKMDawIBMakDnwGpA7QBAgEurQN4rQOKAQIBK6wDdqwDgQECASmuA3auA30CASiqA+IBqgP7AQIBJ7EDbLEDhQECASWxA+MBsQP3AQIBIw==</sads:DebugSymbol.Symbol>
  </StateMachine>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetRobotAsset_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_11" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_9" sap:VirtualizedContainerService.HintSize="418,287" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_12" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Throw_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_21" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_18" sap:VirtualizedContainerService.HintSize="418,314" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_18" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Throw_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_22" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_19" sap:VirtualizedContainerService.HintSize="418,314" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="418,87" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="440,1246">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="418,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_35" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_55" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_23" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_20" sap:VirtualizedContainerService.HintSize="418,314">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_26" sap:VirtualizedContainerService.HintSize="418,87" />
      <sap2010:ViewStateData Id="AddToCollection`1_2" sap:VirtualizedContainerService.HintSize="418,22" />
      <sap2010:ViewStateData Id="Sequence_69" sap:VirtualizedContainerService.HintSize="440,724">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="444,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="458,1473">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetQueueItem_2" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_13" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_27" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Sequence_98" sap:VirtualizedContainerService.HintSize="486,394">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_3" sap:VirtualizedContainerService.HintSize="512,556" />
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_30" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="AddToCollection`1_5" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_76" sap:VirtualizedContainerService.HintSize="336,373">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_18" sap:VirtualizedContainerService.HintSize="516,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_63" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="TryCatch_15" sap:VirtualizedContainerService.HintSize="530,783">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_18" sap:VirtualizedContainerService.HintSize="655,931" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_21" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="Assign_61" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_46" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_83" sap:VirtualizedContainerService.HintSize="336,415">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_21" sap:VirtualizedContainerService.HintSize="464,563" />
      <sap2010:ViewStateData Id="Assign_62" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_60" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_84" sap:VirtualizedContainerService.HintSize="336,415">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_17" sap:VirtualizedContainerService.HintSize="464,563" />
      <sap2010:ViewStateData Id="Sequence_67" sap:VirtualizedContainerService.HintSize="486,1417">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_53" sap:VirtualizedContainerService.HintSize="418,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_37" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_57" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_25" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_22" sap:VirtualizedContainerService.HintSize="418,314">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_38" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_58" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_39" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_54" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_59" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_40" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="AddToCollection`1_8" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_90" sap:VirtualizedContainerService.HintSize="336,501">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_26" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_23" sap:VirtualizedContainerService.HintSize="418,314" />
      <sap2010:ViewStateData Id="Sequence_91" sap:VirtualizedContainerService.HintSize="440,542">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_27" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_24" sap:VirtualizedContainerService.HintSize="418,314" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_25" sap:VirtualizedContainerService.HintSize="418,87" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="418,22" />
      <sap2010:ViewStateData Id="Sequence_65" sap:VirtualizedContainerService.HintSize="440,1081">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_9" sap:VirtualizedContainerService.HintSize="490,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_8" sap:VirtualizedContainerService.HintSize="504,1644">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_28" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_45" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_40" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_32" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="AddToCollection`1_6" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_78" sap:VirtualizedContainerService.HintSize="336,501">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_16" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_13" sap:VirtualizedContainerService.HintSize="418,314" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="440,542">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="816,314" />
      <sap2010:ViewStateData Id="Assign_58" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_59" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_60" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_25" sap:VirtualizedContainerService.HintSize="509,208" />
      <sap2010:ViewStateData Id="If_23" sap:VirtualizedContainerService.HintSize="776,356" />
      <sap2010:ViewStateData Id="GetQueueItems_6" sap:VirtualizedContainerService.HintSize="287,22" />
      <sap2010:ViewStateData Id="PostponeTransactionItem_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="287,194" />
      <sap2010:ViewStateData Id="Sequence_97" sap:VirtualizedContainerService.HintSize="309,380">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_2" sap:VirtualizedContainerService.HintSize="776,542">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_74" sap:VirtualizedContainerService.HintSize="798,1062">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_47" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_29" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="AddToCollection`1_4" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_75" sap:VirtualizedContainerService.HintSize="336,370">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_17" sap:VirtualizedContainerService.HintSize="802,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_14" sap:VirtualizedContainerService.HintSize="816,1289">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_31" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_43" sap:VirtualizedContainerService.HintSize="509,91" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_19" sap:VirtualizedContainerService.HintSize="509,208" />
      <sap2010:ViewStateData Id="Sequence_77" sap:VirtualizedContainerService.HintSize="531,463">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_19" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_16" sap:VirtualizedContainerService.HintSize="816,314" />
      <sap2010:ViewStateData Id="Throw_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="816,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_73" sap:VirtualizedContainerService.HintSize="838,2369">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_1" sap:VirtualizedContainerService.HintSize="165,133">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">10,368</av:Point>
            <av:Size x:Key="ShapeSize">165,133</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">151</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_47" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_16" sap:VirtualizedContainerService.HintSize="430,1001">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">209.45,316 209.45,434.5 175,434.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">35</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">36</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_62" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_15" sap:VirtualizedContainerService.HintSize="430,796">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">209.45,316 209.45,346 100.75,346 100.75,368</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">35</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">42</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_5" sap:VirtualizedContainerService.HintSize="211,127">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">114.5,189</av:Point>
            <av:Size x:Key="ShapeSize">211,127</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">197</x:Double>
            <x:Double x:Key="StateContainerHeight">34</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_61" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_2" sap:VirtualizedContainerService.HintSize="430,1087">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">46</x:Int32>
            <av:PointCollection x:Key="ConnectorLocation">277,118 277,148 241.1,148 241.1,189</av:PointCollection>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_3" sap:VirtualizedContainerService.HintSize="430,1292">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">277,118 277,148 67.75,148 67.75,368</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">26</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ShouldStop_1" sap:VirtualizedContainerService.HintSize="779,22" />
      <sap2010:ViewStateData Id="LogMessage_25" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_13" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="336,412">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_6" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="418,314">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="779,463" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="801,706">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_34" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_9" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_82" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="AddTransactionItem_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_20" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Sequence_81" sap:VirtualizedContainerService.HintSize="486,429">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="422,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="422,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_15" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="AddToCollection`1_11" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_95" sap:VirtualizedContainerService.HintSize="336,273">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_24" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_7" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_6" sap:VirtualizedContainerService.HintSize="418,500" />
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="436,749">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_53" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_5" sap:VirtualizedContainerService.HintSize="430,1539">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">415.5,587.1 452.4,587.1 452.4,448.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">40</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">71</x:Int32>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_50" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_49" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_88" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_13" sap:VirtualizedContainerService.HintSize="430,1029">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">415.5,587.1 505.5,587.1 505.5,397.7 475.5,397.7</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">40</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">44</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_51" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_50" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_89" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_12" sap:VirtualizedContainerService.HintSize="430,1497">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">415.5,587.1 554,587.1 554,47.2 394,47.2</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">40</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">28</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_3" sap:VirtualizedContainerService.HintSize="462,1207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">204.5,509</av:Point>
            <av:Size x:Key="ShapeSize">211,142</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">197</x:Double>
            <x:Double x:Key="StateContainerHeight">34</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_54" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_14" sap:VirtualizedContainerService.HintSize="430,796">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">302.25,448.5 302.25,478.5 331.1,478.5 331.1,509</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">19</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">46</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_23" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_7" sap:VirtualizedContainerService.HintSize="430,853">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">302.25,448.5 302.25,474.4 175,474.4</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">19</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">60</x:Int32>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_4" sap:VirtualizedContainerService.HintSize="231,127">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">244.5,321.5</av:Point>
            <av:Size x:Key="ShapeSize">231,127</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">217</x:Double>
            <x:Double x:Key="StateContainerHeight">34</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_28" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_9" sap:VirtualizedContainerService.HintSize="430,1087">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">277,118 277,148 371.55,148 371.55,321.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">42</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_2" sap:VirtualizedContainerService.HintSize="234,118">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">160,0</av:Point>
            <av:Size x:Key="ShapeSize">234,118</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">220</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="StateMachine_1" sap:VirtualizedContainerService.HintSize="614,894">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">20,12.5</av:Point>
            <x:Double x:Key="StateContainerWidth">600</x:Double>
            <x:Double x:Key="StateContainerHeight">651</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">80,57.5 110,57.5 110,59 160,59</av:PointCollection>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main2_1" sap:VirtualizedContainerService.HintSize="654,974" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>