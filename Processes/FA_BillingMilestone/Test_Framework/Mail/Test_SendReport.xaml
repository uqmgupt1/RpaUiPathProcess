<Activity mc:Ignorable="sap sap2010 sads" x:Class="Test_EmailReport"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TestingRow" Type="InArgument(sd:DataRow)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Test_EmailReport_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Test_EmailReport" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="opMode" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="in_Config" />
      <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="TransactionsProcessed" />
    </Sequence.Variables>
    <If Condition="[in_TestingRow IsNot Nothing]" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[opMode]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_TestingRow("Arguments").ToString]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[opMode]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">DEV</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
        <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings","Constants", "Messages"}]</InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_Config">[in_Config]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_OperatingEnvironment">[opMode]</InArgument>
        <InArgument x:TypeArguments="s:DateTime" x:Key="in_StartTime">[Now]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_21">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:IEnumerable(ui:QueueItem)">[TransactionsProcessed]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:IEnumerable(ui:QueueItem)">[New List(Of QueueItem)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" Top="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_1" QueueItemStates="Failed, Successful" QueueName="[in_Config(&quot;UpdateQueue&quot;)]" Result="[TransactionsProcessed]" />
    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
      <ui:CommentOut DisplayName="Comment Out">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities">
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim dict As Dictionary(Of String, Object)&#xA;Dim proc As ProcessingException&#xA;&#xA;'--------------------------------------------------------------&#xA;&#xA;Dim successful1 As New QueueItem&#xA;successful1.Status = QueueItemStatus.Successful&#xA;successful1.Reference = &quot;Success Dispatch 1&quot;&#xA;successful1.QueueName = &quot;FA_BillingMilestone_Dispatch&quot;&#xA;successful1.Output = New Dictionary(Of String, Object)&#xA;&#xA;dict = New Dictionary(Of String, Object)&#xA;dict(&quot;Contract&quot;) = &quot;CON01&quot;&#xA;dict(&quot;Milestone ID&quot;) = &quot;B13&quot;&#xA;successful1.SpecificContent = dict&#xA;&#xA;Dim successful2 As New QueueItem&#xA;successful2.Status = QueueItemStatus.Successful&#xA;successful2.Reference = &quot;Success Dispatch 2&quot;&#xA;successful2.QueueName = &quot;FA_BillingMilestone_Dispatch&quot;&#xA;successful2.Output = New Dictionary(Of String, Object)&#xA;&#xA;dict = New Dictionary(Of String, Object)&#xA;dict(&quot;Contract&quot;) = &quot;CON02&quot;&#xA;dict(&quot;Milestone ID&quot;) = &quot;B14&quot;&#xA;successful2.SpecificContent = dict&#xA;&#xA;Dim successful3 As New QueueItem&#xA;successful3.Status = QueueItemStatus.Successful&#xA;successful3.Reference = &quot;Success Update 1&quot;&#xA;successful3.QueueName = &quot;FA_BillingMilestone_Update&quot;&#xA;&#xA;dict = New Dictionary(Of String, Object)&#xA;dict(&quot;Contract&quot;) = &quot;CON03&quot;&#xA;dict(&quot;Milestone ID&quot;) = &quot;B15&quot;&#xA;successful3.SpecificContent = dict&#xA;&#xA;dict = New Dictionary(Of String, Object)&#xA;dict(&quot;Projects Updated&quot;) = 1&#xA;dict(&quot;Grantors Updated&quot;) = 3&#xA;dict(&quot;Lines Updated&quot;) = 5&#xA;dict(&quot;Events Updated&quot;) = 7&#xA;dict(&quot;Projects Total&quot;) = 9&#xA;dict(&quot;Grantors Total&quot;) = 11&#xA;dict(&quot;Lines Total&quot;) = 13&#xA;dict(&quot;Events Total&quot;) = 15&#xA;successful3.Output = dict&#xA;&#xA;Dim successful4 As New QueueItem&#xA;successful4.Status = QueueItemStatus.Successful&#xA;successful4.Reference = &quot;Success Update 2&quot;&#xA;successful4.QueueName = &quot;FA_BillingMilestone_Update&quot;&#xA;&#xA;dict = New Dictionary(Of String, Object)&#xA;dict(&quot;Contract&quot;) = &quot;CON04&quot;&#xA;dict(&quot;Milestone ID&quot;) = &quot;B16&quot;&#xA;successful4.SpecificContent = dict&#xA;&#xA;dict = New Dictionary(Of String, Object)&#xA;dict(&quot;Projects Updated&quot;) = 2&#xA;dict(&quot;Grantors Updated&quot;) = 4&#xA;dict(&quot;Lines Updated&quot;) = 6&#xA;dict(&quot;Events Updated&quot;) = 8&#xA;dict(&quot;Projects Total&quot;) = 10&#xA;dict(&quot;Grantors Total&quot;) = 12&#xA;dict(&quot;Lines Total&quot;) = 14&#xA;dict(&quot;Events Total&quot;) = 16&#xA;successful4.Output = dict&#xA;&#xA;'--------------------------------------------------------------&#xA;&#xA;Dim ruleException1 As New QueueItem&#xA;ruleException1.Status = QueueItemStatus.Failed&#xA;ruleException1.Reference = &quot;Rule Ex Dispatch 1&quot;&#xA;ruleException1.QueueName = &quot;FA_BillingMilestone_Dispatch&quot;&#xA;&#xA;dict = New Dictionary(Of String, Object)&#xA;dict(&quot;Contract&quot;) = &quot;CON05&quot;&#xA;dict(&quot;Milestone ID&quot;) = &quot;B17&quot;&#xA;ruleException1.SpecificContent = dict&#xA;&#xA;proc = New ProcessingException&#xA;proc.Type = ProcessingExceptionType.BusinessException&#xA;proc.Reason = &quot;1&quot; + vbTab + &quot;Rule Exception&quot; + vbNewLine + &quot;Further details of the first dispatch rule exception&quot;&#xA;ruleException1.ProcessingException = proc&#xA;&#xA;Dim ruleException2 As New QueueItem&#xA;ruleException2.Status = QueueItemStatus.Failed&#xA;ruleException2.Reference = &quot;Rule Ex Dispatch 2&quot;&#xA;ruleException2.QueueName = &quot;FA_BillingMilestone_Dispatch&quot;&#xA;&#xA;dict = New Dictionary(Of String, Object)&#xA;dict(&quot;Contract&quot;) = &quot;CON06&quot;&#xA;dict(&quot;Milestone ID&quot;) = &quot;B18&quot;&#xA;ruleException2.SpecificContent = dict&#xA;&#xA;proc = New ProcessingException&#xA;proc.Type = ProcessingExceptionType.BusinessException&#xA;proc.Reason = &quot;3&quot; + vbTab + &quot;Rule Exception&quot; + vbNewLine + &quot;Further details of the second dispatch rule exception&quot;&#xA;ruleException2.ProcessingException = proc&#xA;&#xA;Dim ruleException3 As New QueueItem&#xA;ruleException3.Status = QueueItemStatus.Failed&#xA;ruleException3.Reference = &quot;Rule Ex Update 1&quot;&#xA;ruleException3.QueueName = &quot;FA_BillingMilestone_Update&quot;&#xA;&#xA;dict = New Dictionary(Of String, Object)&#xA;dict(&quot;Contract&quot;) = &quot;CON07&quot;&#xA;dict(&quot;Milestone ID&quot;) = &quot;B19&quot;&#xA;ruleException3.SpecificContent = dict&#xA;&#xA;proc = New ProcessingException&#xA;proc.Type = ProcessingExceptionType.BusinessException&#xA;proc.Reason = &quot;5&quot; + vbTab + &quot;Rule Exception&quot; + vbNewLine + &quot;Further details of the first update rule exception&quot;&#xA;ruleException3.ProcessingException = proc&#xA;&#xA;Dim ruleException4 As New QueueItem&#xA;ruleException4.Status = QueueItemStatus.Failed&#xA;ruleException4.Reference = &quot;Rule Ex Update 2&quot;&#xA;ruleException4.QueueName = &quot;FA_BillingMilestone_Update&quot;&#xA;&#xA;dict = New Dictionary(Of String, Object)&#xA;dict(&quot;Contract&quot;) = &quot;CON08&quot;&#xA;dict(&quot;Milestone ID&quot;) = &quot;B20&quot;&#xA;ruleException4.SpecificContent = dict&#xA;&#xA;proc = New ProcessingException&#xA;proc.Type = ProcessingExceptionType.BusinessException&#xA;proc.Reason = &quot;7&quot; + vbTab + &quot;Rule Exception&quot; + vbNewLine + &quot;Further details of the second update rule exception&quot;&#xA;ruleException4.ProcessingException = proc&#xA;&#xA;'--------------------------------------------------------------&#xA;&#xA;Dim systemError1 As New QueueItem&#xA;systemError1.Status = QueueItemStatus.Failed&#xA;systemError1.Reference = &quot;Sys Err Dispatch 1&quot;&#xA;systemError1.QueueName = &quot;FA_BillingMilestone_Dispatch&quot;&#xA;&#xA;dict = New Dictionary(Of String, Object)&#xA;dict(&quot;Contract&quot;) = &quot;CON09&quot;&#xA;dict(&quot;Milestone ID&quot;) = &quot;B21&quot;&#xA;systemError1.SpecificContent = dict&#xA;&#xA;proc = New ProcessingException&#xA;proc.Type = ProcessingExceptionType.ApplicationException&#xA;proc.Reason = &quot;2&quot; + vbTab + &quot;System Error&quot; + vbNewLine + &quot;Further details of the first dispatch system error&quot;&#xA;systemError1.ProcessingException = proc&#xA;&#xA;Dim systemError2 As New QueueItem&#xA;systemError2.Status = QueueItemStatus.Failed&#xA;systemError2.Reference = &quot;Sys Err Dispatch 2&quot;&#xA;systemError2.QueueName = &quot;FA_BillingMilestone_Dispatch&quot;&#xA;&#xA;dict = New Dictionary(Of String, Object)&#xA;dict(&quot;Contract&quot;) = &quot;CON10&quot;&#xA;dict(&quot;Milestone ID&quot;) = &quot;B22&quot;&#xA;systemError2.SpecificContent = dict&#xA;&#xA;proc = New ProcessingException&#xA;proc.Type = ProcessingExceptionType.ApplicationException&#xA;proc.Reason = &quot;4&quot; + vbTab + &quot;System Error&quot; + vbNewLine + &quot;Further details of the second dispatch system error&quot;&#xA;systemError2.ProcessingException = proc&#xA;&#xA;Dim systemError3 As New QueueItem&#xA;systemError3.Status = QueueItemStatus.Failed&#xA;systemError3.Reference = &quot;Sys Err Update 1&quot;&#xA;systemError3.QueueName = &quot;FA_BillingMilestone_Update&quot;&#xA;&#xA;dict = New Dictionary(Of String, Object)&#xA;dict(&quot;Contract&quot;) = &quot;CON11&quot;&#xA;dict(&quot;Milestone ID&quot;) = &quot;B23&quot;&#xA;systemError3.SpecificContent = dict&#xA;&#xA;proc = New ProcessingException&#xA;proc.Type = ProcessingExceptionType.ApplicationException&#xA;proc.Reason = &quot;6&quot; + vbTab + &quot;System Error&quot; + vbNewLine + &quot;Further details of the first update system error&quot;&#xA;systemError3.ProcessingException = proc&#xA;&#xA;Dim systemError4 As New QueueItem&#xA;systemError4.Status = QueueItemStatus.Failed&#xA;systemError4.Reference = &quot;Sys Err Update 2&quot;&#xA;systemError4.QueueName = &quot;FA_BillingMilestone_Update&quot;&#xA;&#xA;dict = New Dictionary(Of String, Object)&#xA;dict(&quot;Contract&quot;) = &quot;CON12&quot;&#xA;dict(&quot;Milestone ID&quot;) = &quot;B24&quot;&#xA;systemError4.SpecificContent = dict&#xA;&#xA;proc = New ProcessingException&#xA;proc.Type = ProcessingExceptionType.ApplicationException&#xA;proc.Reason = &quot;8&quot; + vbTab + &quot;System Error&quot; + vbNewLine + &quot;Further details of the second update system error&quot;&#xA;systemError4.ProcessingException = proc&#xA;&#xA;'--------------------------------------------------------------&#xA;&#xA;Dim transactions As New List(Of QueueItem)&#xA;If Index &lt; 0 Then&#xA; transactions.Add(successful1)&#xA; transactions.Add(successful2)&#xA; transactions.Add(successful3)&#xA; transactions.Add(successful4)&#xA; transactions.Add(ruleException1)&#xA; transactions.Add(ruleException2)&#xA; transactions.Add(ruleException3)&#xA; transactions.Add(ruleException4)&#xA; transactions.Add(systemError1)&#xA; transactions.Add(systemError2)&#xA; transactions.Add(systemError3)&#xA; transactions.Add(systemError4)&#xA;Else&#xA; If Index Mod 2 &gt; 0 Then transactions.Add(successful1)&#xA; If Index Mod 4 &gt; 1 Then transactions.Add(successful2)&#xA; If Index Mod 6 &gt; 2 Then transactions.Add(successful3)&#xA; If Index Mod 8 &gt; 3 Then transactions.Add(successful4)&#xA; If Index Mod 10 &gt; 4 Then transactions.Add(ruleException1)&#xA; If Index Mod 12 &gt; 5 Then transactions.Add(ruleException2)&#xA; If Index Mod 14 &gt; 6 Then transactions.Add(ruleException3)&#xA; If Index Mod 16 &gt; 7 Then transactions.Add(ruleException4)&#xA; If Index Mod 18 &gt; 8 Then transactions.Add(systemError1)&#xA; If Index Mod 20 &gt; 9 Then transactions.Add(systemError2)&#xA; If Index Mod 22 &gt; 10 Then transactions.Add(systemError3)&#xA; If Index Mod 24 &gt; 11 Then transactions.Add(systemError4)&#xA;End If&#xA;TransactionsProcessed = transactions" DisplayName="Invoke code" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
              <ui:InvokeCode.Arguments>
                <OutArgument x:TypeArguments="scg:IEnumerable(ui:QueueItem)" x:Key="TransactionsProcessed">[TransactionsProcessed]</OutArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="Index">-1</InArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
            <sap2010:WorkflowViewState.IdRef>Sequence_3</sap2010:WorkflowViewState.IdRef>
          </Sequence>
        </ui:CommentOut.Body>
        <sap2010:WorkflowViewState.IdRef>CommentOut_1</sap2010:WorkflowViewState.IdRef>
      </ui:CommentOut>
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Got &quot; &amp; TransactionsProcessed.Count &amp; &quot; transactions&quot;]" />
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendJobReport workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Mail\SendReport.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="scg:List(ui:QueueItem)" x:Key="in_TransactionItems">[TransactionsProcessed.ToList]</InArgument>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[in_Config]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName" />
          <InArgument x:TypeArguments="x:String" x:Key="in_HtmlReport" />
          <InArgument x:TypeArguments="x:String" x:Key="in_HtmlLogo" />
          <InArgument x:TypeArguments="x:String" x:Key="in_EmailRecipients" />
          <InArgument x:TypeArguments="x:String" x:Key="in_TransactionItem" />
          <InArgument x:TypeArguments="x:String" x:Key="in_SendEmailOn" />
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <sads:DebugSymbol.Symbol>d3lDOlxVc2Vyc1xzcGFtaXNoXERvY3VtZW50c1xVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcRkFfQmlsbGluZ01pbGVzdG9uZVxUZXN0X0ZyYW1ld29ya1xNYWlsXFRlc3RfU2VuZFJlcG9ydC54YW1sHksDlwEOAgEBUQVmCgIBG2cFbx0CARJwBXcOAgEPeAV4iwMCAQt5BZUBEAIBAlETUTICARxTCVoSAgEhXQlkEgIBHW1HbUwCARpsUGxYAgEYa15raQIBFme8AWfcAQIBFWpKanACARRpRmlWAgETdUV1XQIBEXJGcl0CARB4wQJ45wICAQ147wJ4iAMCAQx6B4cBFwIBCogBB4gBzQECAQiJAQeUAR8CAQNYNFhZAgEkVTVVPQIBImI0YjcCASBfNV89AgEeiAF0iAHKAQIBCYwBXowBaQIBBosBXIsBegIBBYkBvAGJAdIBAgEE</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="509,208" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="509,87" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="GetQueueItems_1" sap:VirtualizedContainerService.HintSize="509,22" />
      <sap2010:ViewStateData Id="InvokeCode_1" sap:VirtualizedContainerService.HintSize="314,164" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="336,288">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="509,433">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="531,1094">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Test_EmailReport_1" sap:VirtualizedContainerService.HintSize="571,1174" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>