<Activity mc:Ignorable="sap sap2010 sads" x:Class="Test_ProcessTransaction" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Test_ProcessSelectEmail_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Test processing one transaction" sap2010:WorkflowViewState.IdRef="Sequence_20">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="Config" />
      <Variable x:TypeArguments="x:String" Name="OperatingEnvironment" />
      <Variable x:TypeArguments="s:DateTime" Default="[Now]" Name="StartTime" />
      <Variable x:TypeArguments="s:Exception" Default="[Nothing]" Name="SystemError" />
      <Variable x:TypeArguments="scg:List(ui:QueueItem)" Default="[New List(Of QueueItem)]" Name="TransactionsProcessed" />
      <Variable x:TypeArguments="scg:List(ui:QueueItem)" Name="DispatchedItems" />
      <Variable x:TypeArguments="x:String" Name="TransactionFilename" />
      <Variable x:TypeArguments="s:DateTime" Name="TransactionReceived" />
      <Variable x:TypeArguments="x:String" Name="TransactionSubject" />
      <Variable x:TypeArguments="snm:MailMessage" Default="[Nothing]" Name="TransactionMessage" />
      <Variable x:TypeArguments="x:Int32" Name="TransactionNumber" />
      <Variable x:TypeArguments="ui:BusinessRuleException" Default="[Nothing]" Name="BusinessRuleException" />
    </Sequence.Variables>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Directory.GetFiles(&quot;\\nas02.storage.uq.edu.au\CA\ITS\Academic Services\RPA\DEV\FA_BillingMilestone\Email Store&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
          </ActivityAction.Argument>
          <If Condition="[Path.GetFileName(item).Contains(&quot;_request_&quot;)]" sap2010:WorkflowViewState.IdRef="If_5">
            <If.Then>
              <ui:MoveFile ContinueOnError="{x:Null}" Destination="[&quot;\\nas02.storage.uq.edu.au\CA\ITS\Academic Services\RPA\DEV\FA_BillingMilestone\Bot Files\&quot; + Path.GetFileName(item)]" DisplayName="Move File" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="False" Path="[item]" />
            </If.Then>
            <If.Else>
              <ui:Delete ContinueOnError="{x:Null}" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[item]" />
            </If.Else>
          </If>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <TryCatch DisplayName="Catch intialization exceptions" sap2010:WorkflowViewState.IdRef="TryCatch_16">
      <TryCatch.Try>
        <Sequence DisplayName="Init State" sap2010:WorkflowViewState.IdRef="Sequence_18">
          <If Condition="[Config is Nothing]" DisplayName="If first run - read Config file" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Sequence DisplayName="First Run" sap2010:WorkflowViewState.IdRef="Sequence_17">
                <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_15">
                  <TryCatch.Try>
                    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="OperatingEnvironment" DisplayName="Get Op Env Asset" sap2010:WorkflowViewState.IdRef="GetRobotAsset_4">
                      <ui:GetRobotAsset.Value>
                        <OutArgument x:TypeArguments="x:String">[OperatingEnvironment]</OutArgument>
                      </ui:GetRobotAsset.Value>
                    </ui:GetRobotAsset>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_18">
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Throw DisplayName="Throw mode error" Exception="[New System.ApplicationException(&quot;0&quot; + vbTab + &quot;Op Mode Error&quot; + vbNewLine + &quot;I couldn't find my operation mode asset at OperatingEnvironment&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
                    <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings","Constants", "Messages"}]</InArgument>
                    <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_Config">[Config]</OutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_OperatingEnvironment">[OperatingEnvironment]</InArgument>
                    <InArgument x:TypeArguments="s:DateTime" x:Key="in_StartTime">[StartTime]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </If.Then>
          </If>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_36">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Config("Credentials_UniFi")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["my creds"]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitiAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_Config">[Config]</InOutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_19">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_19">
              <Sequence.Variables>
                <Variable x:TypeArguments="ui:QueueItem" Name="initItem" />
                <Variable x:TypeArguments="ui:QueueItem" Name="initializationError" />
              </Sequence.Variables>
              <Assign DisplayName="Assign excepton to SystemError" sap2010:WorkflowViewState.IdRef="Assign_31">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitException workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="ExceptionQueueItem.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[exception]</InArgument>
                  <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_FailedItem">[initializationError]</OutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StageReference">Initialization</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <AddToCollection x:TypeArguments="ui:QueueItem" Collection="[TransactionsProcessed]" DisplayName="Add To Transactions" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[initializationError]" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_17">
      <TryCatch.Variables>
        <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="queueItems" />
      </TryCatch.Variables>
      <TryCatch.Try>
        <Sequence DisplayName="Activate all new transactions" sap2010:WorkflowViewState.IdRef="Sequence_21">
          <DoWhile DisplayName="Do While transactions to set in progress" sap2010:WorkflowViewState.IdRef="DoWhile_1">
            <DoWhile.Variables>
              <Variable x:TypeArguments="ui:QueueItem" Name="transaction" />
            </DoWhile.Variables>
            <DoWhile.Condition>[transaction IsNot Nothing]</DoWhile.Condition>
            <ui:GetQueueItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get Transaction Item" sap2010:WorkflowViewState.IdRef="GetQueueItem_1" QueueType="[Config(&quot;DispatchQueue&quot;)]" TransactionItem="[transaction]" />
          </DoWhile>
          <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" Top="{x:Null}" DisplayName="Get In Progress Items" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_1" QueueItemStates="InProgress" QueueName="[Config(&quot;DispatchQueue&quot;)]" Result="[queueItems]" />
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Got &quot; &amp; queueItems.Count &amp; &quot; active transactions&quot;]" />
          <Assign DisplayName="Assign list of dispatched items" sap2010:WorkflowViewState.IdRef="Assign_32">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(ui:QueueItem)">[DispatchedItems]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(ui:QueueItem)">[queueItems.ToList]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_20">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_22">
              <Sequence.Variables>
                <Variable x:TypeArguments="ui:QueueItem" Name="activateError" />
              </Sequence.Variables>
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Failed to activate all waiting dispatch queue items. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ActivateError workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="ExceptionQueueItem.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[exception]</InArgument>
                  <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_FailedItem">[activateError]</OutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StageReference">Initialization</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <AddToCollection x:TypeArguments="ui:QueueItem" Collection="[TransactionsProcessed]" DisplayName="Add To Transactions" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[activateError]" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <TryCatch DisplayName="Try GetTransactionData" sap2010:WorkflowViewState.IdRef="TryCatch_18">
      <TryCatch.Try>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionData workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="Framework\GetTransactionData.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[Config]</InArgument>
            <OutArgument x:TypeArguments="snm:MailMessage" x:Key="out_TransactionMessage">[TransactionMessage]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionSubject">[TransactionSubject]</OutArgument>
            <OutArgument x:TypeArguments="s:DateTime" x:Key="out_TransactionReceived">[TransactionReceived]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionFilename">[TransactionFilename]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_21">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Log exception message and End process" sap2010:WorkflowViewState.IdRef="Sequence_23">
              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Fatal" Message="[Config(&quot;LogMessage_GetTransactionDataError&quot;).ToString+TransactionNumber.ToString+&quot;. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
              <Assign DisplayName="End Process" sap2010:WorkflowViewState.IdRef="Assign_33">
                <Assign.To>
                  <OutArgument x:TypeArguments="snm:MailMessage">[TransactionMessage]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="snm:MailMessage">[Nothing]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <TryCatch DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="TryCatch_20">
      <TryCatch.Variables>
        <Variable x:TypeArguments="x:Int32" Name="projectsUpdated" />
        <Variable x:TypeArguments="x:Int32" Name="projectsSkipped" />
        <Variable x:TypeArguments="x:Int32" Name="grantorsUpdated" />
        <Variable x:TypeArguments="x:Int32" Name="grantorsSkipped" />
        <Variable x:TypeArguments="x:Int32" Name="linesUpdated" />
        <Variable x:TypeArguments="x:Int32" Name="linesSkipped" />
        <Variable x:TypeArguments="x:Int32" Name="eventsUpdated" />
        <Variable x:TypeArguments="x:Int32" Name="eventsSkipped" />
        <Variable x:TypeArguments="ui:QueueItem" Name="transactionItem" />
      </TryCatch.Variables>
      <TryCatch.Try>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_24">
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Matching workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="Matching.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_TransactionMessage">[TransactionMessage]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionSubject">[TransactionSubject]</InArgument>
              <InArgument x:TypeArguments="s:DateTime" x:Key="in_TransactionReceived">[TransactionReceived]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionFilename">[TransactionFilename]</InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[Config]</InArgument>
              <InOutArgument x:TypeArguments="scg:List(ui:QueueItem)" x:Key="io_DispatchedTransactions">[DispatchedItems]</InOutArgument>
              <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_TransactionItem">[transactionItem]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ProcessTransaction workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="Process.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[Config]</InArgument>
              <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_TransactionMessage">[TransactionMessage]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionSubject">[TransactionSubject]</InArgument>
              <InArgument x:TypeArguments="s:DateTime" x:Key="in_TransactionReceived">[TransactionReceived]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionFilename">[TransactionFilename]</InArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="out_ProjectsUpdated">[projectsUpdated]</OutArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="out_ProjectsSkipped">[projectsSkipped]</OutArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="out_GrantorsUpdated">[grantorsUpdated]</OutArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="out_GrantorsSkipped">[grantorsSkipped]</OutArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="out_LinesUpdated">[linesUpdated]</OutArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="out_LinesSkipped">[linesSkipped]</OutArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="out_EventsUpdated">[eventsUpdated]</OutArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="out_EventsSkipped">[eventsSkipped]</OutArgument>
              <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transactionItem]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_22">
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_25">
              <Assign DisplayName="Set transaction status to Rule Exception" sap2010:WorkflowViewState.IdRef="Assign_34">
                <Assign.To>
                  <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[transactionItem Is Nothing]" DisplayName="If transaction item not declared" sap2010:WorkflowViewState.IdRef="If_3">
                <If.Then>
                  <ui:AddTransactionItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Transaction Item" sap2010:WorkflowViewState.IdRef="AddTransactionItem_4" QueueType="[Config(&quot;UpdateQueue&quot;)]" Reference="Unmatched email" TransactionItem="[transactionItem]">
                    <ui:AddTransactionItem.TransactionInformation>
                      <InArgument x:TypeArguments="x:String" x:Key="Response Subject">[TransactionSubject]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="Response Received">[TransactionReceived.ToString("dd/MM/yyyy")]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="Response Filename">[TransactionFilename]</InArgument>
                    </ui:AddTransactionItem.TransactionInformation>
                  </ui:AddTransactionItem>
                </If.Then>
              </If>
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_23">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Assign DisplayName="Set transaction status to SystemError" sap2010:WorkflowViewState.IdRef="Assign_35">
              <Assign.To>
                <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
              </Assign.Value>
            </Assign>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <TryCatch DisplayName="Set the Transaction Status and go to next Transaction" sap2010:WorkflowViewState.IdRef="TryCatch_19">
          <TryCatch.Try>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[Config]</InArgument>
                <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[SystemError]</InArgument>
                <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessRuleException">[BusinessRuleException]</InArgument>
                <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[transactionItem]</InArgument>
                <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_ProjectsUpdated">[projectsUpdated]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_ProjectsSkipped">[projectsSkipped]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_GrantorsUpdated">[grantorsUpdated]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_GrantorsSkipped">[grantorsSkipped]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_LinesUpdated">[linesUpdated]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_LinesSkipped">[linesSkipped]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_EventsUpdated">[eventsUpdated]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_EventsSkipped">[eventsSkipped]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_24">
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Fatal" Message="[&quot;SetTransactionStatus.xaml failed: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </TryCatch.Finally>
    </TryCatch>
    <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_22">
      <TryCatch.Try>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <scg:Dictionary x:TypeArguments="x:String, Argument" />
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_26">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_28">
              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Warn" Message="[&quot;Applications failed to close normally. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
              <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_21">
                <TryCatch.Try>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_25">
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_27">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="ui:QueueItem" Name="cleanUpException" />
                        </Sequence.Variables>
                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Warn" Message="[&quot;KillAllProcesses failed. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Postpone workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_38" UnSafe="False" WorkflowFileName="ExceptionQueueItem.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[exception]</InArgument>
                            <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_FailedItem">[cleanUpException]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_StageReference">End Job</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <AddToCollection x:TypeArguments="ui:QueueItem" Collection="[TransactionsProcessed]" DisplayName="Add To Transactions" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[cleanUpException]" />
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_23">
      <TryCatch.Variables>
        <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="queueItems" />
      </TryCatch.Variables>
      <TryCatch.Try>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_29">
          <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" Top="{x:Null}" DisplayName="Refresh In Progress Items" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_2" QueueItemStates="InProgress" QueueName="[Config(&quot;DispatchQueue&quot;)]" Result="[queueItems]" />
          <ui:ForEach x:TypeArguments="ui:QueueItem" CurrentIndex="{x:Null}" DisplayName="For Each remaining in progress" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[queueItems]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="ui:QueueItem">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:QueueItem" Name="transaction" />
                </ActivityAction.Argument>
                <ui:PostponeTransactionItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DeferDate="[Now]" DisplayName="Postpone Transaction Item" sap2010:WorkflowViewState.IdRef="PostponeTransactionItem_1" TransactionItem="[transaction]" />
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_27">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_30">
              <Sequence.Variables>
                <Variable x:TypeArguments="ui:QueueItem" Name="postponeError" />
              </Sequence.Variables>
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Failed to postpone all active dispatch queue items. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Postpone workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" UnSafe="False" WorkflowFileName="ExceptionQueueItem.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemError">[exception]</InArgument>
                  <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_FailedItem">[postponeError]</OutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StageReference">End Job</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <AddToCollection x:TypeArguments="ui:QueueItem" Collection="[TransactionsProcessed]" DisplayName="Add To Transactions" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[postponeError]" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <If Condition="[SystemError IsNot Nothing]" DisplayName="If active system error" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Then>
        <Throw DisplayName="Rethrow system error" Exception="[SystemError]" sap2010:WorkflowViewState.IdRef="Throw_2" />
      </If.Then>
    </If>
    <sads:DebugSymbol.Symbol>d3xDOlxVc2Vyc1xzcGFtaXNoXERvY3VtZW50c1xVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcRkFfQmlsbGluZ01pbGVzdG9uZVxUZXN0X0ZyYW1ld29ya1xUZXN0X1Byb2Nlc3NUcmFuc2FjdGlvbi54YW1syAFEA/IDDgIBAUg2SD0CAQZJN0lCAgEFSkJKXAIBBE87T0YCAQNRRFFPAgECUwVjEgMBmwJkBbwBEAMB6QG9AQXtARADAccB7gEFjwIQAwGtAZACBYsDEAIBRIwDBcADEAIBKcEDBesDEAIBDewDBfADCgIBB1OQAVOOAgMBpQJZC2AQAwGcAmYJmwEUAwH7AaMBDbgBGAMB6gHCAQnUARQDAdgB3AEN6QEYAwHIAfABCfkBIQMBuQGBAg2LAhgDAa4BnQIJuwIUAgF/6wIJiQMUAgFewwIN1wIYAgFK3wIN5gIWAgFFjgMJkgMhAgFCmgMNvAMYAgEqxgMJ0gMUAgEe2gMN5wMYAgEO7AMT7AMwAgEI7gMJ7gN5AgEKWRlZUwMBnQJbD1utAgMBoQJeD15wAwGeAmcLjQEQAwGEAo4BC5UBFAMBgAKWAQuaASMDAfwBqAEPrwEYAwH2AbABD7YBJwMB7wG3AQ+3AdsBAwHrAcMBC8kBFQMB4gHKAQvKAYMDAwHeAcsBC8sBzgEDAdwBzAEL0wEUAwHZAeABD+ABgQIDAdQB4QEP5wEnAwHNAegBD+gB1QEDAckB8gFQ8gFjAwHFAfcBVfcBagMBwwH1AVT1AWgDAcEB8wFg8wFoAwG/AfABxAHwAecBAwG+AfQBW/QBbwMBvAH2AVf2AWwDAboBggIPggKqAgMBswGDAg+KAhgDAa8BngILqAIjAwGeAakCC7oCIwMBgAHtAg39AiUCAWOFAxGFA/EBAgFfxAIPywIYAgFZzAIP1gIUAgFL5AI75AJGAgFI4QI84QJJAgFGjgPGAY4D6wECAUObAw+bA/MBAgE+nAMPuwMaAgErxwMLxwOHAwIBJcgDC9EDGAIBH94DD94DgAICARrfAw/lAycCARPmAw/mA9UBAgEP7gM97gNMAgELW0NbxQEDAaQCW6ICW6oCAwGiAl5lXm0DAZ8CZxlnLgMBhQJpD4sBGgMBhwKTATaTAUIDAYMCkAE3kAFUAwGBApgBZZgBbQMB/gGWAcgBlgHsAQMB/QGtAT2tAUgDAfkBqgE+qgFLAwH3AbMBVrMBawMB9AGyAVSyAV8DAfIBtAFUtAFiAwHxAbABxQGwAd4BAwHwAbcBSrcBYwMB7gG3AcEBtwHYAQMB7AHHASDHATsDAegByAENyAH0AQMB4wHKAcUCygHqAgMB4AHKAfICygGAAwMB3wHLAXnLAcsBAwHdAdEBRNEBVwMB2wHOAUXOAVYDAdoB4AF94AH+AQMB1QHkAVbkAWUDAdIB4wFU4wFfAwHQAeUBVOUBYgMBzwHhAcUB4QHeAQMBzgHoAUroAWMDAcwB6AHBAegB0gEDAcoBggJ+ggKnAgMBtAGIAkGIAkoDAbIBhQJChQJWAwGwAaECVKECaAMBqwGgAlugAm8DAakBpgJXpgJoAwGnAaICV6ICbAMBpQGkAmKkAmoDAaMBowJVowJqAwGhAaUCaaUCegMBoAGeArwBngLLAQMBnwGwAlKwAmMDAZwBswJSswJjAwGaAbYCULYCXwMBmAG1Ak+1Al0DAZYBrQJUrQJoAwGUAawCW6wCbwMBkgG3AlC3Al8DAZABtAJPtAJdAwGOAbICUrICYwMBjAGuAleuAmwDAYoBqwJiqwJqAwGIAbgCVbgCZgMBhgGxAlKxAmMDAYQBrwJVrwJqAwGCAakCxgGpAtQBAwGBAfYCUvYCYwIBffACUvACXwIBe/sCUPsCXwIBefECafECgAECAXf1AlL1AmMCAXX5Ak/5Al0CAXP0AlL0AmMCAXH4Ak/4Al0CAW/6AlD6Al8CAW3vAmTvAmwCAWvyAlfyAmgCAWnzAlfzAmoCAWftAsoB7QLvAQIBZvcCUvcCYwIBZIUDgAGFA+4BAgFgyQJKyQJVAgFcxgJLxgJiAgFazAIdzAI7AgFMzgIT1AIrAgFNmwN9mwPwAQIBP54DE6IDKwIBPKoDF7cDIgIBLMcDyQLHA+4CAgEnxwP2AscDhAMCASbIA7AByAO+AQIBJM4DEc4D9QECASDeA33eA/0BAgEb4gNW4gNlAgEY4QNU4QNfAgEW4wNU4wNbAgEV3wPAAd8D2QECARTmA0rmA2MCARLmA8EB5gPSAQIBEGoRfBwDAZQCfRGFASkDAYoChgERigEpAwGIAsgBrAHIAdEBAwHmAcgB4gHIAfEBAwHkAc4C7AHOAv0BAgFY0AJX0AJrAgFWzgK+Ac4C4QECAVTSAljSAm0CAVLOAo4CzgKhAgIBUNECWNEChAECAU6eA8wBngPtAQIBPa4DGa4D7wECATivAxm1AzECATG2Axm2A+IBAgEtzgNnzgNuAgEjzgPjAc4D8gECASFsFXAoAwGXAngZeKYCAwGVAoMBU4MBXgMBkgKCAVyCAXIDAZACgQFqgQFyAwGOAn3JAX3pAQMBjQKAAVaAAXwDAYwCf1J/YgMBiwKGAcoBhgHrAQMBiQKuA4cBrgPsAQIBObIDYLIDcgIBNrEDXrEDaQIBNLMDXrMDZQIBM68DygGvA+MBAgEytgNUtgNtAgEwtgPLAbYD3wECAS5uQW5XAwGZAmxGbFwDAZgCeEl4+QEDAZYC</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="MoveFile_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Delete_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="605,342" />
      <sap2010:ViewStateData Id="GetRobotAsset_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_18" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_15" sap:VirtualizedContainerService.HintSize="418,287" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_27" sap:VirtualizedContainerService.HintSize="418,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_28" sap:VirtualizedContainerService.HintSize="418,87" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="440,665">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="565,813">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="565,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_29" sap:VirtualizedContainerService.HintSize="565,87" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="587,1164">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_30" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="336,373">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_19" sap:VirtualizedContainerService.HintSize="591,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_16" sap:VirtualizedContainerService.HintSize="605,1391">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetQueueItem_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="DoWhile_1" sap:VirtualizedContainerService.HintSize="464,222" />
      <sap2010:ViewStateData Id="GetQueueItems_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="486,639">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_31" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="AddToCollection`1_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="336,404">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_20" sap:VirtualizedContainerService.HintSize="490,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_17" sap:VirtualizedContainerService.HintSize="605,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_32" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_21" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_18" sap:VirtualizedContainerService.HintSize="605,314">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_33" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_34" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="AddTransactionItem_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="486,429">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_22" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_23" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_35" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_13" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_24" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_19" sap:VirtualizedContainerService.HintSize="418,314" />
      <sap2010:ViewStateData Id="TryCatch_20" sap:VirtualizedContainerService.HintSize="605,587">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_36" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_14" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_37" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_15" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_38" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="AddToCollection`1_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="336,404">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_25" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_21" sap:VirtualizedContainerService.HintSize="418,314" />
      <sap2010:ViewStateData Id="Sequence_28" sap:VirtualizedContainerService.HintSize="440,569">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_26" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_22" sap:VirtualizedContainerService.HintSize="605,314">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetQueueItems_2" sap:VirtualizedContainerService.HintSize="287,22" />
      <sap2010:ViewStateData Id="PostponeTransactionItem_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="287,194" />
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="309,380">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_16" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_39" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="AddToCollection`1_4" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_30" sap:VirtualizedContainerService.HintSize="336,404">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_27" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_23" sap:VirtualizedContainerService.HintSize="605,607">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="605,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="627,4218">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Test_ProcessSelectEmail_1" sap:VirtualizedContainerService.HintSize="667,4298" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>