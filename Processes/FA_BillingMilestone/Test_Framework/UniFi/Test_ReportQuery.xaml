<Activity mc:Ignorable="sap sap2010 sads" x:Class="Test_ReportQuery" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Test_ReportQuery_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:sg="clr-namespace:System.Globalization;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Globalization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Test_ReportQuery" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="OperatingEnvironment" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="Config" />
      <Variable x:TypeArguments="x:Boolean" Name="initialised" />
      <Variable x:TypeArguments="x:String" Name="filename" />
    </Sequence.Variables>
    <Assign DisplayName="Assign Current Culture">
      <Assign.To>
        <OutArgument x:TypeArguments="sg:CultureInfo">[CultureInfo.CurrentCulture]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sg:CultureInfo">[New CultureInfo("en-AU")]</InArgument>
      </Assign.Value>
      <sap2010:WorkflowViewState.IdRef>Assign_14</sap2010:WorkflowViewState.IdRef>
    </Assign>
    <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="OperatingEnvironment" DisplayName="Get Op Env Asset" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
          <ui:GetRobotAsset.Value>
            <OutArgument x:TypeArguments="x:String">[OperatingEnvironment]</OutArgument>
          </ui:GetRobotAsset.Value>
        </ui:GetRobotAsset>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Throw DisplayName="Throw mode error" Exception="[New System.ApplicationException(&quot;0&quot; + vbTab + &quot;Op Mode Error&quot; + vbNewLine + &quot;I couldn't find my operation mode asset at OperatingEnvironment&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="s:DateTime" x:Key="in_StartTime">[Now]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_OperatingEnvironment">[OperatingEnvironment]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
        <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings","Constants", "Messages"}]</InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_Config">[Config]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[Config("Credentials_UniFi")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["my creds"]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:UiElementExists DisplayName="UniFi Exists" Exists="[initialised]" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
      <ui:UiElementExists.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;html app='chrome.exe' url='*unifi*' /&gt;" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
      </ui:UiElementExists.Target>
    </ui:UiElementExists>
    <If Condition="[Not initialised]" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke LoginUniFi workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="UniFi\LoginUniFi.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_CredentialsAsset">[Config("Credentials_UniFi")]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_UniFiUrl">[Config("UniFi_URL")]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
    <ui:UiElementExists DisplayName="Query Viewer Exists" Exists="[initialised]" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
      <ui:UiElementExists.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="[&quot;&lt;html app='chrome.exe' title='&quot; + Config(&quot;UniFi Query Viewer&quot;).Split(&quot;\&quot;c).Last + &quot;' /&gt;&quot;]" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
      </ui:UiElementExists.Target>
    </ui:UiElementExists>
    <If Condition="[Not initialised]" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke NavToMainMenuItem workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="UniFi\NavToMainMenuItem.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_NavigationSteps">[Config("UniFi Query Viewer").Split("\"c).ToList]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ReportQuery workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="UniFi\ReportQuery.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[Config]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ReportName">[Config("UniFi ReportQuery")]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_FilePath">[filename]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Saved: &quot; + filename]" />
    <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_4">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <ui:MoveFile ContinueOnError="{x:Null}" Destination="[&quot;\\nas02.storage.uq.edu.au\CA\ITS\Academic Services\RPA\DEV\FA_BillingMilestone\UQ_GM_REPT_MILESTONE_DUE_&quot; + Today.ToString(&quot;yyyy-MM-dd&quot;) + &quot;.csv&quot;]" DisplayName="Move File" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="True" Path="[filename]" />
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <ui:MoveFile ContinueOnError="{x:Null}" Destination="[&quot;Temp\&quot; + Path.GetFileName(filename)]" DisplayName="Move File" sap2010:WorkflowViewState.IdRef="MoveFile_2" Overwrite="True" Path="[filename]" />
    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="reportFile" />
        <Variable x:TypeArguments="sd:DataTable" Name="queryReport" />
        <Variable x:TypeArguments="x:Int32" Default="0" Name="counter" />
      </Sequence.Variables>
      <ui:ReadCsvFile Encoding="{x:Null}" DataTable="[queryReport]" Delimitator="Comma" DisplayName="Read CSV" FilePath="[filename]" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1" />
      <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_2">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[queryReport.Columns]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="sd:DataColumn">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="column" />
                  </ActivityAction.Argument>
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[column.ColumnName]" />
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ui:CommentOut.Body>
      </ui:CommentOut>
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Got &quot; &amp; queryReport.Rows.Count &amp; &quot; rows in the query report&quot;]" />
      <While DisplayName="While remaining report items to send out" sap2010:WorkflowViewState.IdRef="While_1">
        <While.Variables>
          <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[New Dictionary(Of String, String)]" Name="specificContent" />
        </While.Variables>
        <While.Condition>[queryReport.Rows.Count &gt; 0]</While.Condition>
        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <Sequence.Variables>
            <Variable x:TypeArguments="sd:DataRow" Name="row" />
            <Variable x:TypeArguments="sd:DataTable" Name="filteredRows" />
            <Variable x:TypeArguments="x:String" Name="reference" />
            <Variable x:TypeArguments="s:DateTime" Name="dueDate" />
            <Variable x:TypeArguments="x:String" Name="milestoneDescription" />
          </Sequence.Variables>
          <Assign DisplayName="Assign first row" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[row]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[queryReport.Rows(0)]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:FilterDataTable DataTable="[queryReport]" DisplayName="Filter matching items Data Table" FilterRowsMode="Keep" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[filteredRows]" SelectColumnsMode="Remove">
            <ui:FilterDataTable.Filters>
              <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                  <ui:FilterOperationArgument.Column>
                    <InArgument x:TypeArguments="x:String">["Contract"]</InArgument>
                  </ui:FilterOperationArgument.Column>
                  <ui:FilterOperationArgument.Operand>
                    <InArgument x:TypeArguments="x:String">[row("Contract").ToString]</InArgument>
                  </ui:FilterOperationArgument.Operand>
                </ui:FilterOperationArgument>
                <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                  <ui:FilterOperationArgument.Column>
                    <InArgument x:TypeArguments="x:String">["Milestone ID"]</InArgument>
                  </ui:FilterOperationArgument.Column>
                  <ui:FilterOperationArgument.Operand>
                    <InArgument x:TypeArguments="x:String">[row("Milestone ID").ToString]</InArgument>
                  </ui:FilterOperationArgument.Operand>
                </ui:FilterOperationArgument>
              </scg:List>
            </ui:FilterDataTable.Filters>
            <ui:FilterDataTable.SelectColumns>
              <scg:List x:TypeArguments="InArgument" Capacity="4">
                <x:Null />
              </scg:List>
            </ui:FilterDataTable.SelectColumns>
          </ui:FilterDataTable>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[counter + 1]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For Each column" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[filteredRows.Columns]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="sd:DataColumn">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="column" />
                </ActivityAction.Argument>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <Assign DisplayName="Assign first row" sap2010:WorkflowViewState.IdRef="Assign_13">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[row]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[filteredRows.Rows(0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Trace" Message="[&quot;Adding '&quot; + column.ColumnName + &quot;' to specific content&quot;]" />
                  <Switch x:TypeArguments="x:String" DisplayName="Switch column name" Expression="[column.ColumnName]" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                    <Switch.Default>
                      <Assign DisplayName="Assign columns specific content" sap2010:WorkflowViewState.IdRef="Assign_5">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[specificContent(column.ColumnName)]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[row(column).ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Switch.Default>
                    <Assign x:Key="Project" DisplayName="Assign project id specific content" sap2010:WorkflowViewState.IdRef="Assign_6">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[specificContent("Project ID")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[JsonConvert.SerializeObject(filteredRows.AsEnumerable.Select(function(r) r(column).ToString).Distinct)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign x:Key="CI username" DisplayName="Assign request recipient specific content" sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[specificContent("Request Recipient")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[row(column).ToString.ToLower + "@uq.edu.au"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign x:Key="Due Date" DisplayName="Assign due date specific content" sap2010:WorkflowViewState.IdRef="Assign_8">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[specificContent("Due Date")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(row(column).ToString).ToString("yyyy-MM-dd")]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Switch>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <Assign DisplayName="Assign request sent" sap2010:WorkflowViewState.IdRef="Assign_11">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[specificContent("Request Sent")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Now.ToString("yyyy-MM-dd")]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign request filename" sap2010:WorkflowViewState.IdRef="Assign_12">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[specificContent("Request Filename")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[String.Format("{0}\{1}_request_{2}.eml", Config("Network Share Bot Files"), reference, specificContent("Request Sent"))]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign Milestone Amount specific content" sap2010:WorkflowViewState.IdRef="Assign_10">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[specificContent("Milestone Amount")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Decimal.Parse(specificContent("Milestone Description").Split("-"c).First, NumberStyles.Currency, CultureInfo.CurrentCulture).ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:FilterDataTable DataTable="[queryReport]" DisplayName="Filter remove items Data Table" FilterRowsMode="Remove" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[queryReport]" SelectColumnsMode="Remove">
            <ui:FilterDataTable.Filters>
              <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                  <ui:FilterOperationArgument.Column>
                    <InArgument x:TypeArguments="x:String">["Contract"]</InArgument>
                  </ui:FilterOperationArgument.Column>
                  <ui:FilterOperationArgument.Operand>
                    <InArgument x:TypeArguments="x:String">[row("Contract").ToString]</InArgument>
                  </ui:FilterOperationArgument.Operand>
                </ui:FilterOperationArgument>
                <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                  <ui:FilterOperationArgument.Column>
                    <InArgument x:TypeArguments="x:String">["Milestone ID"]</InArgument>
                  </ui:FilterOperationArgument.Column>
                  <ui:FilterOperationArgument.Operand>
                    <InArgument x:TypeArguments="x:String">[row("Milestone ID").ToString]</InArgument>
                  </ui:FilterOperationArgument.Operand>
                </ui:FilterOperationArgument>
              </scg:List>
            </ui:FilterDataTable.Filters>
            <ui:FilterDataTable.SelectColumns>
              <scg:List x:TypeArguments="InArgument" Capacity="4">
                <x:Null />
              </scg:List>
            </ui:FilterDataTable.SelectColumns>
          </ui:FilterDataTable>
        </Sequence>
      </While>
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Got &quot; &amp; counter &amp; &quot; unique billing milestones&quot;]" />
    </Sequence>
    <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke LogoutUniFi workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="UniFi\LogoutUniFi.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <sads:DebugSymbol.Symbol>d2NDOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcRkFfQmlsbGluZ01pbGVzdG9uZVxUZXN0X0ZyYW1ld29ya1xVbmlGaVxUZXN0X1JlcG9ydFF1ZXJ5LnhhbWx0RwPzAg4CAQFOBVYOAwGVAVcFaRADAY4BagVyHQMBhQFzBXoOAwGBAXsFfxoCAXyAAQWJAQoCAXOKAQWOARoCAW6PAQWXAQoCAWiYAQWeAR0CAWCfAQWfAZcBAgFdoAEFpgEVAgFcpwEFpwHWAQIBWKgBBeYCEAIBA+cCBfECFQIBAlM2U1ADAZcBUDdQUwMBlgFZCV0cAwGRAWUNZZoCAwGPAWxHbEwDAY0BbVBtZgMBiwFwXnBmAwGJAWq8AWrcAQMBiAFvSm9wAwGHAW5GblYDAYYBeDB4PAMBhAF1MXVOAwGCAX1KfXkDAYABfYQBfYoBAgF/ezt7SgIBfYABE4ABJgIBdIIBCYcBIQIBdowBSowB1QECAXKMAeABjAHmAQIBcYoBQooBUQIBb48BE48BJgIBaZEBCZUBIQIBa5wBRpwBUAIBZpsBRpsBYwIBZJoBXJoBZAIBYpgBuAGYAdABAgFhnwFynwGUAQIBXqcBOacBawIBW6cBxwGnAdMBAgFZrAE1rAE4AgEErgEHrgG4AQIBU68BB74BFwIBUr8BB78B1AECAVDAAQfkAg8CAQjlAgflAsYBAgEFWzVbSwMBkwFZOllQAwGSAWU9Ze0BAwGQAYUBSIUBXQIBeoQBUIQBbQIBeIIBuwGCAdIBAgF3kwFZkwGKAQIBbZEBwgGRAeABAgFsrgE1rgFEAgFWrgF5rgGFAQIBVL8BdL8B0QECAVHCAVLCAXcCAQnFAQnjAhQCAQvEARrEATkCAQrlAnTlAsMBAgEGzQEL1AEUAgFM1QEL7wEgAgFD8AEL9wEUAgE++AELrwIYAgEksAILtwIUAgEguAILvwIUAgEZwAILxwIUAgEVyAIL4gIgAgEM0gE40gFNAgFPzwE5zwE+AgFN4gE84gFMAgFL5QE85QFaAgFK2gE82gFIAgFJ3QE83QFWAgFI1QHCAdUB0gECAUbVASnVATgCAUT1ATX1AUICAUHyATbyAT8CAT/4AaIB+AG6AQIBPf4BEawCHAIBJbUCNrUCUgIBI7ICN7ICWAIBIb0CNr0CrwECARy6Aje6AlwCARrFAjbFAr0BAgEYwgI3wgJcAgEW1QI81QJMAgEU2AI82AJaAgETzQI8zQJIAgES0AI80AJWAgERyALCAcgC0QECAQ/IAinIAjgCAQ3/AROGAhwCATmHAhOHAtQBAgE3iAITqwIcAgEmhAJAhAJWAgE8gQJBgQJGAgE6hwKBAYcC0QECATiIAmKIAncCASeTAhWaAh4CATObAhWiAh4CAS+jAhWqAh4CASuKAheRAiACASiYAkCYAqgBAgE2lQJBlQJgAgE0oAJAoAJtAgEynQJBnQJnAgEwqAJAqAKBAQIBLqUCQaUCXgIBLI8CQo8CWAIBKowCQ4wCZwIBKQ==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="585,60" />
      <sap2010:ViewStateData Id="GetRobotAsset_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="585,287" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="585,87" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="585,60" />
      <sap2010:ViewStateData Id="UiElementExists_1" sap:VirtualizedContainerService.HintSize="585,68" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="585,235" />
      <sap2010:ViewStateData Id="UiElementExists_2" sap:VirtualizedContainerService.HintSize="585,68" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="585,235" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="585,87" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="585,91" />
      <sap2010:ViewStateData Id="MoveFile_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_4" sap:VirtualizedContainerService.HintSize="585,224" />
      <sap2010:ViewStateData Id="MoveFile_2" sap:VirtualizedContainerService.HintSize="585,22" />
      <sap2010:ViewStateData Id="ReadCsvFile_1" sap:VirtualizedContainerService.HintSize="563,152" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="330,224" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="352,348">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_2" sap:VirtualizedContainerService.HintSize="563,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="563,91" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="515,60" />
      <sap2010:ViewStateData Id="FilterDataTable_1" sap:VirtualizedContainerService.HintSize="515,59" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="515,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="477,60" />
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="477,91" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Switch`1_1" sap:VirtualizedContainerService.HintSize="477,286" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="499,641">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="515,775" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="515,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="515,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="515,60" />
      <sap2010:ViewStateData Id="FilterDataTable_2" sap:VirtualizedContainerService.HintSize="515,59" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="537,1597">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="563,1755">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="563,91" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="585,2424">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="585,289" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="607,4881">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Test_ReportQuery_1" sap:VirtualizedContainerService.HintSize="647,4961" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>