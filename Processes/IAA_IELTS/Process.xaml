<Activity mc:Ignorable="sap sap2010 sads" x:Class="ProcessTransaction"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: In this file all other process specific files will be invoked. If an application exception occurs, the current transaction can be retried. If a BRE is thrown, the transaction will be skipped. Can be a flowchart or sequence. " DisplayName="ProcessTransaction" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[new Dictionary(Of String, String)]" Name="sinetDetails" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[new Dictionary(Of String, String)]" Name="ieltsDetails" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Boolean)" Default="[new Dictionary(Of String, Boolean)]" Name="compareResult" />
      <Variable x:TypeArguments="x:String" Name="testScoreIndex" />
      <Variable x:TypeArguments="x:Boolean" Name="trfSearchFlag" />
      <Variable x:TypeArguments="x:String" Name="resultScreenshotPath" />
    </Sequence.Variables>
    <Sequence DisplayName="Process Transaction " sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="testComponentNotMatch" />
      </Sequence.Variables>
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Start Process.xaml for StudentID '&quot;+in_TransactionItem.SpecificContent(&quot;StudentID&quot;).ToString+&quot;' and application number '&quot;+in_TransactionItem.SpecificContent(&quot;ApplicationNbr&quot;).ToString+&quot;'&quot;]" />
      <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
        <TryCatch.Try>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke NavToQualificationData workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="SI-net\NavToQualificationData.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_ApplicationNbr">[in_TransactionItem.SpecificContent("ApplicationNbr").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_AdmitTerm">[in_TransactionItem.SpecificContent("AdmitTerm").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_AcademicInstitution" />
              <InArgument x:TypeArguments="x:String" x:Key="in_SInetMaintainAppSearch_URL">https://sa92prep.dev.sinet.uq.edu.au/psp/ps/EMPLOYEE/SA/c/PROCESS_APPLICATIONS.ADM_APPL_MAINTNCE.GBL</InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_ApplicationProgramNumber">[CInt(in_TransactionItem.SpecificContent("AppProgNbr").ToString)]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_1">
            <ActivityAction x:TypeArguments="ui:BusinessRuleException">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Write exception message and set log field2" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_1" />
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ExtractSInetTestDetails workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="SI-net\ExtractSInetTestDetails.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_TRFNumber">[in_TransactionItem.SpecificContent("TRFNumber").ToString]</InArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_sinet_IELTSDetails">[sinetDetails]</OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_FirstName">[in_TransactionItem.SpecificContent("FirstName").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_LastName">[in_TransactionItem.SpecificContent("LastName").ToString]</InArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_testScoreIndex">[testScoreIndex]</OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StudentID">[in_TransactionItem.SpecificContent("StudentID").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ApplicationNumber">[in_TransactionItem.SpecificContent("ApplicationNbr").ToString]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Test Score Index is &quot;+testScoreIndex]" />
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke PerformTRFQuery workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="IELTSPortal\PerformTRFQuery.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_TRFNumber">[in_TransactionItem.SpecificContent("TRFNumber").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[in_Config("IELTSResultScreenshotFolder")]</InArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_ieltsTestResult">[ieltsDetails]</OutArgument>
          <OutArgument x:TypeArguments="x:Boolean" x:Key="out_isSearchSuccessful">[trfSearchFlag]</OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_resultScreenshot">[resultScreenshotPath]</OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StudentID">[in_TransactionItem.SpecificContent("StudentID").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ApplicationNumber">[in_TransactionItem.SpecificContent("ApplicationNbr").ToString]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <If Condition="[trfSearchFlag]" DisplayName="Check TRF search is successful, if yes compare results" sap2010:WorkflowViewState.IdRef="If_1">
        <If.Then>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CompareTestResults workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="SI-net\CompareTestResults.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_sinetDetails">[sinetDetails]</InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_ieltsDetails">[ieltsDetails]</InArgument>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Boolean)" x:Key="out_Result">[compareResult]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_TestComponentNotMatch">[testComponentNotMatch]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </If.Then>
      </If>
      <If Condition="[String.IsNullOrEmpty(testComponentNotMatch)]" DisplayName="Check compare test result and log entry for component did not match" sap2010:WorkflowViewState.IdRef="If_2">
        <If.Else>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Warn" Message="[&quot;Mismatch found for StudentID '&quot;+in_TransactionItem.SpecificContent(&quot;StudentID&quot;).ToString+&quot;' and application number '&quot;+in_TransactionItem.SpecificContent(&quot;ApplicationNbr&quot;).ToString+&quot;' for the following  component(s): '&quot;+testComponentNotMatch+&quot;'&quot;]" />
        </If.Else>
      </If>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateIELTSTestComponent workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="SI-net\UpdateSInetWithResults.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Boolean)" x:Key="in_Result">[compareResult]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_testScoreIndex">[testScoreIndex]</InArgument>
          <InArgument x:TypeArguments="x:Boolean" x:Key="in_TRFSearchFlag">[trfSearchFlag]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke NavToApplicationDocumentsSearch workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="SI-net\NavToApplicationDocumentsSearch.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_AppDocSerachURL">[in_Config("mySI_netApplicationDocumentsSearch_DEV")]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StudentID">[in_TransactionItem.SpecificContent("StudentID").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ApplicationNbr">[in_TransactionItem.SpecificContent("ApplicationNbr").ToString]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UploadIELTSSearchResult workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="SI-net\UploadIELTSSearchResult.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_ApplicationNbr">[in_TransactionItem.SpecificContent("ApplicationNbr").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[resultScreenshotPath]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_UploadDescription">[in_Config("DocumentDescription")]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_StudentID">[in_TransactionItem.SpecificContent("StudentID").ToString]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;End Process.xaml for StudentID '&quot;+in_TransactionItem.SpecificContent(&quot;StudentID&quot;).ToString+&quot;' and application number '&quot;+in_TransactionItem.SpecificContent(&quot;ApplicationNbr&quot;).ToString+&quot;'&quot;]" />
    </Sequence>
    <sads:DebugSymbol.Symbol>d1RDOlxVc2Vyc1x1cW1ndXB0MVxEb2N1bWVudHNcVWlQYXRoXFJwYVVpUGF0aFByb2Nlc3NcUHJvY2Vzc2VzXElBQV9JRUxUU1xQcm9jZXNzLnhhbWxCSAOwAQ4CAQFKTkpzAgEES05LcwIBA0xPTHUCAQJRBa4BEAIBBVUHVekCAgFUVgduEgIBS28HeR8CAUB6B3qqAQIBPXsHhQEfAgEwhgEHkQEMAgEjkgEHlgEMAgEelwEHnQEfAgEWngEHpAEfAgEQpQEHrAEfAgEIrQEHrQHnAgIBBlV0VeYCAgFVWAtgIwIBTmgPahoCAUx1TnVeAgFJdEZ0fwIBSHNHc4EBAgFHcmxyegIBRXFHcYEBAgFEd093jgECAUN2R3aBAQIBQm/HAW/sAQIBQXp0eqcBAgE+gQFQgQFmAgE7gAFTgAFiAgE5fUd9gQECATh+Rn5wAgE2gwFPgwGOAQIBNX9pf3cCATOCAUeCAYEBAgEye74Be+ABAgExhgEVhgEmAgEkiAELjwEjAgEmkgEVkgFEAgEflAELlAGwAwIBIZoBTJoBXAIBHJsBTJsBWwIBGpkBX5kBbgIBGJcByAGXAewBAgEXoQFHoQGBAQIBFZ4BzwGeAfwBAgEUogFMogGLAQIBE6ABTaABggECARGpAU+pAXECAQ6oAUaoAVwCAQyqAUeqAYEBAgELpQHHAaUB7AECAQqnAUynAYsBAgEJrQF0rQHkAgIBB11cXcABAgFTXllemgECAVJbS1uFAQIBUVjJAVjtAQIBUFpQWo8BAgFPaRFpSAIBTYsBaIsBdgIBLowBZYwBdAIBLIoBaIoBdgIBKo0BWY0BcAIBKIgBxgGIAeYBAgEnlAF4lAGtAwIBIg==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Rethrow_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="464,314" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_10" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="464,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_14" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,235" />
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,239" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_15" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_12" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_13" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="486,2020">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="508,2201">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ProcessTransaction_1" sap:VirtualizedContainerService.HintSize="548,2281" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>