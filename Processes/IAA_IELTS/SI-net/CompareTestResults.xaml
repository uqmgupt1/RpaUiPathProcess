<Activity mc:Ignorable="sap sap2010 sads" x:Class="NavToTestIELTS"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:maes="clr-namespace:Microsoft.Activities.Extensions.Statements;assembly=Microsoft.Activities.Extensions"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_sinetDetails" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="in_ieltsDetails" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="out_Result" Type="OutArgument(scg:Dictionary(x:String, x:Boolean))" />
    <x:Property Name="out_TestComponentNotMatch" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>NavToTestIELTS_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: This workflow is executed when test details from SI-net and IELTS website are extracted successfully. This flow will compare the test details from both the systems and stores the match result.&#xA;&#xA;Inputs: &#xA;in_sinetDetails &lt;String, String&gt; : This collection stores the value extracted from SI-net as follows -  Test Date, Overall Score, Listening, Writing, Speaking, Reading, Family Name and First Name&#xA;in_ieltsDetails &lt;String, String&gt; : This collection stores the value extracted from IELTS website  as follows -  Test Date, Overall Score, Listening, Writing, Speaking, Reading, Family Name and First Name&#xA;&#xA;Outputs: &#xA;out_Result &lt;String, Boolean&gt; : This collection stores the comparison result of Family Name, First Name, Test Date, Overall Score, Listening, Writing, Speaking, Reading and Score Status. If value matches, it is set to True else False&#xA;&#xA;Pre Condition:&#xA;NA&#xA;&#xA;Post Condition:&#xA;NA" DisplayName="Compare Test Results " sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="scoreStatusFlag" />
      <Variable x:TypeArguments="x:String" Name="tstCompNotMatch" />
    </Sequence.Variables>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Boolean)">[out_Result]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Boolean)">[new Dictionary (of String, Boolean)]</InArgument>
      </Assign.Value>
    </Assign>
    <maes:AddToDictionary x:TypeArguments="x:String, x:Boolean" Dictionary="[out_Result]" DisplayName="Add to dictionary - IELTS Overall" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_1" Key="IELTS Overall" Value="[if(CDec(in_sinetDetails(&quot;Listening&quot;))=CDec(in_ieltsDetails(&quot;Listening&quot;)), True, False)]" />
    <maes:AddToDictionary x:TypeArguments="x:String, x:Boolean" Dictionary="[out_Result]" DisplayName="Add to dictionary - Listening" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_2" Key="Listening" Value="[if(CDec(in_sinetDetails(&quot;Listening&quot;))=CDec(in_ieltsDetails(&quot;Listening&quot;)), True, False)]" />
    <maes:AddToDictionary x:TypeArguments="x:String, x:Boolean" Dictionary="[out_Result]" DisplayName="Add to dictionary - Reading" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_3" Key="Reading" Value="[if(CDec(in_sinetDetails(&quot;Reading&quot;))=CDec(in_ieltsDetails(&quot;Reading&quot;)), True, False)]" />
    <maes:AddToDictionary x:TypeArguments="x:String, x:Boolean" Dictionary="[out_Result]" DisplayName="Add to dictionary - Writing" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_4" Key="Writing" Value="[if(CDec(in_sinetDetails(&quot;Writing&quot;))=CDec(in_ieltsDetails(&quot;Writing&quot;)), True, False)]" />
    <maes:AddToDictionary x:TypeArguments="x:String, x:Boolean" Dictionary="[out_Result]" DisplayName="Add to dictionary - Speaking" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_5" Key="Speaking" Value="[if(CDec(in_sinetDetails(&quot;Speaking&quot;))=CDec(in_ieltsDetails(&quot;Speaking&quot;)), True, False)]" />
    <maes:AddToDictionary x:TypeArguments="x:String, x:Boolean" Dictionary="[out_Result]" DisplayName="Add to dictionary - Test Date" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_6" Key="TestDate" Value="[if(in_sinetDetails(&quot;TestDate&quot;)=in_ieltsDetails(&quot;TestDate&quot;), True, False)]" />
    <maes:AddToDictionary x:TypeArguments="x:String, x:Boolean" Dictionary="[out_Result]" DisplayName="Add to dictionary - First Name" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_7" Key="FirstName" Value="[if(in_sinetDetails(&quot;FirstName&quot;).ToUpper.Trim=in_ieltsDetails(&quot;FirstName&quot;).ToUpper.Trim, True, False)]" />
    <maes:AddToDictionary x:TypeArguments="x:String, x:Boolean" Dictionary="[out_Result]" DisplayName="Add to dictionary - LastName" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_8" Key="LastName" Value="[if(in_sinetDetails(&quot;LastName&quot;).ToUpper.Trim=in_ieltsDetails(&quot;LastName&quot;).ToUpper.Trim, True, False)]" />
    <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, x:Boolean)" CurrentIndex="{x:Null}" DisplayName="Check value for each entry in collection " sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[out_Result]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, x:Boolean)">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, x:Boolean)" Name="testComponent" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Check which values did not match" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <If Condition="[Not testComponent.Value]" DisplayName="Check if any of the test components value did not match " sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence DisplayName="Write log entry and set scoreStatus flag to false" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Warn" Message="[testComponent.Key +&quot; value did not match. SI-net value is : '&quot; +in_sinetDetails(testComponent.key) +&quot;' whereas on IELTS website it is : '&quot;+ in_ieltsDetails(testComponent.key)+&quot;'&quot;]" />
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[tstCompNotMatch]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[if(tstCompNotMatch is nothing, testComponent.Key,tstCompNotMatch+" ; "+ testComponent.Key)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[scoreStatusFlag]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <maes:AddToDictionary x:TypeArguments="x:String, x:Boolean" Dictionary="[out_Result]" DisplayName="Add to dictionary - Score Status" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_9" Key="ScoreStatus" Value="[scoreStatusFlag]" />
    <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_TestComponentNotMatch]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[tstCompNotMatch]</InArgument>
      </Assign.Value>
    </Assign>
    <sads:DebugSymbol.Symbol>d2ZDOlxVc2Vyc1x1cW1ndXB0MVxEb2N1bWVudHNcVWlQYXRoXFJwYVVpUGF0aFByb2Nlc3NcUHJvY2Vzc2VzXElBQV9JRUxUU1xTSS1uZXRcQ29tcGFyZVRlc3RSZXN1bHRzLnhhbWw6TQOOAQ4CAQFPNU87AgECUgVZDgIBYVoFWswCAgFaWwVbxAICAVNcBVy8AgIBTF0FXbwCAgFFXgVewAICAT5fBV+1AgIBN2AFYNMCAgEwYQVhzgICASliBYMBEgIBDoQBBYQB7gECAQiFAQWMAQ4CAQNXS1dwAgFkVExUWAIBYlrbAVrJAgIBXlpMWloCAVxaxQFa1AECAVtb0wFbwQICAVdbTFtaAgFVW8EBW8wBAgFUXM8BXLkCAgFQXExcWgIBTly/AVzIAQIBTV3PAV25AgIBSV1MXVoCAUddvwFdyAECAUZe0QFevQICAUJeTF5aAgFAXsABXsoBAgE/X9IBX7ICAgE7X0xfWgIBOV/BAV/LAQIBOGDUAWDQAgIBNGBMYFoCATJgwgFgzQECATFh0QFhywICAS1hTGFaAgErYcABYcoBAgEqYs4BYtwBAgEnaAuAARYCAQ+EAdgBhAHrAQIBDIQBTIQBWgIBCoQBxAGEAdEBAgEJigEwigFBAgEGhwExhwFMAgEEaQ1/EgIBEGkbaTYCARFrEX0cAgETbBNs1wICASBtE3QcAgEYdRN8HAIBFGyAAWzUAgIBIXI+cpoBAgEbbz9vUAIBGXo/ekQCARd3QHdRAgEV</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="502,60" />
      <sap2010:ViewStateData Id="AddToDictionary`2_1" sap:VirtualizedContainerService.HintSize="502,70">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_2" sap:VirtualizedContainerService.HintSize="502,70">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_3" sap:VirtualizedContainerService.HintSize="502,70">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_4" sap:VirtualizedContainerService.HintSize="502,70">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_5" sap:VirtualizedContainerService.HintSize="502,70">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_6" sap:VirtualizedContainerService.HintSize="502,70">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_7" sap:VirtualizedContainerService.HintSize="502,70">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_8" sap:VirtualizedContainerService.HintSize="502,70">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="336,415">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,563" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="486,687">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="502,821">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_9" sap:VirtualizedContainerService.HintSize="502,70">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="502,60" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="524,2477">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="NavToTestIELTS_1" sap:VirtualizedContainerService.HintSize="564,2557" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>