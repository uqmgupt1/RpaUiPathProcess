<Activity mc:Ignorable="sap sap2010 sads" x:Class="NavToChecklistManagementStudent"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_ScoreIndex" Type="OutArgument(x:String)" />
    <x:Property Name="out_TableIndex" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>NavToChecklistManagementStudent_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This file will search for the required student ID and checklist code. The result of this search should produce one of three outcomes.&#xA;1. The search resulted in a table in which case we need to select the row with the highest 'Sequence Number'.&#xA;2. The search returned a single result in which case we go straight to the 'Checklist Management - Person' page.&#xA;3. The search returned no matching values which will produce a BRE.&#xA;In the case where the search returned a table with 100 or more rows we will throw a BRE.&#xA;On completion we should be at the 'Checklist Management - Person' page where we can start to update the 'End of Milestone'.&#xA;Inputs:&#xA;student ID&#xA;case ID&#xA;checklist code (CANCON)" DisplayName="NavToQualificationData" sap2010:WorkflowViewState.IdRef="Sequence_8">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:Browser" Name="browser" />
      <Variable x:TypeArguments="x:String" Name="dynamicSelector" />
      <Variable x:TypeArguments="x:Boolean" Name="elementExists" />
      <Variable x:TypeArguments="ui:GenericValue" Name="test_aaname" />
      <Variable x:TypeArguments="x:Boolean" Name="notFound" />
    </Sequence.Variables>
    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser  UQ Qualification Data - Extract Test Details " sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="95d326a541d0fac5df85dbb9a0d053a6" Selector="&lt;html app='chrome.exe' title='Maintain Applications' /&gt;" UiBrowser="[browser]">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
            <DoWhile DisplayName="Do While - Get eligible IELTS test " sap2010:WorkflowViewState.IdRef="DoWhile_1">
              <DoWhile.Variables>
                <Variable x:TypeArguments="x:Int32" Default="0" Name="tableIndex" />
              </DoWhile.Variables>
              <DoWhile.Condition>[elementExists AND notFound]</DoWhile.Condition>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
                <Assign DisplayName="Dynamic selector - Get Test ID" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dynamicSelector]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["&lt;webctrl id='"+"*"+"_WRK_TEST_ID$"+tableIndex.ToString+"' tag='INPUT' /&gt;"]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:UiElementExists DisplayName="Element Exists : Test ID " Exists="[elementExists]" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                  <ui:UiElementExists.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="1335a1ee1f3714663341c78caa2491f0" Selector="[dynamicSelector]" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
                  </ui:UiElementExists.Target>
                </ui:UiElementExists>
                <If Condition="[elementExists]" DisplayName="If exists, then check Test ID (test name) and Score Status " sap2010:WorkflowViewState.IdRef="If_3">
                  <If.Then>
                    <Sequence DisplayName="Check available test name and score status " sap2010:WorkflowViewState.IdRef="Sequence_14">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="variable1" />
                        <Variable x:TypeArguments="x:String" Name="extractedValue" />
                        <Variable x:TypeArguments="x:String" Name="extractedName" />
                        <Variable x:TypeArguments="x:String" Name="extTableRow" />
                        <Variable x:TypeArguments="x:String" Name="scoreStatus" />
                        <Variable x:TypeArguments="x:Int32" Name="extractedTabIndex" />
                      </Sequence.Variables>
                      <ui:GetAttribute ContinueOnError="{x:Null}" Attribute="value" DisplayName="Get Test ID  value (e.g. IELTS or TOFEL)" sap2010:WorkflowViewState.IdRef="GetAttribute_2">
                        <ui:GetAttribute.Result>
                          <OutArgument x:TypeArguments="x:String">[extractedValue]</OutArgument>
                        </ui:GetAttribute.Result>
                        <ui:GetAttribute.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[dynamicSelector]" WaitForReady="INTERACTIVE" />
                        </ui:GetAttribute.Target>
                      </ui:GetAttribute>
                      <ui:GetAttribute ContinueOnError="{x:Null}" Attribute="name" DisplayName="Get Attribute name for Test ID" sap2010:WorkflowViewState.IdRef="GetAttribute_1">
                        <ui:GetAttribute.Result>
                          <OutArgument x:TypeArguments="x:String">[extractedName]</OutArgument>
                        </ui:GetAttribute.Result>
                        <ui:GetAttribute.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[dynamicSelector]" WaitForReady="INTERACTIVE" />
                        </ui:GetAttribute.Target>
                      </ui:GetAttribute>
                      <ui:GetAttribute ContinueOnError="{x:Null}" Attribute="tabindex" DisplayName="Get Tab Index for Test ID" sap2010:WorkflowViewState.IdRef="GetAttribute_5">
                        <ui:GetAttribute.Result>
                          <OutArgument x:TypeArguments="x:Int32">[extractedTabIndex]</OutArgument>
                        </ui:GetAttribute.Result>
                        <ui:GetAttribute.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[dynamicSelector]" WaitForReady="INTERACTIVE" />
                        </ui:GetAttribute.Target>
                      </ui:GetAttribute>
                      <Assign DisplayName="Dynamic selector - Score Status" sap2010:WorkflowViewState.IdRef="Assign_5">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[dynamicSelector]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["&lt;webctrl id='"+extractedName.Substring(0,9)+"WRK_UQ_SCORE_STATUS$"+tableIndex.ToString+"' tag='SELECT'/&gt;"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:GetAttribute ContinueOnError="{x:Null}" Attribute="selecteditem" DisplayName="Get Score Status value" sap2010:WorkflowViewState.IdRef="GetAttribute_4">
                        <ui:GetAttribute.Result>
                          <OutArgument x:TypeArguments="x:String">[scoreStatus]</OutArgument>
                        </ui:GetAttribute.Result>
                        <ui:GetAttribute.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[dynamicSelector]" WaitForReady="INTERACTIVE" />
                        </ui:GetAttribute.Target>
                      </ui:GetAttribute>
                      <If Condition="[extractedValue.Trim=&quot;IELTS&quot; AND  (scoreStatus.trim =&quot;Not yet reviewed&quot; OR ScoreStatus.Length =1)]" DisplayName="Check if Test ID is 'IELTS' and Score Status is 'Not yet reviewed' or blank" sap2010:WorkflowViewState.IdRef="If_4">
                        <If.Then>
                          <Sequence DisplayName="If yes, set TableIndex, ScoreIndex and Flag" sap2010:WorkflowViewState.IdRef="Sequence_16">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:Int32" Name="tabIndex" />
                              <Variable x:TypeArguments="x:Boolean" Name="isExpand" />
                              <Variable x:TypeArguments="x:String" Name="extractedRowNo" />
                            </Sequence.Variables>
                            <Assign DisplayName="Test Table Index" sap2010:WorkflowViewState.IdRef="Assign_8">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_TableIndex]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[extractedName(extractedName.Length -1).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Dynamic Selector for TRF Number " sap2010:WorkflowViewState.IdRef="Assign_12">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[dynamicSelector]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["&lt;webctrl id='"+"STDNT_TEST_COMP$expand$"+tableIndex.ToString+"' tag='A'/&gt;"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:GetAttribute ContinueOnError="{x:Null}" Attribute="aria-expanded" DisplayName="Check If Test Component is collapsed" sap2010:WorkflowViewState.IdRef="GetAttribute_7">
                              <ui:GetAttribute.Result>
                                <OutArgument x:TypeArguments="x:Boolean">[isExpand]</OutArgument>
                              </ui:GetAttribute.Result>
                              <ui:GetAttribute.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[dynamicSelector]" WaitForReady="INTERACTIVE" />
                              </ui:GetAttribute.Target>
                            </ui:GetAttribute>
                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Warn" Message="[&quot;DS for expand button&quot;+dynamicSelector+&quot;...............&quot; + isExpand.ToString]" />
                            <Assign DisplayName="Tab Index for Test Component  " sap2010:WorkflowViewState.IdRef="Assign_9">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[tabIndex]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[extractedTabIndex+21]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[Not isExpand]" DisplayName="If collapsed, click to expand" sap2010:WorkflowViewState.IdRef="If_5">
                              <If.Then>
                                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click to expand Test Components" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                  <ui:Click.CursorPosition>
                                    <ui:CursorPosition Position="Center">
                                      <ui:CursorPosition.OffsetX>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetX>
                                      <ui:CursorPosition.OffsetY>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetY>
                                    </ui:CursorPosition>
                                  </ui:Click.CursorPosition>
                                  <ui:Click.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[dynamicSelector]" WaitForReady="COMPLETE" />
                                  </ui:Click.Target>
                                </ui:Click>
                              </If.Then>
                            </If>
                            <Assign DisplayName="Dynamic Selector for Tab Index " sap2010:WorkflowViewState.IdRef="Assign_11">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[dynamicSelector]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["&lt;webctrl tabindex='"+tabIndex.ToString+"'/&gt;"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:GetAttribute ContinueOnError="{x:Null}" Attribute="id" DisplayName="Get Attribute - Test Component " sap2010:WorkflowViewState.IdRef="GetAttribute_6">
                              <ui:GetAttribute.Result>
                                <OutArgument x:TypeArguments="x:String">[extractedRowNo]</OutArgument>
                              </ui:GetAttribute.Result>
                              <ui:GetAttribute.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[dynamicSelector]" WaitForReady="INTERACTIVE" />
                              </ui:GetAttribute.Target>
                            </ui:GetAttribute>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_ScoreIndex]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[extractedRowNo(extractedRowNo.Length -1).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Set Flag to False" sap2010:WorkflowViewState.IdRef="Assign_6">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[notFound]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[out_TableIndex+&quot;---------&quot;+ out_ScoreIndex]" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Assign DisplayName="Set Flag to True" sap2010:WorkflowViewState.IdRef="Assign_7">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[notFound]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                </If>
                <Assign DisplayName="Assign - increment index" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[tableIndex]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[tableIndex+1]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </DoWhile>
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
    </ui:BrowserScope>
    <sads:DebugSymbol.Symbol>d2NDOlxVc2Vyc1x1cW1ndXB0MVxEb2N1bWVudHNcVWlQYXRoXFJwYVVpUGF0aFByb2Nlc3NcUHJvY2Vzc2VzXElBQV9JRUxUU1xTSS1uZXRcTmF2VG9JRUxUU1RUZXN0LnhhbWxRTAOdAg4CAQFUBZsCFwIBAlSpAlToAgMBgQFU8wJU/gICAX9aC5gCFgIBA1sNlwIXAgEEXT1dQAIBBV8iXz4CAXxgD5YCGgIBBmERaBoCAXdpEW0mAgFxbhGNAhYCAQyOAhGVAhoCAQdmPGaOAQIBemM9Y04CAXhrjwFrogECAXVrrQFrswECAXRpVGllAgFybh9uMAIBDXAViwIgAgEPkwI7kwJJAgEKkAI8kAJIAgEIeReAASkCAWuBAReIASkCAWWJAReQASkCAV+RAReYASACAVmZARegASkCAVOhAReKAhwCARB5TXlUAgFue0N7UwIBbH5xfoQBAgFvgQFNgQFTAgFogwFDgwFSAgFmhgFxhgGEAQIBaYkBTYkBVwIBYosBQosBVQIBYI4BcY4BhAECAWOWAUKWAbQBAgFckwFDkwFUAgFamQFNmQFbAgFWmwFDmwFQAgFUngFxngGEAQIBV6EBJaEBnQECARGjARv+ASYCARmBAhuIAiQCARWpAR2wASYCAU2xAR24ASYCAUi5AR3AAS8CAULBAR3BAfIBAgE+wgEdyQEmAgE5ygEd3AEiAgEz3QEd5AEmAgEu5QEd7AEvAgEo7QEd9AEmAgEi9QEd/AEmAgEe/QEd/QHGAQIBGoYCR4YCSwIBGIMCSIMCUgIBFq4BSK4BeQIBUKsBSasBWQIBTrYBSLYBmwECAUuzAUmzAVoCAUm5AVO5AWICAUW7AUq7AVQCAUO+AXe+AYoBAgFGwQGLAcEB7wECAT/HAUfHAV0CATzEAUjEAVICATrKASvKATsCATTMASHaASwCATbiAUjiAX0CATHfAUnfAVoCAS/lAVPlAVcCASvnAUnnAVkCASnqAXfqAYoBAgEs8gFI8gF7AgEl7wFJ7wFZAgEj+gFJ+gFOAgEh9wFK9wFUAgEf/QGLAf0BwwECARvYAXvYAY4BAgE3</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="900,60" />
      <sap2010:ViewStateData Id="UiElementExists_1" sap:VirtualizedContainerService.HintSize="900,106" />
      <sap2010:ViewStateData Id="GetAttribute_2" sap:VirtualizedContainerService.HintSize="753,96">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetAttribute_1" sap:VirtualizedContainerService.HintSize="753,96">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetAttribute_5" sap:VirtualizedContainerService.HintSize="753,96" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="753,60" />
      <sap2010:ViewStateData Id="GetAttribute_4" sap:VirtualizedContainerService.HintSize="753,96">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="GetAttribute_7" sap:VirtualizedContainerService.HintSize="464,96" />
      <sap2010:ViewStateData Id="LogMessage_18" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Click_4" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,215">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="GetAttribute_6" sap:VirtualizedContainerService.HintSize="464,96" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="LogMessage_16" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="486,1473">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="753,1620">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="775,2388">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="900,2535" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="900,60" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="922,3005">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_1" sap:VirtualizedContainerService.HintSize="948,3166">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="970,3290">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BrowserScope_1" sap:VirtualizedContainerService.HintSize="984,3436" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="1006,3722">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="NavToChecklistManagementStudent_1" sap:VirtualizedContainerService.HintSize="1046,3802">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
            <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>