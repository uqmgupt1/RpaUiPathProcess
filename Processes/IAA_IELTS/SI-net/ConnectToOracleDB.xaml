<Activity mc:Ignorable="sap sap2010 sads" x:Class="ConnectToOracleDB"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:sdc="clr-namespace:System.Data.Common;assembly=System.Data"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_OperatingEnvironment" Type="InArgument(x:String)" />
    <x:Property Name="in_MaxQueueItemAssetName" Type="InArgument(x:String)" />
    <x:Property Name="in_CloudHostname" Type="InArgument(x:String)" />
    <x:Property Name="in_LocalHostname" Type="InArgument(x:String)" />
    <x:Property Name="in_dbServiceName" Type="InArgument(x:String)" />
    <x:Property Name="in_dbPortNumber" Type="InArgument(x:String)" />
    <x:Property Name="in_QueueName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ConnectToOracleDB_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Data.Common</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ConnectToOracleDB" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="conn" />
      <Variable x:TypeArguments="x:String" Name="dbquery" />
    </Sequence.Variables>
    <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="ConnectToOracleDB" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="ConnectionString" />
            <Variable x:TypeArguments="x:String" Name="ProviderName" />
            <Variable x:TypeArguments="x:String" Name="out_Username" />
            <Variable x:TypeArguments="ss:SecureString" Name="out_Password" />
            <Variable x:TypeArguments="x:String" Name="out_Plaintext" />
            <Variable x:TypeArguments="sd:DataTable" Name="resultSet" />
            <Variable x:TypeArguments="x:String" Name="hostname" />
            <Variable x:TypeArguments="x:Int32" Name="rownum" />
          </Sequence.Variables>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[&quot;Starting connectToOracleDB&quot;]" />
          <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="IAA_IELTS_SPOKED_DB" DisplayName="Get Credential" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[out_Password]" Username="[out_Username]" />
          <Assign DisplayName="Private: Assign plaintext for activities" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_Plaintext]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[New System.Net.NetworkCredential(out_Username, out_Password).Password]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[ProviderName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">System.Data.OracleClient</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[in_OperatingEnvironment &lt;&gt; &quot;DEV&quot;]" DisplayName="Assign Cloud hostname for all environment except DEV " sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <Sequence DisplayName="For TEST, STAGING and PROD environment" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <Assign DisplayName="Assign hostname" sap2010:WorkflowViewState.IdRef="Assign_12">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[hostname]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[in_CloudHostname]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Private: Assign - Robot" sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[ConnectionString]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[String.Format("Data Source=(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST="+in_CloudHostname+")(PORT="+in_dbPortNumber+")))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME="+in_dbServiceName+")));User Id={0};Password={1};",out_Username,out_Plaintext)]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Check if Dev Orchestrator or local user" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="robotUsername" />
                </Sequence.Variables>
                <Assign DisplayName="Get Robot Username" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[robotUsername]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[System.Security.Principal.WindowsIdentity.GetCurrent().Name.Replace(System.Environment.UserDomainName+"\","")]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:LogMessage DisplayName="Log Message" Level="Info" Message="[&quot;Robot user is : &quot;+robotUsername]" sap2010:WorkflowViewState.IdRef="LogMessage_18" />
                <Assign sap2010:Annotation.AnnotationText="For DEV environment, check if process running from dev ocrchestrator or local user by identifying username. &#xA;&#xA;&#xA;If username contains 'RobotUser' than process running on orchestrator robot else local machine " DisplayName="Assign - Hostname " sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[hostname]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[if(robotUsername.Contains("RobotUser"),in_CloudHostname, in_LocalHostname )]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[ConnectionString]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[String.Format("Data Source=(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST="+hostname+")(PORT="+in_dbPortNumber+")))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME="+in_dbServiceName+")));User Id={0};Password={1};",out_Username,out_Plaintext)]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Connecting to database server hostname : &quot;+hostname]" />
          <ui:DatabaseConnect DatabaseConnection="[conn]" DisplayName="Connect " sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="[ProviderName]" ConnectionString="[ConnectionString]" />
          <Assign DisplayName="Assign out_Plaintext to Nothing" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_Plaintext]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Connection successful, executing query&quot;]" />
          <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[dbquery]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String" xml:space="preserve">["select  ai.ADM_APPL_NBR, ai.ADMIT_TERM, ai.EMPLID, ai.FIRST_NAME, ai.LAST_NAME, ai.UQ_TRF_NO, ai.APPL_PROG_NBR,ai.ADM_APPL_DT from IFACE_RPA.APPL_IELTS ai join IFACE_RPA.APPL_IELTS_TST_CMP_SC aitcs on ai.EMPLID = aitcs.EMPLID and ai.TEST_ID = aitcs.TEST_ID and ai.TEST_DT = aitcs.TEST_DT where aitcs.TEST_COMPONENT='IELOA' and ai.ADMIT_TERM IS NOT NULL order by ai.ADM_APPL_DT desc"]</InArgument>
            </Assign.Value>
          </Assign>
          <TryCatch DisplayName="Try Catch - Get asset IAA_IELTS_MaxOueueItem" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <TryCatch.Try>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
                <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[in_MaxQueueItemAssetName]" DisplayName="Get Asset - MaxQueueItemAsset" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                  <ui:GetRobotAsset.Value>
                    <OutArgument x:TypeArguments="x:Int32">[rownum]</OutArgument>
                  </ui:GetRobotAsset.Value>
                </ui:GetRobotAsset>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[dbquery]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["select * from ( "+dbquery +" ) where rownum &lt;="+ rownum.ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Unable to find&quot;+in_MaxQueueItemAssetName+&quot; assets&quot;]" />
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
            <TryCatch.Finally>
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Trace" Message="[&quot;DB query to execute : &quot;+dbquery]" />
            </TryCatch.Finally>
          </TryCatch>
          <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[resultSet]" DisplayName="Execute Query" ExistingDbConnection="[conn]" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" Sql="[dbquery]">
            <ui:ExecuteQuery.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:ExecuteQuery.Parameters>
          </ui:ExecuteQuery>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;connected to DB&quot; + &quot;Number of row : &quot; +resultSet.Rows.Count.ToString]" />
          <ui:DatabaseDisconnect DatabaseConnection="[conn]" DisplayName="Disconnect" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_3" />
          <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[resultSet]" DisplayName="For Each Row in ResultSet " sap2010:WorkflowViewState.IdRef="ForEachRow_1">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Add to Queue " sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Adding queue item, StudentID : &quot;+row(0).ToString]" />
                  <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item" sap2010:WorkflowViewState.IdRef="AddQueueItem_1" Priority="Normal" QueueType="[in_QueueName]" Reference="[row(2).ToString]">
                    <ui:AddQueueItem.ItemInformation>
                      <InArgument x:TypeArguments="x:String" x:Key="ApplicationNbr">[row(0).ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="AdmitTerm">[row(1).ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="StudentID">[row(2).ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="FirstName">[row(3).ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="LastName">[row(4).ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="TRFNumber">[row(5).ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="AppProgNbr">[row(6).ToString]</InArgument>
                    </ui:AddQueueItem.ItemInformation>
                  </ui:AddQueueItem>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
          </ui:ForEachRow>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Warn" Message="[exception.Message.ToString]" />
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[exception.StackTrace.ToString]" />
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="s:SystemException" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <ActivityAction x:TypeArguments="s:SystemException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:SystemException" Name="" />
            </ActivityAction.Argument>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="sdc:DbException" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <ActivityAction x:TypeArguments="sdc:DbException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sdc:DbException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Warn" Message="[exception.Message.ToString]" />
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Error" Message="[exception.StackTrace.ToString]" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <sads:DebugSymbol.Symbol>d2VDOlxVc2Vyc1x1cW1ndXB0MVxEb2N1bWVudHNcVWlQYXRoXFJwYVVpUGF0aFByb2Nlc3NcUHJvY2Vzc2VzXElBQV9JRUxUU1xTSS1uZXRcQ29ubmVjdFRvT3JhY2xlREIueGFtbF5YA6YCDgIBAV0FpAIQAgECXwmDAhQCAQ+LAg2OAhgCAQidAg2gAhgCAQNqC2qmAQMBjgFrC2vhAQMBiAFsC3MUAwGCAXQLexQCAX58C7EBEAIBVLIBC7IBvQECAVGzAQuzAcwBAgFKtAELuwEUAgFGvAELvAGxAQIBRL0BC8QBFAIBQMUBC+QBFgIBLeUBC+kBHQIBJuoBC+oB2AECASTrAQvrAZABAgEh7AELggIbAgEQjAIPjAKdAQIBDI0CD40CoQECAQmeAg+eAp4BAgEGnwIPnwKiAQIBBGp5aqMBAwGPAWtBa1YDAY0Ba84Ba94BAwGLAWu0AWvEAQMBiQFxNnF9AwGFAW43bkYDAYMBeTZ5TgMBgQF2N3ZFAgF/fBl8TQIBVX4PjwEaAgFvkgEPrwEaAgFXsgF4sgG6AQIBUrMBkwGzAaMBAgFPswG1AbMByQECAU2zATKzAToCAUu5ATa5AT8CAUm2ATe2AUYCAUe8AXi8Aa4BAgFFvwE3vwFAAgFBxwEP1QEaAgE04gEP4gGvAQIBMd0BE90BzwECAS7lAagB5QGwAQIBK+UBaeUBdgIBKeUB5gHlAfEBAgEn6gF46gHVAQIBJesBNesBPQIBIuwBPOwBSQIBH/IBEf8BHAIBEYwCfIwCmgECAQ2NAn2NAp4BAgEKngJ9ngKbAQIBB58Cfp8CnwECAQV/EYYBGgIBeYcBEY4BGgIBcJYBEZ0BGgIBa54BEZ4BsAECAWifARGmARoCAWGnARGuARoCAVjIARHMASQCATvNARHUARoCATXiAX7iAawBAgEy3QGBAd0BzAECAS/zARPzAcIBAgEd9AET/gElAgEShAE8hAFOAgF8gQE9gQFHAgF6jAE8jAG+AgIBc4kBPYkBTwIBcZsBPJsBqwECAW6YAT2YAUwCAWyeAU+eAX0CAWmkATykAYkBAgFkoQE9oQFHAgFirAE8rAG2AgIBW6kBPakBTwIBWcoBPMoBRAIBPsgBQsgBXgIBPNIBPNIBggECATjPAT3PAUYCATbzAYAB8wG/AQIBHvQB3AH0Ae8BAgEc+gFP+gFgAgEb9gFV9gFmAgEa9AHBAfQB0QECARj8AVH8AWICARf3AVD3AWECARb4AVD4AWECARX5AVD5AWECART7AVD7AWECARM=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="625,91" />
      <sap2010:ViewStateData Id="GetRobotCredential_1" sap:VirtualizedContainerService.HintSize="625,22" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="625,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="625,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_18" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="314,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="336,662">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="625,810">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="625,91" />
      <sap2010:ViewStateData Id="DatabaseConnect_1" sap:VirtualizedContainerService.HintSize="625,59" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="625,60" />
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="625,91" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="625,60" />
      <sap2010:ViewStateData Id="GetRobotAsset_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="264,246">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_16" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_4" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_17" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="625,473" />
      <sap2010:ViewStateData Id="ExecuteQuery_2" sap:VirtualizedContainerService.HintSize="531,88" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="531,91" />
      <sap2010:ViewStateData Id="DatabaseDisconnect_3" sap:VirtualizedContainerService.HintSize="531,22" />
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="AddQueueItem_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="531,425" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="647,3187">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="336,346">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="557,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="557,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="336,346">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="557,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="665,3458">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="687,3582">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ConnectToOracleDB_1" sap:VirtualizedContainerService.HintSize="727,3662" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>