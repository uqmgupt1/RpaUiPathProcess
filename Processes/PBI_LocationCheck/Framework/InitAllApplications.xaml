<Activity mc:Ignorable="sap sap2010 sads" x:Class="Initialize_Applications"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:um="clr-namespace:UiPath.Mail;assembly=UiPath.Mail"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="out_emailMessage" Type="OutArgument(snm:MailMessage)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Initialization_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>TimeSpan2</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: Open and initialize application as needed.&#xA;&#xA;Pre Condition: N/A&#xA;Post Condtion: Applications opened" DisplayName="Initialization Sequence" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="attachFileName" />
      <Variable x:TypeArguments="x:Boolean" Name="isEmailAvailable" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log App Initialization message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Opening applications...&quot;]" />
    <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetExchangeMail workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="EmailExchange\GetExchangeMail.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_CredentialsAsset">[in_Config("SSO_rpa00001")]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_ServerName">[in_Config("EmailExchangeServer")]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_SenderAddress">[in_Config("PBI_LocationCheck_SenderEmail")]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_FileLocation">[in_Config("Folder_Location")]</InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="out_AttachFileName">[attachFileName]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="out_EmailSubject" />
            <InArgument x:TypeArguments="x:String" x:Key="in_SubjectPrefix">[in_Config("Subject_Prefix")]</InArgument>
            <OutArgument x:TypeArguments="snm:MailMessage" x:Key="out_MailMessage">[out_emailMessage]</OutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_FileName">[in_Config("File_Name")]</InArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="in_NumberOfEmails">[CInt(in_Config("NumberOfEmails"))]</InArgument>
            <OutArgument x:TypeArguments="x:Boolean" x:Key="out_isNewEmail">[isEmailAvailable]</OutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_OperatingEnvironment">[in_Config("OperatingEnvironment")]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="um:ExchangeException" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <ActivityAction x:TypeArguments="um:ExchangeException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="um:ExchangeException" Name="exception" />
            </ActivityAction.Argument>
            <Throw DisplayName="Throw ExchangeException" Exception="[new ApplicationException(&quot;Error while trying to retrive email from Exchange server : '&quot;+in_Config(&quot;EmailExchangeServer&quot;)+&quot;'&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_2" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <If Condition="[out_emailMessage isNot Nothing AndAlso out_emailMessage.Attachments.Any AndAlso attachFileName.Trim = in_Config(&quot;File_Name&quot;).ToString]" DisplayName="Check if new email found and input CSV downloaded successfully " sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke LoginImmiPortal workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="ImmiPortal\LoginImmiPortal.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_ImmiPortal_URL">[in_Config("Immi_Website")]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_CredentialsAsset">[in_Config("IAA_Vevo_ImmiAccount")]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Check email and throw exception" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <If Condition="[isEmailAvailable]" DisplayName="If email available, than move to archive " sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Sequence DisplayName="Notify sender and move email to archive" sap2010:WorkflowViewState.IdRef="Sequence_12">
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendEmail workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="EmailExchange\SendEmail.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ServerName">[in_Config("EmailExchangeServer")]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_MessageBody">[in_Config("EmailMsg_NoAttachment")]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ReceipentEmail">[out_emailMessage.Sender.Address+";"+in_Config("Email_AlertRecipient")]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_FileAttachment" />
                    <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">["RE: "+out_emailMessage.Subject.ToString]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_CredentialsAsset">[in_Config("SSO_rpa00001")]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_OperatingEnvironment">[in_Config("OperatingEnvironment")]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke MoveEmailToArchive workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="EmailExchange\MoveEmailToArchive.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ArchiveFolder">[in_Config("Archive_Folder")]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ServerName">[in_Config("EmailExchangeServer")]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_ExchangeCredentials">[in_Config("SSO_rpa00001")]</InArgument>
                    <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_TransactionMessage">[out_emailMessage]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_EmailAlertRecipient">[in_Config("Email_AlertRecipient")]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_EmailAlertSubject">[in_Config("Email_Alert_Subject")]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_EmailAlertMessageBody">[in_Config("EmailMsg_InvalidEmail_MoveFolder")]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </If.Then>
            <If.Else>
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;No new email found&quot;]" />
            </If.Else>
          </If>
          <Throw DisplayName="Throw NoEmailToProcess" Exception="[new BusinessRuleException(in_Config(&quot;NoEmail_Message&quot;))]" sap2010:WorkflowViewState.IdRef="Throw_1" />
        </Sequence>
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>d3JDOlxVc2Vyc1x1cW1ndXB0MVxEb2N1bWVudHNcVWlQYXRoXFJwYVVpUGF0aFByb2Nlc3NcUHJvY2Vzc2VzXFBCSV9Mb2NhdGlvbkNoZWNrXEZyYW1ld29ya1xJbml0QWxsQXBwbGljYXRpb25zLnhhbWwyTgOhAQ4CAQFTBVOvAQIBTVQFcRACATJyBZ8BCgIBAlOFAVOsAQIBTlYJZSECATVtDW2QAgIBM3ITcqYBAgEDdAl5IQIBLHwJnQEUAgEEXFBcYAIBS1lKWWwCAUleTV5qAgFHY1RjdwIBRVtMW2oCAUNYUFhrAgFBYk1iXwIBP2FNYXACAT1aTVp5AgE7YEhgYAIBOV9UX2YCATdWwAFW5AECATZtRG3jAQIBNHdQd3MCATB2TnZpAgEudMABdOEBAgEtfQubARACAQecAQucAbMBAgEFfRl9LQIBCH8PlgEaAgEMmQEPmQGhAQIBCpwBQZwBhgECAQaAARGKASkCAR2LARGVASkCAQ2ZAXyZAZ4BAgELggFSggF0AgEqhgFUhgF+AgEoiAFciAF/AgEmhAFWhAGdAQIBI4cBWIcBcwIBIYABwgGAAeABAgEggwFTgwF3AgEekgFZkgF7AgEbjgFSjgF0AgEZkAFhkAFzAgEXjwFbjwF2AgEVkQFbkQF+AgETkwFdkwGMAQIBEY0BVY0BcgIBD4sBywGLAfIBAgEO</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="1036,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="1036,314">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="675,486" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="675,22" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="697,672">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="1036,820" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="1058,1501">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Initialization_1" sap:VirtualizedContainerService.HintSize="1098,1581" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>