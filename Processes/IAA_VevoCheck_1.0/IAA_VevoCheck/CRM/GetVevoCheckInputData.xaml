<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetVevoCheckDetails"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="caseRef" Type="OutArgument(x:String)" />
    <x:Property Name="VevoCheckDetails" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetVevoCheckDetails_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetVevoCheckInputData" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="VevoInputArray" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Start GetVevoCheckInputData.xaml&quot;]" />
    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser 'chrome.exe Oracle'" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="31ad616ce4dc336c9ca135f59d56735c" Selector="&lt;html app='chrome.exe' title='Oracle ® Service Cloud*' /&gt;">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Extract Vevo Check details" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="textData" />
              <Variable x:TypeArguments="x:Boolean" Default="False" Name="isFamilyNameAvailable" />
              <Variable x:TypeArguments="x:Boolean" Default="False" Name="isDoBAvailable" />
              <Variable x:TypeArguments="x:Boolean" Default="False" Name="isPassportNoAvailable" />
              <Variable x:TypeArguments="x:Boolean" Default="False" Name="isCountryAvailable" />
            </Sequence.Variables>
            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get CaseRef" sap2010:WorkflowViewState.IdRef="GetValue_1">
              <ui:GetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="a7c3c04a7acced49212ae0f212e30cff" Selector="&lt;webctrl tag='INPUT' aaname='Reference*' type='text' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:GetValue.Target>
              <ui:GetValue.Value>
                <OutArgument x:TypeArguments="x:String">[caseRef]</OutArgument>
              </ui:GetValue.Value>
            </ui:GetValue>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[VevoCheckDetails]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(Of String, String)]</InArgument>
              </Assign.Value>
            </Assign>
            <p:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[VevoCheckDetails]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_1" Key="CaseRefence" Value="[caseRef]" />
            <ui:GetFullText DisplayName="Full Text from Case Reference" sap2010:WorkflowViewState.IdRef="GetFullText_1" IgnoreHidden="False">
              <ui:GetFullText.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="70e59342ce5660d0c15c678aad48245a" Selector="&lt;webctrl tag='DIV' class='threadsList' parentclass='threads' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:GetFullText.Target>
              <ui:GetFullText.Text>
                <OutArgument x:TypeArguments="x:String">[textData]</OutArgument>
              </ui:GetFullText.Text>
            </ui:GetFullText>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[VevoInputArray]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[textData.Split(Environment.NewLine.ToArray,StringSplitOptions.RemoveEmptyEntries)]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[VevoInputArray.Contains(&quot;Family Name:&quot;)]">
              <If.Then>
                <Sequence>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[isFamilyNameAvailable]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                    <sap2010:WorkflowViewState.IdRef>Assign_12</sap2010:WorkflowViewState.IdRef>
                  </Assign>
                  <If Condition="[isFamilyNameAvailable]">
                    <If.Then>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_13" />
                    </If.Then>
                    <If.Else>
                      <Throw sap2010:WorkflowViewState.IdRef="Throw_1" />
                    </If.Else>
                    <sap2010:WorkflowViewState.IdRef>If_10</sap2010:WorkflowViewState.IdRef>
                  </If>
                  <sap2010:WorkflowViewState.IdRef>Sequence_13</sap2010:WorkflowViewState.IdRef>
                </Sequence>
              </If.Then>
              <If.Else>
                <Throw sap2010:WorkflowViewState.IdRef="Throw_2" />
              </If.Else>
              <sap2010:WorkflowViewState.IdRef>If_11</sap2010:WorkflowViewState.IdRef>
            </If>
            <TryCatch DisplayName="Try Catch">
              <TryCatch.Try>
                <Sequence DisplayName="get Family Name" sap2010:WorkflowViewState.IdRef="Sequence_14" />
              </TryCatch.Try>
              <sap2010:WorkflowViewState.IdRef>TryCatch_1</sap2010:WorkflowViewState.IdRef>
            </TryCatch>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Error" Message="[VevoInputArray.Length.ToString]" />
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[VevoInputArray]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_8">
                    <If Condition="[item.Contains(&quot;Family Name:&quot;) AND isFamilyNameAvailable = False]" DisplayName="Family Name label exists " sap2010:WorkflowViewState.IdRef="If_2">
                      <If.Then>
                        <Sequence DisplayName="Extract Family Name" sap2010:WorkflowViewState.IdRef="Sequence_9">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="FName" />
                            <Variable x:TypeArguments="x:String" Name="PNumber" />
                            <Variable x:TypeArguments="x:String" Name="PCountry" />
                            <Variable x:TypeArguments="x:String" Name="DoB" />
                            <Variable x:TypeArguments="x:String" Name="variable2" />
                          </Sequence.Variables>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[FName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[item.Replace("Family Name:", "")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[isFamilyNameAvailable]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Value of isFamilyNameAvailable....&quot; +isFamilyNameAvailable.ToString +&quot;....found:&quot; +item]" />
                          <p:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[VevoCheckDetails]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_2" Key="FamilyName" Value="[FName]" />
                        </Sequence>
                      </If.Then>
                    </If>
                    <If Condition="[item.Contains(&quot;Date of Birth:&quot;) AND isDoBAvailable = False]" DisplayName="Date of Birth label exists " sap2010:WorkflowViewState.IdRef="If_3">
                      <If.Then>
                        <Sequence DisplayName="Extract DoB" sap2010:WorkflowViewState.IdRef="Sequence_10">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="FName" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="DoB" />
                          </Sequence.Variables>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:GenericValue">[DoB]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:GenericValue">[item.Replace("Date of Birth:","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[isDoBAvailable]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;found:&quot; +item]" />
                          <p:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[VevoCheckDetails]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_3" Key="DateOfBirth" Value="[DoB]" />
                        </Sequence>
                      </If.Then>
                    </If>
                    <If Condition="[item.Contains(&quot;Passport Number:&quot;) AND isPassportNoAvailable = False]" DisplayName="Passport Number label exists " sap2010:WorkflowViewState.IdRef="If_4">
                      <If.Then>
                        <Sequence DisplayName="Extract Passport Number" sap2010:WorkflowViewState.IdRef="Sequence_11">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="FName" />
                            <Variable x:TypeArguments="x:String" Name="PNumber" />
                            <Variable x:TypeArguments="x:String" Name="PCountry" />
                            <Variable x:TypeArguments="x:String" Name="DoB" />
                            <Variable x:TypeArguments="x:String" Name="variable2" />
                          </Sequence.Variables>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[PNumber]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[item.Replace("Passport Number:","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[isPassportNoAvailable]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;found:&quot; +item]" />
                          <p:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[VevoCheckDetails]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_4" Key="PassportNumber" Value="[PNumber]" />
                        </Sequence>
                      </If.Then>
                    </If>
                    <If Condition="[item.Contains(&quot;Country of Document:&quot;) AND isCountryAvailable = False]" DisplayName="Country of Document label exists " sap2010:WorkflowViewState.IdRef="If_5">
                      <If.Then>
                        <Sequence DisplayName="Extract Country of Document" sap2010:WorkflowViewState.IdRef="Sequence_12">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="FName" />
                            <Variable x:TypeArguments="x:String" Name="PNumber" />
                            <Variable x:TypeArguments="x:String" Name="PCountry" />
                            <Variable x:TypeArguments="x:String" Name="DoB" />
                            <Variable x:TypeArguments="x:String" Name="variable2" />
                          </Sequence.Variables>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[PCountry]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[item.Replace("Country of Document:","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[isCountryAvailable]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;found:&quot; +item]" />
                          <p:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[VevoCheckDetails]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_5" Key="CountryOfDocument" Value="[PCountry]" />
                        </Sequence>
                      </If.Then>
                    </If>
                    <If Condition="[isFamilyNameAvailable AND isPassportNoAvailable AND isDoBAvailable AND isCountryAvailable]" sap2010:WorkflowViewState.IdRef="If_9">
                      <If.Then>
                        <ui:Break sap2010:WorkflowViewState.IdRef="Break_1" />
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
    </ui:BrowserScope>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;End GetVevoCheckInputData.xaml for Case Ref : &quot; +caseRef]" />
    <sads:DebugSymbol.Symbol>d3xDOlxVc2Vyc1x1cW1ndXB0MVxEb2N1bWVudHNcVWlQYXRoXFJwYVVpUGF0aFByb2Nlc3NcUHJvY2Vzc2VzXElBQV9WZXZvQ2hlY2tfMS4wXElBQV9WZXZvQ2hlY2tcQ1JNXEdldFZldm9DaGVja0lucHV0RGF0YS54YW1sbUoDsQIOAgEBTgVOpQEDAZsBTwWuAhcCAQWvAgWvArwBAgECTnJOogEDAZwBT6MCT+QCAwGaAVULqwIWAgEGrwJyrwK5AQIBA1g9WEQCAQpZPVlEAgEJWj1aRAIBCFs9W0QCAQddDWQbAwGWAWUNbBYDAZIBbQ1t4QEDAYwBbg11HgMBiAF2DX0WAwGEAX4NmgESAgF3mwENoAEYAgF1oQENoQGhAQIBcqIBDaoCGgIBC2I5YkIDAZcBX6ABX98BAwGZAWpSanUDAZUBZ1NnZQMBkwFt0wFt3gEDAZABbVBtZAMBjgFtvwFtzAEDAY0BcKABcOcBAwGLAXM5c0MDAYkBezp7jQEDAYcBeDt4SwMBhQF+G35QAgF4gAERlAEcAgF6lwERlwFEAgF5nQERnQFpAgF2oQF8oQGeAQIBc6IBmAGiAaoBAgFwqAETpwIeAgEMgQETiQEcAwGAAYoBE5IBGAIBe6kBFccBGgIBWMgBFeMBGgIBQuQBFYICGgIBK4MCFaECGgIBFKICFaYCGgIBDYYBP4YBQwMBgwGDAUCDAVcDAYEBigEhigE6AgF8jAEXjAFNAgF/jwEXjwFKAgF+qQEjqQFwAgFZqwEZxQEkAgFcyAEjyAFrAgFDygEZ4QEkAgFG5AEj5AF0AgEs5gEZgAIkAgEvgwIjgwJ1AgEVhQIZnwIkAgEYogIjogKAAQIBDqQCGaQCTwIBE7MBG7oBJAIBa7sBG8IBJAIBZ8MBG8MB+wECAWPEARvEAewBAgFdzwEb1gEkAgFT1wEb3gEkAgFP3wEb3wGoAQIBTOABG+AB6wECAUfuARv1ASQCAT32ARv9ASQCATn+ARv+AagBAgE2/wEb/wHyAQIBMI0CG5QCJAIBJpUCG5wCJAIBIp0CG50CqAECAR+eAhueAvYBAgEZuAFGuAFoAgFutQFHtQFOAgFswAFHwAFLAgFqvQFIvQFfAgFowwGIAcMB+AECAWTEAeABxAHpAQIBYcQBXsQBcgIBX8QBzQHEAdkBAgFe1AFN1AFwAgFW0QFO0QFTAgFU3AFH3AFLAgFS2QFI2QFYAgFQ3wGJAd8BpQECAU3gAeEB4AHoAQIBS+ABXuABcgIBSeABzQHgAdoBAgFI8wFG8wFrAgFA8AFH8AFQAgE++wFH+wFLAgE8+AFI+AFfAgE6/gGJAf4BpQECATf/AeQB/wHvAQIBNP8BXv8BcgIBMv8BzQH/Ad0BAgExkgJGkgJvAgEpjwJHjwJRAgEnmgJHmgJLAgEllwJIlwJcAgEjnQKJAZ0CpQECASCeAucBngLzAQIBHZ4CXp4CcgIBG54CzQGeAuABAgEa</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="747,91" />
      <sap2010:ViewStateData Id="GetValue_1" sap:VirtualizedContainerService.HintSize="714,106" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="714,60" />
      <sap2010:ViewStateData Id="AddToDictionary`2_1" sap:VirtualizedContainerService.HintSize="714,22" />
      <sap2010:ViewStateData Id="GetFullText_1" sap:VirtualizedContainerService.HintSize="714,106" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="714,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="467,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="467,208" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="489,432">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="714,580" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="200,99">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="714,304" />
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="714,91" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="AddToDictionary`2_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="336,477">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,625">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="AddToDictionary`2_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="336,477">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="AddToDictionary`2_4" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="336,477">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_13" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="AddToDictionary`2_5" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="336,477">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,624">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Break_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="464,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="486,1842">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="714,1976">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="736,3749">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BrowserScope_1" sap:VirtualizedContainerService.HintSize="747,3891" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="747,91" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="769,4277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetVevoCheckDetails_1" sap:VirtualizedContainerService.HintSize="809,4357" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>