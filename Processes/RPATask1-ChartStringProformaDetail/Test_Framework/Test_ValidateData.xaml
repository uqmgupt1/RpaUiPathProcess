<Activity mc:Ignorable="sap sap2010 sads" x:Class="Test_ValidateData" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Test_ValidateData_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Test_ValidateData" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="shDesc">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="oucFac" />
      <Variable x:TypeArguments="x:String" Name="oucSch" />
      <Variable x:TypeArguments="x:String" Name="oucSect" />
      <Variable x:TypeArguments="x:String" Name="oucSite" />
      <Variable x:TypeArguments="x:String" Name="uaOpal" />
      <Variable x:TypeArguments="x:String" Name="uaSite" />
      <Variable x:TypeArguments="x:String" Name="uaFund" />
      <Variable x:TypeArguments="x:String" Name="uaFunc" />
      <Variable x:TypeArguments="x:String" Name="proInt" />
      <Variable x:TypeArguments="x:String" Name="proDep" />
      <Variable x:TypeArguments="x:String" Name="proSub" />
      <Variable x:TypeArguments="x:String" Name="proJus" />
    </Sequence.Variables>
    <While sap2010:WorkflowViewState.IdRef="While_1">
      <While.Variables>
        <Variable x:TypeArguments="x:Int32" Default="0" Name="i" />
      </While.Variables>
      <While.Condition>[i &lt; 512]</While.Condition>
      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
        <Assign DisplayName="Assign oucFac" sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[oucFac]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[If(i mod 2 &gt; 0, "01", "")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign oucSch" sap2010:WorkflowViewState.IdRef="Assign_6">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[oucSch]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[If(i mod 4 &gt; 2, "234", "")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign oucSect" sap2010:WorkflowViewState.IdRef="Assign_7">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[oucSect]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[If(i mod 8 &gt; 4, "56", "")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign oucSite" sap2010:WorkflowViewState.IdRef="Assign_8">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[oucSite]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[If(i mod 16 &gt; 8, "78", "")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign uaOpal" sap2010:WorkflowViewState.IdRef="Assign_9">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[uaOpal]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[If(i mod 32 &gt; 16, "9012345", "")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign uaSite" sap2010:WorkflowViewState.IdRef="Assign_10">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[uaSite]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[If(i mod 64 &gt; 32, "67", "")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign uaFund" sap2010:WorkflowViewState.IdRef="Assign_11">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[uaFund]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[If(i mod 128 &gt; 64, "890", "")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign uaFunc" sap2010:WorkflowViewState.IdRef="Assign_12">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[uaFunc]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[If(i mod 256 &gt; 128, "12", "")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign shDesc" sap2010:WorkflowViewState.IdRef="Assign_5">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[shDesc]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[If(i mod 9 = 0, shDesc + Chr(33 + i mod 93), shDesc)]</InArgument>
          </Assign.Value>
        </Assign>
        <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_2">
          <TryCatch.Try>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ValidateData workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="ValidateData.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InOutArgument x:TypeArguments="x:String" x:Key="in_ShortDescription">[shDesc]</InOutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_OUCFaculty">[If(i mod 2 &gt; 0, oucFac, "")]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_OUCSchool">[If(i mod 4 &gt; 1, oucSch, "")]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_OUCSection">[oucSect]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_OUCSite">[oucSite]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_UAOpal">[uaOpal]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_UASite">[uaSite]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_UAFund">[uaFund]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_UAFunction">[uaFunc]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_ProformaIntegration">[proInt]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_ProformaDepartment">[proDep]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_ProformaSubdivision">[proSub]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_ProformaJustification">[proJus]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn" Message="[exception.Message + vbNewLine + shDesc]" />
                  <If Condition="[oucFac = &quot;&quot;]" DisplayName="If oucFac" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Then>
                      <ui:CheckTrue ErrorMessage="{x:Null}" DisplayName="Check oucFac" Expression="[exception.Message.Contains(&quot;Op Unit&quot;) And exception.Message.Contains(&quot;Faculty&quot;)]" sap2010:WorkflowViewState.IdRef="CheckTrue_1" />
                    </If.Then>
                  </If>
                  <If Condition="[oucSch = &quot;&quot;]" DisplayName="If oucSch" sap2010:WorkflowViewState.IdRef="If_3">
                    <If.Then>
                      <ui:CheckTrue ErrorMessage="{x:Null}" DisplayName="Check oucFac" Expression="[exception.Message.Contains(&quot;Op Unit&quot;) And exception.Message.Contains(&quot;School&quot;)]" sap2010:WorkflowViewState.IdRef="CheckTrue_9" />
                    </If.Then>
                  </If>
                  <If Condition="[oucSect = &quot;&quot;]" DisplayName="If oucSect" sap2010:WorkflowViewState.IdRef="If_4">
                    <If.Then>
                      <ui:CheckTrue ErrorMessage="{x:Null}" DisplayName="Check oucSect" Expression="[exception.Message.Contains(&quot;Op Unit&quot;) And exception.Message.Contains(&quot;Section&quot;)]" sap2010:WorkflowViewState.IdRef="CheckTrue_10" />
                    </If.Then>
                  </If>
                  <If Condition="[oucSite = &quot;&quot;]" DisplayName="If oucSite" sap2010:WorkflowViewState.IdRef="If_5">
                    <If.Then>
                      <ui:CheckTrue ErrorMessage="{x:Null}" DisplayName="Check oucSite" Expression="[exception.Message.Contains(&quot;Op Unit&quot;) And exception.Message.Contains(&quot;Site&quot;)]" sap2010:WorkflowViewState.IdRef="CheckTrue_11" />
                    </If.Then>
                  </If>
                  <If Condition="[uaOpal = &quot;&quot;]" DisplayName="If uaOpal" sap2010:WorkflowViewState.IdRef="If_6">
                    <If.Then>
                      <ui:CheckTrue ErrorMessage="{x:Null}" DisplayName="Check uaOpal" Expression="[exception.Message.Contains(&quot;Under Acc&quot;) And exception.Message.Contains(&quot;Opal&quot;)]" sap2010:WorkflowViewState.IdRef="CheckTrue_12" />
                    </If.Then>
                  </If>
                  <If Condition="[uaSite = &quot;&quot;]" DisplayName="If uaSite">
                    <If.Then>
                      <ui:CheckTrue ErrorMessage="{x:Null}" DisplayName="Check uaSite" Expression="[exception.Message.Contains(&quot;Under Acc&quot;) And exception.Message.Contains(&quot;Site&quot;)]" sap2010:WorkflowViewState.IdRef="CheckTrue_13" />
                    </If.Then>
                    <sap2010:WorkflowViewState.IdRef>If_7</sap2010:WorkflowViewState.IdRef>
                  </If>
                  <If Condition="[uaFund = &quot;&quot;]" DisplayName="If uaFund">
                    <If.Then>
                      <ui:CheckTrue ErrorMessage="{x:Null}" DisplayName="Check uaFund" Expression="[exception.Message.Contains(&quot;Under Acc&quot;) And exception.Message.Contains(&quot;Fund&quot;)]" sap2010:WorkflowViewState.IdRef="CheckTrue_14" />
                    </If.Then>
                    <sap2010:WorkflowViewState.IdRef>If_8</sap2010:WorkflowViewState.IdRef>
                  </If>
                  <If Condition="[uaFunc = &quot;&quot;]" DisplayName="If uaFunc">
                    <If.Then>
                      <ui:CheckTrue ErrorMessage="{x:Null}" DisplayName="Check uaFunc" Expression="[exception.Message.Contains(&quot;Under Acc&quot;) And exception.Message.Contains(&quot;Function&quot;)]" sap2010:WorkflowViewState.IdRef="CheckTrue_15" />
                    </If.Then>
                    <sap2010:WorkflowViewState.IdRef>If_9</sap2010:WorkflowViewState.IdRef>
                  </If>
                </Sequence>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
          <TryCatch.Finally>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[i]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[i + 1]</InArgument>
              </Assign.Value>
            </Assign>
          </TryCatch.Finally>
        </TryCatch>
      </Sequence>
    </While>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[String.Join(vbNewLine, {proInt, proDep, proSub, proJus, shDesc})]" />
    <sads:DebugSymbol.Symbol>d21DOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcUlBBVGFzazEtQ2hhcnRTdHJpbmdQcm9mb3JtYURldGFpbFxUZXN0X0ZyYW1ld29ya1xUZXN0X1ZhbGlkYXRlRGF0YS54YW1sWT8D+wEOAgEBQwtDOgIBAlMF+AENAgEF+QEF+QG5AQIBA1U1VTgCAQZYB/cBEgIBCVcYVyQCAQf5AXL5AbYBAgEEWQlgEgMBkAFhCWgSAwGLAWkJcBIDAYYBcQl4EgMBgQF5CYABEgIBfIEBCYgBEgIBd4kBCZABEgIBcpEBCZgBEgIBbZkBCaABEgIBaaEBCfYBFAIBCl40XlIDAZMBWzVbPQMBkQFmNGZTAwGOAWM1Yz0DAYwBbjRuUgMBiQFrNWs+AwGHAXY0dlMDAYQBczVzPgMBggF+NH5ZAgF/ezV7PQIBfYYBNIYBVAIBeoMBNYMBPQIBeI4BNI4BVgIBdYsBNYsBPQIBc5YBNJYBVgIBcJMBNZMBPQIBbp4BNJ4BagIBbJsBNZsBPQIBaqMBDbMBJQIBS+0BDfQBFgIBRrsBEegBHAIBC6wBSqwBUgIBZ6oBSqoBUgIBZagBTqgBVwIBY6sBSqsBUgIBYacBTacBbQIBXq8BWK8BYAIBXKkBS6kBVAIBWqYBTqYBbgIBV64BWa4BYQIBVaUBV6UBXwIBU7ABWbABYQIBUbEBW7EBYwIBT6MBwQGjAdQBAgFOrQFOrQFWAgFM8gE38gE+AgFJ7wE47wE7AgFHvAETvAGtAQIBRL0BE8EBGAIBPcIBE8YBGAIBNscBE8sBGAIBL8wBE9ABGAIBKNEBE9UBGAIBIdYBE9sBGAIBGtwBE+EBGAIBE+IBE+cBGAIBDLwBgAG8AaoBAgFFvQEhvQE6AgE+vwEXvwH7AQIBQMIBIcIBOgIBN8QBF8QB+gECATnHASHHATsCATDJARfJAf0BAgEyzAEhzAE7AgEpzgEXzgH6AQIBK9EBIdEBOgIBItMBF9MB+wECASTWASHWAToCARvYARfYAfsBAgEd3AEh3AE6AgEU3gEX3gH7AQIBFuIBIeIBOgIBDeQBF+QB/wECAQ+/AWO/AcoBAgFBxAFjxAHJAQIBOskBZMkBywECATPOAWTOAcgBAgEs0wFj0wHJAQIBJdgBY9gByQECAR7eAWPeAckBAgEX5AFj5AHNAQIBEA==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="506,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="506,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="506,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="506,60" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="506,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="506,60" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="506,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="506,60" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="506,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="CheckTrue_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,235" />
      <sap2010:ViewStateData Id="CheckTrue_9" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,235" />
      <sap2010:ViewStateData Id="CheckTrue_10" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,235" />
      <sap2010:ViewStateData Id="CheckTrue_11" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,235" />
      <sap2010:ViewStateData Id="CheckTrue_12" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="464,235" />
      <sap2010:ViewStateData Id="CheckTrue_13" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="464,235" />
      <sap2010:ViewStateData Id="CheckTrue_14" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="464,235" />
      <sap2010:ViewStateData Id="CheckTrue_15" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="464,235" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="486,2415">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="492,2484">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="506,2646">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="528,3670">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="554,3828" />
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="554,91" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="576,4083">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Test_ValidateData_1" sap:VirtualizedContainerService.HintSize="616,4203" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>