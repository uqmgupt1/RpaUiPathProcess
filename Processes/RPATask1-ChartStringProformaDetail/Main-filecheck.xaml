<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Main_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security.Principal</x:String>
      <x:String>System.DirectoryServices.AccountManagement</x:String>
      <x:String>Microsoft.IdentityModel.Clients.ActiveDirectory</x:String>
      <x:String>System.Net</x:String>
      <x:String>SimpleImpersonation</x:String>
      <x:String>Dapplo.Windows.Advapi32</x:String>
      <x:String>PInvoke</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.DirectoryServices.AccountManagement</AssemblyReference>
      <AssemblyReference>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyReference>
      <AssemblyReference>SimpleImpersonation</AssemblyReference>
      <AssemblyReference>Dapplo.Windows.Advapi32</AssemblyReference>
      <AssemblyReference>PInvoke.AdvApi32</AssemblyReference>
      <AssemblyReference>PInvoke.Kernel32</AssemblyReference>
      <AssemblyReference>PInvoke.Windows.Core</AssemblyReference>
      <AssemblyReference>System.Reactive</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Uri" Name="folder" />
      <Variable x:TypeArguments="x:String" Name="username" />
      <Variable x:TypeArguments="x:String" Name="password" />
      <Variable x:TypeArguments="x:String" Name="text" />
      <Variable x:TypeArguments="sd:DataTable" Name="testing" />
      <Variable x:TypeArguments="sco:Collection(x:String)" Name="response" />
    </Sequence.Variables>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetAppCredentials workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\GetAppCredentials.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Username">[username]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Credential">SSO_rpa00001</InArgument>
        <OutArgument x:TypeArguments="ss:SecureString" x:Key="out_Password" />
        <OutArgument x:TypeArguments="x:String" x:Key="out_Plaintext">[password]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[username]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["UQ\" + username]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Using username &quot; + username]" />
    <Assign DisplayName="Assign folder" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Uri">[folder]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Uri">[New Uri("\\nas02.storage.uq.edu.au\CA\FBS\test")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="net use" DisplayName="Invoke Ping Network Share" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_5" IsScript="True" Output="[response]" />
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Existing mapped drives:&quot; + vbNewLine + String.Join(vbNewLine, response).Trim]" />
    <If Condition="[Not response.Contains(&quot;There are no entries in the list.&quot;)]" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
          <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="net use * /delete /yes" DisplayName="Invoke Power Shell" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_2" IsScript="True" Output="[response]" />
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Removed drives:&quot; + vbNewLine + String.Join(vbNewLine, response).Trim]" />
        </Sequence>
      </If.Then>
    </If>
    <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="ping $hostname" DisplayName="Invoke Ping Network Share" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_6" IsScript="True" Output="[response]">
      <ui:InvokePowerShell.PowerShellVariables>
        <InArgument x:TypeArguments="x:String" x:Key="hostname">[folder.Host]</InArgument>
      </ui:InvokePowerShell.PowerShellVariables>
    </ui:InvokePowerShell>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Ping host:&quot; + vbNewLine + String.Join(vbNewLine, response).Trim]" />
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Mapping &quot; + Path.GetPathRoot(folder.LocalPath)]" />
    <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="net use $drive /persistent:no /user:$username $password" DisplayName="Invoke Power Shell" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_3" IsScript="True" Output="[response]">
      <ui:InvokePowerShell.PowerShellVariables>
        <InArgument x:TypeArguments="x:String" x:Key="drive">[Path.GetPathRoot(folder.LocalPath)]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="username">[username]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="password">[password]</InArgument>
      </ui:InvokePowerShell.PowerShellVariables>
    </ui:InvokePowerShell>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Mapped Network Share:&quot; + vbNewLine + String.Join(vbNewLine, response).Trim]" />
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[String.Join(vbNewLine, Directory.GetFiles(folder.LocalPath))]" />
    <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
          <ui:ReadRange AddHeaders="True" DataTable="[testing]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ReadRange_2" Range="A1" SheetName="ReportResults" WorkbookPath="\\nas02.storage.uq.edu.au\CA\FBS\test\TestReportSummary.xlsx" />
          <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[text]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["Got " &amp; testing.Rows.Count &amp; " rows"]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[text]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[exception.ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[text]" />
      </TryCatch.Finally>
    </TryCatch>
    <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_3">
      <TryCatch.Try>
        <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[folder.LocalPath + &quot;\RM0001&quot;]" />
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[exception.Message + &quot; as &quot; + username]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="net use $drive /delete /yes" DisplayName="Invoke Power Shell" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_7" IsScript="True" Output="[response]">
      <ui:InvokePowerShell.PowerShellVariables>
        <InArgument x:TypeArguments="x:String" x:Key="drive">[Path.GetPathRoot(folder.LocalPath)]</InArgument>
      </ui:InvokePowerShell.PowerShellVariables>
    </ui:InvokePowerShell>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Removed drives:&quot; + vbNewLine + String.Join(vbNewLine, response).Trim]" />
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetAppCredentials workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Framework\GetAppCredentials.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Username">[username]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Credential">my credentials</InArgument>
        <OutArgument x:TypeArguments="ss:SecureString" x:Key="out_Password" />
        <OutArgument x:TypeArguments="x:String" x:Key="out_Plaintext">[password]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[username]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["UQ\" + username]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Using username &quot; + username]" />
    <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="net use $drive /persistent:no /user:$username $password" DisplayName="Invoke Power Shell" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_8" IsScript="True" Output="[response]">
      <ui:InvokePowerShell.PowerShellVariables>
        <InArgument x:TypeArguments="x:String" x:Key="drive">[Path.GetPathRoot(folder.LocalPath)]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="username">[username]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="password">[password]</InArgument>
      </ui:InvokePowerShell.PowerShellVariables>
    </ui:InvokePowerShell>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Mapped Network Share:&quot; + vbNewLine + String.Join(vbNewLine, response).Trim]" />
    <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[folder.LocalPath + &quot;\RM_2017003329&quot;]" />
    <ui:CopyFile ContinueOnError="{x:Null}" Destination="[folder.LocalPath + &quot;\RM_2017003329\RM_Email.mht&quot;]" DisplayName="Copy File" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="False" Path="Test_Framework\RM_2017003329.mht" />
    <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[folder.LocalPath + &quot;\RM_2018001377&quot;]" />
    <ui:CopyFile ContinueOnError="{x:Null}" Destination="[folder.LocalPath + &quot;\RM_2018001377\RM_Email.mht&quot;]" DisplayName="Copy File" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="False" Path="Test_Framework\RM_2018001377.mht" />
    <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" Path="[folder.LocalPath + &quot;\RM_2019003060&quot;]" />
    <ui:CopyFile ContinueOnError="{x:Null}" Destination="[folder.LocalPath + &quot;\RM_2019003060\RM_Email.mht&quot;]" DisplayName="Copy File" sap2010:WorkflowViewState.IdRef="CopyFile_3" Overwrite="False" Path="Test_Framework\RM_2019003060.mht" />
    <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="net use $drive /delete /yes" DisplayName="Invoke Power Shell" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_9" IsScript="True" Output="[response]">
      <ui:InvokePowerShell.PowerShellVariables>
        <InArgument x:TypeArguments="x:String" x:Key="drive">[Path.GetPathRoot(folder.LocalPath)]</InArgument>
      </ui:InvokePowerShell.PowerShellVariables>
    </ui:InvokePowerShell>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;Removed drives:&quot; + vbNewLine + String.Join(vbNewLine, response).Trim]" />
    <sads:DebugSymbol.Symbol>d3NDOlxVc2Vyc1xzcGFtaXNoXERvY3VtZW50c1xVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcUlBBVGFzazEtQ2hhcnRTdHJpbmdQcm9mb3JtYURldGFpbFxNYWluLWZpbGVjaGVjay54YW1sblUD7wEOAgEBXgVlHQMBjgFmBW0OAwGJAW4FbqABAwGGAW8Fdg4DAYIBdwV36wECAX54BXjQAQIBfHkFgAEKAgFygQEFhQEbAgFshgEFhgHEAQIBaocBBYcBsgECAWiIAQWOARsCAV+PAQWPAc4BAgFdkAEFkAG1AQIBW5EBBbMBEAIBR7QBBcIBEAIBP8MBBccBGwIBOsgBBcgByQECATjJAQXQAR0CATHRAQXYAQ4CASzZAQXZAaABAgEp2gEF4AEbAgEg4QEF4QHPAQIBHuIBBeIBwAECARvjAQXjAfkBAgEX5AEF5AHAAQIBFOUBBeUB0QECARDmAQXmAcABAgEN5wEF5wHRAQIBCegBBewBGwIBBO0BBe0ByQECAQJhRmFSAwGUAWBGYFADAZIBY0djUQMBkAFevgFe4AEDAY8BazBrQgMBjAFoMWg7AwGKAW5zbp0BAwGHAXQtdF8DAYUBcS5xNgMBgwF33AF36AEDAYABd1x3ZQIBf3hyeM0BAgF9eRN5WwIBc3sJfhQCAXWBAeMBgQHvAQIBcIEBXIEBbAIBb4MBQYMBTgIBbYYBc4YBwQECAWuHAXKHAa8BAgFpiAGFAogBkQICAWaIAVyIAZUBAgFligE+igFiAgFkjAFBjAFLAgFiiwFBiwFLAgFgjwFyjwHLAQIBXpABcpABsgECAVyTAQmdARQCAVCxAQmxAYEBAgFNpQENrAEWAgFItgEJtgG9AQIBRL4BDb4BsQECAUDDAekBwwH1AQIBPcMBXMMBeQIBPMUBPsUBYgIBO8gBc8gBxgECATnMAUbMAVQCATfLAUbLAVACATXOAUfOAVECATPJAb4ByQHgAQIBMtYBMNYBQgIBL9MBMdMBOwIBLdkBc9kBnQECASraAYUC2gGRAgIBJ9oBXNoBlQECASbcAT7cAWICASXeAUHeAUsCASPdAUHdAUsCASHhAXPhAcwBAgEf4gGMAeIBvQECARzjATnjAXcCARnjAdQB4wH2AQIBGOQBjAHkAb0BAgEV5QE55QFrAgES5QHIAeUBzgECARHmAYwB5gG9AQIBDucBOecBawIBC+cByAHnAc4BAgEK6AHpAegB9QECAQfoAVzoAXkCAQbqAT7qAWICAQXtAXPtAcYBAgEDfAt8+QECAXh9C33OAQIBdpQBC5QB+wECAVWVAQucARQCAVGxAXaxAX4CAU6qATiqAUwCAUunATmnAT8CAUm2AZABtgG6AQIBRb4Be74BrgECAUF86gF89gECAXp8Ynx6AgF5fXh9ywECAXeUATWUAUACAVmUAY4BlAGSAQIBWJQBnQGUAawBAgFXlAG6AZQB+AECAVaaATaaAWUCAVSXATeXAT0CAVI=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="InvokePowerShell`1_5" sap:VirtualizedContainerService.HintSize="464,59" />
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="InvokePowerShell`1_2" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="336,314">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,462" />
      <sap2010:ViewStateData Id="InvokePowerShell`1_6" sap:VirtualizedContainerService.HintSize="464,59" />
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="InvokePowerShell`1_3" sap:VirtualizedContainerService.HintSize="464,59" />
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="ReadRange_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="336,311">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="464,538">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateDirectory_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="LogMessage_14" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="400,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="464,322" />
      <sap2010:ViewStateData Id="InvokePowerShell`1_7" sap:VirtualizedContainerService.HintSize="464,59" />
      <sap2010:ViewStateData Id="LogMessage_15" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="LogMessage_17" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="InvokePowerShell`1_8" sap:VirtualizedContainerService.HintSize="464,59" />
      <sap2010:ViewStateData Id="LogMessage_16" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="CreateDirectory_2" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="CopyFile_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="CreateDirectory_3" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="CopyFile_2" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="CreateDirectory_4" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="CopyFile_3" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="InvokePowerShell`1_9" sap:VirtualizedContainerService.HintSize="464,59" />
      <sap2010:ViewStateData Id="LogMessage_18" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="486,4356">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="526,4476" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>