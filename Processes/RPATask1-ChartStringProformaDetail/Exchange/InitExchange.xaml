<Activity mc:Ignorable="sap sap2010 sads" x:Class="InitExchange"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:um="clr-namespace:UiPath.Mail;assembly=UiPath.Mail"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>InitExchange_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Mail</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="InitExchange" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="password" />
      <Variable x:TypeArguments="x:String" Name="username" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="messages" />
    </Sequence.Variables>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetAppCredentials workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\GetAppCredentials.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Username">[username]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Credential">[in_Config("ExchangeCreds")]</InArgument>
        <OutArgument x:TypeArguments="ss:SecureString" x:Key="out_Password" />
        <OutArgument x:TypeArguments="x:String" x:Key="out_Plaintext">[password]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="Log App Initialization message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Start InitExchange.xaml, as &quot; + username]" />
    <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:GetExchangeMailMessages Domain="{x:Null}" Server="{x:Null}" SharedMailbox="{x:Null}" TimeoutMS="{x:Null}" CustomFolder="Inbox" DisplayName="Get Exchange Inbox" EmailAutodiscover="[username]" ExchangeVersion="Exchange2007_SP1" GetAttachements="False" sap2010:WorkflowViewState.IdRef="GetExchangeMailMessages_4" IsBodyHtml="False" MailFolder="Calendar" MarkAsRead="False" Messages="[messages]" OnlyUnreadMessages="False" Password="[password]" Top="1" User="[username]" />
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="um:ExchangeException" sap2010:WorkflowViewState.IdRef="Catch`1_4">
          <ActivityAction x:TypeArguments="um:ExchangeException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="um:ExchangeException" Name="exception" />
            </ActivityAction.Argument>
            <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[exception]" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_4" Reason="[in_Config(&quot;LogMessage_ExchangeAccount&quot;).Replace(&quot;{0}&quot;, username)]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <TryCatch.Try>
        <ui:GetExchangeMailMessages Domain="{x:Null}" Server="{x:Null}" SharedMailbox="{x:Null}" TimeoutMS="{x:Null}" CustomFolder="[in_Config(&quot;ExchangeInbox&quot;)]" DisplayName="Get Exchange Robot In" EmailAutodiscover="[username]" ExchangeVersion="Exchange2007_SP1" GetAttachements="False" sap2010:WorkflowViewState.IdRef="GetExchangeMailMessages_1" IsBodyHtml="False" MailFolder="Calendar" MarkAsRead="False" Messages="[messages]" OnlyUnreadMessages="False" Password="[password]" Top="1" User="[username]" />
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="um:ExchangeException" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <ActivityAction x:TypeArguments="um:ExchangeException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="um:ExchangeException" Name="exception" />
            </ActivityAction.Argument>
            <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[exception]" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="[in_Config(&quot;LogMessage_ExchangeAccount&quot;).Replace(&quot;{0}&quot;, in_Config(&quot;ExchangeInbox&quot;))]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Trace" Message="[in_Config(&quot;ExchangeInbox&quot;) + &quot; is accessible&quot;]" />
    <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_5">
      <TryCatch.Try>
        <ui:GetExchangeMailMessages Domain="{x:Null}" Server="{x:Null}" SharedMailbox="{x:Null}" TimeoutMS="{x:Null}" CustomFolder="[in_Config(&quot;ExchangeOutbox&quot;)]" DisplayName="Get Exchange Robot Out" EmailAutodiscover="[username]" ExchangeVersion="Exchange2007_SP1" GetAttachements="False" sap2010:WorkflowViewState.IdRef="GetExchangeMailMessages_2" IsBodyHtml="False" MailFolder="Calendar" MarkAsRead="False" Messages="[messages]" OnlyUnreadMessages="False" Password="[password]" Top="1" User="[username]" />
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="um:ExchangeException" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <ActivityAction x:TypeArguments="um:ExchangeException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="um:ExchangeException" Name="exception" />
            </ActivityAction.Argument>
            <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[exception]" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_2" Reason="[in_Config(&quot;LogMessage_ExchangeAccount&quot;).Replace(&quot;{0}&quot;, in_Config(&quot;ExchangeOutbox&quot;))]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Trace" Message="[in_Config(&quot;ExchangeOutbox&quot;) + &quot; is accessible&quot;]" />
    <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_6">
      <TryCatch.Try>
        <ui:GetExchangeMailMessages Domain="{x:Null}" Server="{x:Null}" SharedMailbox="{x:Null}" TimeoutMS="{x:Null}" CustomFolder="[in_Config(&quot;ExchangeExceptions&quot;)]" DisplayName="Get Exchange Robot Error" EmailAutodiscover="[username]" ExchangeVersion="Exchange2007_SP1" GetAttachements="False" sap2010:WorkflowViewState.IdRef="GetExchangeMailMessages_3" IsBodyHtml="False" MailFolder="Calendar" MarkAsRead="False" Messages="[messages]" OnlyUnreadMessages="False" Password="[password]" Top="1" User="[username]" />
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="um:ExchangeException" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <ActivityAction x:TypeArguments="um:ExchangeException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="um:ExchangeException" Name="exception" />
            </ActivityAction.Argument>
            <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[exception]" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_3" Reason="[in_Config(&quot;LogMessage_ExchangeAccount&quot;).Replace(&quot;{0}&quot;, in_Config(&quot;ExchangeExceptions&quot;))]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Trace" Message="[in_Config(&quot;ExchangeExceptions&quot;) + &quot; is accessible&quot;]" />
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;End InitExchange.xaml, folders accessible&quot;]" />
    <sads:DebugSymbol.Symbol>d2JDOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcUlBBVGFzazEtQ2hhcnRTdHJpbmdQcm9mb3JtYURldGFpbFxFeGNoYW5nZVxJbml0RXhjaGFuZ2UueGFtbDxLA5sBDgIBAVEFWB0CAVdZBVm/AQIBVFoFaBACAUNpBXcQAgExeAV4uwECAS55BYcBEAIBHIgBBYgBvAECARmJAQWXARACAQeYAQWYAcABAgEEmQEFmQGuAQIBAlRGVGICAV1TRlNQAgFbVkdWUQIBWVG+AVHgAQIBWFmFAVm8AQIBVVwJXOIDAgFJZA1k8QECAURrCWuGBAIBN3MNc40CAgEyeHN4uAECAS97CXuIBAIBIoMBDYMBjgICAR2IAXOIAbkBAgEaiwEJiwGOBAIBDZMBDZMBkgICAQiYAXOYAb0BAgEFmQFymQGrAQIBA1zKA1zNAwIBU1yEAVyLAQIBUlzTA1zfAwIBUFy/AVzLAQIBTlyIA1yUAwIBTFy5A1zFAwIBSmSWAWTuAQIBRmRLZFgCAUVr7gNr8QMCAUJrhAFrrAECAUBr9wNrgwQCAT5r4wFr7wECATxrrANruAMCATpr3QNr6QMCAThzlgFzigICATRzS3NYAgEze/ADe/MDAgEte4QBe60BAgEre/kDe4UEAgEpe+UBe/EBAgEne64De7oDAgEle98De+sDAgEjgwGWAYMBiwICAR+DAUuDAVgCAR6LAfYDiwH5AwIBGIsBhAGLAbEBAgEWiwH/A4sBiwQCARSLAesBiwH3AQIBEosBtAOLAcADAgEQiwHlA4sB8QMCAQ6TAZYBkwGPAgIBCpMBS5MBWAIBCQ==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="418,87" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="GetExchangeMailMessages_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="TerminateWorkflow_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_4" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="418,287" />
      <sap2010:ViewStateData Id="GetExchangeMailMessages_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="TerminateWorkflow_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="418,287" />
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="GetExchangeMailMessages_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="TerminateWorkflow_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="418,287" />
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="GetExchangeMailMessages_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="TerminateWorkflow_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_6" sap:VirtualizedContainerService.HintSize="418,287" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="440,2174">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InitExchange_1" sap:VirtualizedContainerService.HintSize="480,2254" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>