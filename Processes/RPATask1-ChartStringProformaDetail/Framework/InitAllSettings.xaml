<Activity mc:Ignorable="sap sap2010 sads" x:Class="InitiAllSettings"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ConfigFile" Type="InArgument(x:String)" />
    <x:Property Name="out_Config" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetAllSettings_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>TimeSpan2</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow outputs a settings Dictionary with key/value pairs to be used in the project. Settings are read from local config file then fetched from Orchestrator assets. &#xA;Assets will overwrite the config file settings" DisplayName="Get All Settings" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Start InitAllSettings.xaml, loading &quot; + in_ConfigFile]" />
    <Assign DisplayName="New dictionary" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[out_Config]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[New Dictionary(Of String, String)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:CheckTrue DisplayName="Check True" ErrorMessage="[&quot;The configuration file &quot; + in_ConfigFile + &quot; does not exist&quot;]" Expression="[File.Exists(in_ConfigFile)]" sap2010:WorkflowViewState.IdRef="CheckTrue_1" />
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="[in_ConfigFile]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Get Local Settings" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:List(x:String)" Name="worksheets" />
            </Sequence.Variables>
            <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1" Sheets="[worksheets]" />
            <RemoveFromCollection x:TypeArguments="x:String" Collection="[worksheets]" DisplayName="Remove Assets for later" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_1" Item="Assets" />
            <RemoveFromCollection x:TypeArguments="x:String" Collection="[worksheets]" DisplayName="Remove Exceptions for later" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_2" Item="Exceptions" />
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For each sheet &lt;string&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[worksheets]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="sheet" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Get Local Settings" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sd:DataTable" Name="configTable" />
                    </Sequence.Variables>
                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Trace" Message="[&quot;Getting settings from &quot; + sheet]" />
                    <ui:ExcelReadRange AddHeaders="True" DataTable="[configTable]" DisplayName="Read range settings" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[sheet]">
                      <ui:ExcelReadRange.Range>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ExcelReadRange.Range>
                    </ui:ExcelReadRange>
                    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[configTable]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                          </ActivityAction.Argument>
                          <If Condition="[Not String.IsNullOrEmpty(row(&quot;Name&quot;).ToString.Trim)]" DisplayName="If valid name then load setting" sap2010:WorkflowViewState.IdRef="If_9">
                            <If.Then>
                              <Assign DisplayName="Add key/value pair" sap2010:WorkflowViewState.IdRef="Assign_25">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[out_Config(row("Name").ToString.Trim)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[row("Value").ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                          </If>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                    </ui:ForEachRow>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <TryCatch DisplayName="Try Loading Server Exceptions" sap2010:WorkflowViewState.IdRef="TryCatch_5">
              <TryCatch.Try>
                <Sequence DisplayName="Loading Exceptions" sap2010:WorkflowViewState.IdRef="Sequence_18">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="exceptions" />
                  </Sequence.Variables>
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Trace" Message="[&quot;Getting settings from Exceptions&quot;]" />
                  <ui:ExcelReadRange AddHeaders="True" DataTable="[exceptions]" DisplayName="Read range Exceptions" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" SheetName="Exceptions">
                    <ui:ExcelReadRange.Range>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:ExcelReadRange.Range>
                  </ui:ExcelReadRange>
                  <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[exceptions]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                        </ActivityAction.Argument>
                        <If Condition="[Not String.IsNullOrEmpty(row(&quot;Name&quot;).ToString.Trim)]" DisplayName="If valid name then load setting" sap2010:WorkflowViewState.IdRef="If_13">
                          <If.Then>
                            <Assign DisplayName="Add key/value pair" sap2010:WorkflowViewState.IdRef="Assign_28">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_Config(row("Name").ToString.Trim)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[row("Code").ToString + vbTab + row("Value").ToString + vbNewLine + row("Description").ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                        </If>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Trace" Message="[&quot;No assets defined for the process&quot;]" />
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <TryCatch DisplayName="Try Loading Server Assets" sap2010:WorkflowViewState.IdRef="TryCatch_2">
              <TryCatch.Try>
                <Sequence DisplayName="Loading Assets" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="assets" />
                  </Sequence.Variables>
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Trace" Message="[&quot;Getting settings from Assets&quot;]" />
                  <ui:ExcelReadRange AddHeaders="True" DataTable="[assets]" DisplayName="Read range Assets" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="Assets">
                    <ui:ExcelReadRange.Range>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:ExcelReadRange.Range>
                  </ui:ExcelReadRange>
                  <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[assets]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                        </ActivityAction.Argument>
                        <TryCatch DisplayName="Try Get Asset" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                          <TryCatch.Try>
                            <Sequence DisplayName="Get asset value" sap2010:WorkflowViewState.IdRef="Sequence_11">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="ui:GenericValue" Name="assetValue" />
                              </Sequence.Variables>
                              <If Condition="[String.IsNullOrEmpty(row(&quot;Name&quot;).ToString.Trim)]" DisplayName="If empty row, skip warning" sap2010:WorkflowViewState.IdRef="If_7">
                                <If.Then>
                                  <ui:Continue sap2010:WorkflowViewState.IdRef="Continue_1" />
                                </If.Then>
                              </If>
                              <If Condition="[Not String.IsNullOrEmpty(row(&quot;Asset&quot;).ToString.Trim)]" DisplayName="If asset" sap2010:WorkflowViewState.IdRef="If_6">
                                <If.Then>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="[&quot;Fetching asset &quot; + row(&quot;Name&quot;).ToString + &quot; from orchestrator&quot;]" />
                                    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[row(&quot;Asset&quot;).ToString]" DisplayName="Get Asset Value" sap2010:WorkflowViewState.IdRef="GetRobotAsset_4">
                                      <ui:GetRobotAsset.Value>
                                        <OutArgument x:TypeArguments="ui:GenericValue">[assetValue]</OutArgument>
                                      </ui:GetRobotAsset.Value>
                                    </ui:GetRobotAsset>
                                  </Sequence>
                                </If.Then>
                              </If>
                              <If Condition="[Not String.IsNullOrEmpty(row(&quot;Credential&quot;).ToString.Trim)]" DisplayName="If credential" sap2010:WorkflowViewState.IdRef="If_8">
                                <If.Then>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_13">
                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Trace" Message="[&quot;Checking credential &quot; + row(&quot;Name&quot;).ToString + &quot; in orchestrator&quot;]" />
                                    <ui:GetRobotCredential Password="{x:Null}" TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="[row(&quot;Credential&quot;).ToString]" DisplayName="Get Credential" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" />
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_24">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="ui:GenericValue">[assetValue]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="ui:GenericValue">[row("Credential").ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                              </If>
                              <Assign DisplayName="Set Asset Value" sap2010:WorkflowViewState.IdRef="Assign_23">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[out_Config(row("Name").ToString)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[assetValue.ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn" Message="[&quot;Loading &quot; + row(&quot;Name&quot;).ToString + &quot; failed: &quot; + exception.Message]" />
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;No assets defined for the process&quot;]" />
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;End InitAllSettings.xaml, running &quot; &amp; out_Config(&quot;ProcessMode&quot;) &amp; &quot; with &quot; &amp; out_Config.Count &amp; &quot; settings&quot;]" />
    <sads:DebugSymbol.Symbol>d2ZDOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcUlBBVGFzazEtQ2hhcnRTdHJpbmdQcm9mb3JtYURldGFpbFxGcmFtZXdvcmtcSW5pdEFsbFNldHRpbmdzLnhhbWxfTQOmAg4CAQFOBU65AQIBcU8FVg4CAW1XBVfpAQIBaVgFowIgAgEGpAIFpAKdAgIBAk5yTrYBAgFyVEpUbQIBcFFLUVcCAW5XmgFXuAECAWxXOVeOAQIBaligAVixAQIBZ14LoAIWAgEHpAJypAKaAgIBA2INYp0BAgFkYw1jyQECAWBkDWTRAQIBXGUNjwEaAgFHkAENvwEYAgE0wAENnwIYAgEIYowBYpoBAgFlY0ljVwIBYmO+AWPGAQIBYWRJZFcCAV5kwgFkzgECAV1lrQFluwECAVprE4wBHgIBSJIBEbMBHAIBN7sBFbsBuAECATXCARGTAhwCAQubAhWbArcBAgEJbxVvtAECAVdwFXYpAgFRdxWLASUCAUmWAROWAbUBAgFFlwETnQEnAgFAngETsgEjAgE4uwGEAbsBtQECATbGARPGAbABAgEyxwETzQEnAgEtzgETkgIjAgEMmwKDAZsCtAECAQpvgwFvsQECAVhwRHBTAgFVcxtzSgIBVHCzAXC8AQIBUndGd1UCAU99G4gBIAIBSpYBggGWAbIBAgFGlwFClwFQAgFDmgEZmgFIAgFClwGyAZcBvgECAUGeAUSeAVICAT6kARmvAR4CATnGAYEBxgGtAQIBM8cBQscBTAIBMMoBGcoBSAIBL8cBqgHHAbIBAgEuzgFEzgFOAgEr1AEZjwIkAgENfSl9agIBS38fhgEoAgFMpAEnpAFoAgE6pgEdrQEmAgE71gEdgwIoAgEQiwIhiwL2AQIBDoQBSoQBYQIBToEBS4EBcgIBTasBSKsBqAECAT2oAUmoAXACATzaAR/eASQCASjfAR/qASQCAR/rAR/6ASQCART7AR+CAigCARGLAo4BiwLzAQIBD9oBLdoBagIBKdwBI9wBXwIBKt8BLd8BbwIBIOEBI+gBLgIBIesBLesBdAIBFe0BI/gBLgIBFoACSoACXwIBE/0BS/0BbQIBEuIBJeIB9wECASbjASXnATgCASLuASXuAfoBAgEd7wEl7wGCAgIBG/ABJfcBLgIBF+IBkwHiAfQBAgEn5QFY5QFkAgEk4wFW4wF5AgEj7gGTAe4B9wECAR7vAYMB7wGrAQIBHPUBV/UBcwIBGvIBWPIBZAIBGA==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="570,91" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="570,60" />
      <sap2010:ViewStateData Id="CheckTrue_1" sap:VirtualizedContainerService.HintSize="570,87" />
      <sap2010:ViewStateData Id="ExcelGetWorkbookSheets_1" sap:VirtualizedContainerService.HintSize="534,22" />
      <sap2010:ViewStateData Id="RemoveFromCollection`1_1" sap:VirtualizedContainerService.HintSize="534,22" />
      <sap2010:ViewStateData Id="RemoveFromCollection`1_2" sap:VirtualizedContainerService.HintSize="534,22" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="494,91" />
      <sap2010:ViewStateData Id="ExcelReadRange_1" sap:VirtualizedContainerService.HintSize="494,59" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="464,207" />
      <sap2010:ViewStateData Id="ForEachRow_2" sap:VirtualizedContainerService.HintSize="494,354" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="516,708">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="534,841">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="494,91" />
      <sap2010:ViewStateData Id="ExcelReadRange_3" sap:VirtualizedContainerService.HintSize="494,59" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="464,207" />
      <sap2010:ViewStateData Id="ForEachRow_4" sap:VirtualizedContainerService.HintSize="494,354">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="516,708">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_14" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="520,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="534,935">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="534,91" />
      <sap2010:ViewStateData Id="ExcelReadRange_2" sap:VirtualizedContainerService.HintSize="534,59" />
      <sap2010:ViewStateData Id="Continue_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="464,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="GetRobotAsset_4" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="336,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="464,424" />
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="GetRobotCredential_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="336,377">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="464,524" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="486,1459">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="490,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="504,1686" />
      <sap2010:ViewStateData Id="ForEachRow_3" sap:VirtualizedContainerService.HintSize="534,1833">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="556,2187">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="560,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="534,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="556,2217">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="570,2326" />
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="570,91" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="592,2996">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetAllSettings_1" sap:VirtualizedContainerService.HintSize="632,3076" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>