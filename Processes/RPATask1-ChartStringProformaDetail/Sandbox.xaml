<Activity mc:Ignorable="sap sap2010 sads" x:Class="Sandbox" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Sandbox_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Security.Principal</x:String>
      <x:String>System.Security</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: A brief overview of what happens within the workflow.&#xA;&#xA;Inputs: NA or&#xA;in_Argument (Type): Input argument.&#xA;io_Argument (Type): An argument passed by reference.&#xA;&#xA;Outputs: NA or&#xA;io_Argument (Type): An argument passed by reference.&#xA;out_Argument (Type): An returned argument.&#xA;&#xA;Pre Condition: NA or&#xA;The requirements of a document entering this workflow.&#xA;&#xA;Post Condition: NA or&#xA;The conditions of exiting without error and description of errors thrown." DisplayName="Sandbox" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_4">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_99">
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_91">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Default="1" Name="index" />
              <Variable x:TypeArguments="x:String" Name="user" />
              <Variable x:TypeArguments="x:String" Name="job" />
            </Sequence.Variables>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_59">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[user]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Security.Principal.WindowsIdentity.GetCurrent().Name.Replace(System.Environment.UserDomainName+"\","")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_64">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[job]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Now.ToUniversalTime.ToString("u")]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[user + &quot;,&quot; + job]" />
            <While sap2010:WorkflowViewState.IdRef="While_1" Condition="[index &lt; 5]">
              <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_93">
                <Sequence.Variables>
                  <Variable x:TypeArguments="ui:QueueItem" Name="item" />
                  <Variable x:TypeArguments="s:Exception" Name="ruleException" />
                  <Variable x:TypeArguments="s:Exception" Name="systemError" />
                </Sequence.Variables>
                <ui:AddTransactionItem ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Transaction Item" sap2010:WorkflowViewState.IdRef="AddTransactionItem_1" QueueType="ReportQueue" Reference="[&quot;Success &quot; &amp; index]" TransactionItem="[item]">
                  <ui:AddTransactionItem.TransactionInformation>
                    <InArgument x:TypeArguments="x:String" x:Key="JobStart">[job]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="RobotUser">[user]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Item 1">["Data " &amp; index &amp; "a"]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Item 2">["Data " &amp; index &amp; "b"]</InArgument>
                  </ui:AddTransactionItem.TransactionInformation>
                </ui:AddTransactionItem>
                <ui:SetTransactionStatus ContinueOnError="{x:Null}" Reason="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Set Transaction Success" ErrorType="Business" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_1" Status="Successful" TransactionItem="[item]">
                  <ui:SetTransactionStatus.Output>
                    <InArgument x:TypeArguments="x:String" x:Key="Result 1">["Data " &amp; index &amp; "z"]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Result 2">["Data " &amp; index &amp; "y"]</InArgument>
                  </ui:SetTransactionStatus.Output>
                </ui:SetTransactionStatus>
                <ui:AddTransactionItem ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Transaction Item" sap2010:WorkflowViewState.IdRef="AddTransactionItem_2" QueueType="ReportQueue" Reference="[&quot;Rule Ex &quot; &amp; index]" TransactionItem="[item]">
                  <ui:AddTransactionItem.TransactionInformation>
                    <InArgument x:TypeArguments="x:String" x:Key="JobStart">[job]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="RobotUser">[user]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Item 1">["Data " &amp; index &amp; "c"]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Item 2">["Data " &amp; index &amp; "d"]</InArgument>
                  </ui:AddTransactionItem.TransactionInformation>
                </ui:AddTransactionItem>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_56">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:Exception">[ruleException]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:BusinessRuleException">[New BusinessRuleException(index &amp; ".0" + vbTab + "Rule Exception" + vbNewLine + "Sample rule exception no " &amp; index)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" Details="[ruleException.ToString]" DisplayName="Set Transaction Rule Exception" ErrorType="Business" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_2" Reason="[ruleException.Message]" Status="Failed" TransactionItem="[item]">
                  <ui:SetTransactionStatus.Output>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                  </ui:SetTransactionStatus.Output>
                </ui:SetTransactionStatus>
                <ui:AddTransactionItem ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Transaction Item" sap2010:WorkflowViewState.IdRef="AddTransactionItem_3" QueueType="ReportQueue" Reference="[&quot;Sys Err &quot; &amp; index]" TransactionItem="[item]">
                  <ui:AddTransactionItem.TransactionInformation>
                    <InArgument x:TypeArguments="x:String" x:Key="JobStart">[job]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="RobotUser">[user]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Item 1">["Data " &amp; index &amp; "e"]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Item 2">["Data " &amp; index &amp; "f"]</InArgument>
                  </ui:AddTransactionItem.TransactionInformation>
                </ui:AddTransactionItem>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_57">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:Exception">[systemError]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:ApplicationException">[New ApplicationException(index &amp; ".0" + vbTab + "System Error" + vbNewLine + "Sample system error no " &amp; index)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" Details="[systemError.ToString]" DisplayName="Set Transaction System Error" ErrorType="Application" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_3" Reason="[systemError.Message]" Status="Failed" TransactionItem="[item]">
                  <ui:SetTransactionStatus.Output>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                  </ui:SetTransactionStatus.Output>
                </ui:SetTransactionStatus>
                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Finished round &quot; &amp; index]" />
                <Assign sap2010:WorkflowViewState.IdRef="Assign_58">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[index + 1]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </While>
            <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
              <TryCatch.Try>
                <DoWhile DisplayName="Do While" sap2010:WorkflowViewState.IdRef="DoWhile_1" Condition="True">
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_95">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="ui:QueueItem" Name="item" />
                      <Variable x:TypeArguments="s:Exception" Name="systemError" />
                    </Sequence.Variables>
                    <ui:GetQueueItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get Transaction Item" sap2010:WorkflowViewState.IdRef="GetQueueItem_1" QueueType="ReportQueue" TransactionItem="[item]" />
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_63">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:Exception">[systemError]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:Exception">[New ApplicationException(index &amp; ".0" + vbTab + "System Error" + vbNewLine + "Sample system error no " &amp; index)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" Details="[systemError.ToString]" DisplayName="Set Transaction System Error" ErrorType="Application" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_4" Reason="[systemError.Message]" Status="Failed" TransactionItem="[item]">
                      <ui:SetTransactionStatus.Output>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                      </ui:SetTransactionStatus.Output>
                    </ui:SetTransactionStatus>
                  </Sequence>
                </DoWhile>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Error" Message="[exception.ToString]" />
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_6">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_103">
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_85">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Default="133" Name="oucSchool" />
              <Variable x:TypeArguments="x:String" Name="proPostAdmin" />
            </Sequence.Variables>
            <Sequence DisplayName="Lookup accountant username" sap2010:WorkflowViewState.IdRef="Sequence_84">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="accountantLookup" />
              </Sequence.Variables>
              <ui:ReadRange AddHeaders="True" DataTable="[accountantLookup]" DisplayName="Read Accountant Lookup" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Nvision" WorkbookPath="Accountant Lookup.xlsx">
                <ui:ReadRange.Range>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ReadRange.Range>
              </ui:ReadRange>
              <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[accountantLookup]" DisplayName="Lookup Data Table" sap2010:WorkflowViewState.IdRef="LookupDataTable_1" LookupColumnName="Opal Unit (School)" LookupValue="[oucSchool]" TargetColumnName="Financial Accountant Username">
                <ui:LookupDataTable.CellValue>
                  <OutArgument x:TypeArguments="x:String">[proPostAdmin]</OutArgument>
                </ui:LookupDataTable.CellValue>
              </ui:LookupDataTable>
              <If Condition="[proPostAdmin Is Nothing]" DisplayName="If not found" sap2010:WorkflowViewState.IdRef="If_2">
                <If.Then>
                  <TerminateWorkflow DisplayName="Terminate Workflow" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="Accountant not found" />
                </If.Then>
              </If>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_55">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[proPostAdmin]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[proPostAdmin.ToUpper]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[oucSchool + &quot; =&gt; &quot; + proPostAdmin]" />
            </Sequence>
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_7">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_104">
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_87">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="queueItems" />
              <Variable x:TypeArguments="sd:DataTable" Name="weekSummary" />
            </Sequence.Variables>
            <ui:BuildDataTable DataTable="[weekSummary]" DisplayName="Build Data Table" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Job_x0020_Start_x0020_Time&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Robot_x0020_Username&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Bot_x002F_Process_x0020_Name&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Reference&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Status&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Start_x0020_Time&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;End_x0020_Time&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Stage_x0020_Code&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Error_x0020_Message&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Time_x0020_Saving&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Cost_x0020_Saving&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
            <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" Top="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="StartsWith" sap2010:WorkflowViewState.IdRef="GetQueueItems_1" QueueItemStates="All" QueueName="DEV-ChartStringProforma" Result="[queueItems]" />
            <ui:WriteTextFile DisplayName="Write Text File" FileName="debug_queue_items.json" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[String.Join(vbNewLine + vbNewLine, queueItems.Select(Function(qi) _&#xA;qi.Status.ToString + vbTab + qi.Priority.ToString + vbNewLine +&#xA;JObject.Parse(JsonConvert.SerializeObject(qi)).ToString&#xA;))]" />
            <ui:ForEach x:TypeArguments="ui:QueueItem" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[queueItems]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="ui:QueueItem">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:QueueItem" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_98">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sd:DataRow" Name="row" />
                    </Sequence.Variables>
                    <Assign DisplayName="Init row" sap2010:WorkflowViewState.IdRef="Assign_65">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sd:DataRow">[row]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sd:DataRow">[weekSummary.NewRow]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign Job Start Time" sap2010:WorkflowViewState.IdRef="Assign_66">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("Job Start Time")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[item.SpecificContent("JobStart").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign Robot Username" sap2010:WorkflowViewState.IdRef="Assign_67">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("Robot Username")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[item.SpecificContent("RobotUser").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign Bot/Process Name" sap2010:WorkflowViewState.IdRef="Assign_68">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("Bot/Process Name")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Proforma/Minion"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign Reference" sap2010:WorkflowViewState.IdRef="Assign_69">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("Reference")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[item.Reference]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign Status" sap2010:WorkflowViewState.IdRef="Assign_70">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[item.Status.ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign Start Time" sap2010:WorkflowViewState.IdRef="Assign_71">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("Start Time")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[item.StartTransactionTime.ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign End Time" sap2010:WorkflowViewState.IdRef="Assign_72">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("End Time")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[item.LastProcessingOn]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[item.Status = QueueItemStatus.Failed]" DisplayName="If failed" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Then>
                        <Sequence DisplayName="No error" sap2010:WorkflowViewState.IdRef="Sequence_101">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="ui:GenericValue" Name="exception" />
                          </Sequence.Variables>
                          <Assign DisplayName="Assign Stage Code" sap2010:WorkflowViewState.IdRef="Assign_77">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[row("Stage Code")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[item.ProcessingException.Type.ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign Error Message" sap2010:WorkflowViewState.IdRef="Assign_78">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[row("Error Message")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[item.ProcessingException.Reason.Replace(vbTab, " - ").Replace(vbNewLine, ": ")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign Time Saving" sap2010:WorkflowViewState.IdRef="Assign_79">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[row("Time Saving")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[TimeSpan.Zero.ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign Cost Saving" sap2010:WorkflowViewState.IdRef="Assign_80">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[row("Cost Saving")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[Decimal.Zero.ToString("C")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="No error" sap2010:WorkflowViewState.IdRef="Sequence_100">
                          <Assign DisplayName="Assign Stage Code" sap2010:WorkflowViewState.IdRef="Assign_73">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[row("Stage Code")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[""]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign Error Message" sap2010:WorkflowViewState.IdRef="Assign_74">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[row("Error Message")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[""]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign Time Saving" sap2010:WorkflowViewState.IdRef="Assign_81">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[row("Time Saving")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[""]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign Cost Saving" sap2010:WorkflowViewState.IdRef="Assign_82">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[row("Cost Saving")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[""]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                    <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[row]" DataTable="[weekSummary]" DisplayName="Add Data Row" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_8">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_106">
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_105">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="username" />
              <Variable x:TypeArguments="ss:SecureString" Name="password" />
              <Variable x:TypeArguments="x:String" Name="text" />
            </Sequence.Variables>
            <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="Proforma-DEV-Exchange" DisplayName="Get Credential" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[password]" Username="[username]" />
            <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="testAsset" DisplayName="Get Asset" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
              <ui:GetRobotAsset.Value>
                <OutArgument x:TypeArguments="x:String">[text]</OutArgument>
              </ui:GetRobotAsset.Value>
            </ui:GetRobotAsset>
            <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type Into 'Scintilla'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_5" SendWindowMessages="False" SimulateType="False" Text="[&quot;[k(enter)]&quot; + text + &quot;[k(enter)]&quot;]">
              <ui:TypeInto.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="9885a4db58db369caf84ebea09fd73f9" Selector="&lt;wnd app='notepad++.exe' cls='Notepad++' title='*new 1 - Notepad++' /&gt;&lt;wnd cls='Scintilla' idx='1' title='N' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:TypeInto.Target>
            </ui:TypeInto>
            <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type Into 'Scintilla'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_4" SendWindowMessages="False" SimulateType="False" Text="[&quot;[k(enter)]&quot; + username + &quot;[k(enter)]&quot;]">
              <ui:TypeInto.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="9885a4db58db369caf84ebea09fd73f9" Selector="&lt;wnd app='notepad++.exe' cls='Notepad++' title='*new 1 - Notepad++' /&gt;&lt;wnd cls='Scintilla' idx='1' title='N' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:TypeInto.Target>
            </ui:TypeInto>
            <ui:TypeSecureText DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type Secure Text 'Scintilla'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeSecureText_1" SecureText="[password]" SendWindowMessages="False" SimulateType="False">
              <ui:TypeSecureText.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="4ddcb7f24d7e16cac9b9eeed3a08e9a6" Selector="&lt;wnd app='notepad++.exe' cls='Notepad++' title='*new 1 - Notepad++' /&gt;&lt;wnd cls='Scintilla' idx='1' title='N' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:TypeSecureText.Target>
            </ui:TypeSecureText>
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_107">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="username" />
        <Variable x:TypeArguments="x:String" Name="password" />
        <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="messages" />
        <Variable x:TypeArguments="snm:MailMessage" Name="message" />
      </Sequence.Variables>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetAppCredentials workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\GetAppCredentials.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <OutArgument x:TypeArguments="x:String" x:Key="out_Username">[username]</OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Credential">Proforma-DEV-Exchange</InArgument>
          <OutArgument x:TypeArguments="ss:SecureString" x:Key="out_Password" />
          <OutArgument x:TypeArguments="x:String" x:Key="out_Plaintext">[password]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:GetExchangeMailMessages Domain="{x:Null}" Server="{x:Null}" SharedMailbox="{x:Null}" TimeoutMS="{x:Null}" CustomFolder="Inbox" DisplayName="Get Exchange Mail Messages" EmailAutodiscover="[username]" ExchangeVersion="Exchange2007_SP1" GetAttachements="False" sap2010:WorkflowViewState.IdRef="GetExchangeMailMessages_1" IsBodyHtml="True" MailFolder="Calendar" MarkAsRead="False" Messages="[messages]" OnlyUnreadMessages="False" Password="[password]" Top="1" User="[username]" />
      <Assign sap2010:WorkflowViewState.IdRef="Assign_83">
        <Assign.To>
          <OutArgument x:TypeArguments="snm:MailMessage">[message]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="snm:MailMessage">[messages.First]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:WriteTextFile DisplayName="Write Text File" FileName="email_signature.html" Text="[message.Body]" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" />
    </Sequence>
    <sads:DebugSymbol.Symbol>d1RDOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcUlBBVGFzazEtQ2hhcnRTdHJpbmdQcm9mb3JtYURldGFpbFxTYW5kYm94LnhhbWwYTAPsAw4CAQFNBdgBFQIBINkBBYMCFQIBH4QCBa4DFQIBHq8DBdADFQIBHdEDBeoDEAIBAtgDB98DHwIBFuADB+AD5wMCAQvhAwfoAxACAQfpAwfpA6EBAgED2wNI2wNdAgEc2gNI2gNSAgEa3QNJ3QNTAgEY2APAAdgD4gECARfgA88D4APSAwIBFeADggHgA4kBAgEU4APYA+AD5AMCARLgA8UB4APRAQIBEOADjQPgA5kDAgEO4AO+A+ADygMCAQzmAznmA0kCAQrjAzrjA0MCAQjpA1zpA2wCAQXpA0DpA1YCAQQ=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_59" sap:VirtualizedContainerService.HintSize="482,60" />
      <sap2010:ViewStateData Id="Assign_64" sap:VirtualizedContainerService.HintSize="482,60" />
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="482,91" />
      <sap2010:ViewStateData Id="AddTransactionItem_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="SetTransactionStatus_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="AddTransactionItem_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Assign_56" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="SetTransactionStatus_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="AddTransactionItem_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Assign_57" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="SetTransactionStatus_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_58" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_93" sap:VirtualizedContainerService.HintSize="336,887">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="482,1044">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetQueueItem_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_63" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="SetTransactionStatus_4" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_95" sap:VirtualizedContainerService.HintSize="264,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_1" sap:VirtualizedContainerService.HintSize="464,469">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="468,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="482,696">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_91" sap:VirtualizedContainerService.HintSize="504,2235">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_99" sap:VirtualizedContainerService.HintSize="526,2357">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_4" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadRange_1" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="LookupDataTable_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="TerminateWorkflow_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,207" />
      <sap2010:ViewStateData Id="Assign_55" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Sequence_84" sap:VirtualizedContainerService.HintSize="486,751">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_85" sap:VirtualizedContainerService.HintSize="508,875">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_103" sap:VirtualizedContainerService.HintSize="530,999">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_6" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildDataTable_1" sap:VirtualizedContainerService.HintSize="591,59" />
      <sap2010:ViewStateData Id="GetQueueItems_1" sap:VirtualizedContainerService.HintSize="591,22" />
      <sap2010:ViewStateData Id="WriteTextFile_1" sap:VirtualizedContainerService.HintSize="591,87" />
      <sap2010:ViewStateData Id="Assign_65" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_66" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_67" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_68" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_69" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_70" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_71" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_72" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_77" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_78" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_79" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_80" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_101" sap:VirtualizedContainerService.HintSize="264,484">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_73" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_74" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_81" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_82" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_100" sap:VirtualizedContainerService.HintSize="264,484">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="553,632" />
      <sap2010:ViewStateData Id="AddDataRow_1" sap:VirtualizedContainerService.HintSize="553,22" />
      <sap2010:ViewStateData Id="Sequence_98" sap:VirtualizedContainerService.HintSize="575,1618">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="591,1751">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_87" sap:VirtualizedContainerService.HintSize="613,2163">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_104" sap:VirtualizedContainerService.HintSize="635,2287">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_7" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetRobotCredential_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="GetRobotAsset_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="TypeInto_5" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="TypeInto_4" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="TypeSecureText_1" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_105" sap:VirtualizedContainerService.HintSize="336,702">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_106" sap:VirtualizedContainerService.HintSize="358,826">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_8" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="GetExchangeMailMessages_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Assign_83" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteTextFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_107" sap:VirtualizedContainerService.HintSize="336,500">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="358,1255">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sandbox_1" sap:VirtualizedContainerService.HintSize="398,1335" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>