<Activity mc:Ignorable="sap sap2010 sads" x:Class="Sandbox" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Sandbox_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: A brief overview of what happens within the workflow.&#xA;&#xA;Inputs: NA or&#xA;in_Argument (Type): Input argument.&#xA;io_Argument (Type): An argument passed by reference.&#xA;&#xA;Outputs: NA or&#xA;io_Argument (Type): An argument passed by reference.&#xA;out_Argument (Type): An returned argument.&#xA;&#xA;Pre Condition: NA or&#xA;The requirements of a document entering this workflow.&#xA;&#xA;Post Condition: NA or&#xA;The conditions of exiting without error and description of errors thrown." DisplayName="Sandbox" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_68">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="TransactionData" />
        <Variable x:TypeArguments="x:String" Name="names" />
        <Variable x:TypeArguments="x:String" Name="messageBody" />
      </Sequence.Variables>
      <ui:CloseWindow TimeoutMS="{x:Null}" UseWindow="{x:Null}" ContinueOnError="True" DisplayName="Close Window 'iexplore.exe'" sap2010:WorkflowViewState.IdRef="CloseWindow_1" InformativeScreenshot="29868bddc011177e2fb38b69e0c2f933" Selector="&lt;html url='file://C:\Users\spamish\Documents\UiPath\RpaUiPathProcess\Processes\RPATask1-ChartStringProformaDetail\tempReport.html' /&gt;" WaitForReady="INTERACTIVE" />
      <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[names]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">Spam</InArgument>
        </Assign.Value>
      </Assign>
      <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Modify here to spoof queuing test test files" Code="Dim transaction As QueueItem&#xD;&#xA;Transactions = New List(Of QueueItem)&#xD;&#xA;&#xD;&#xA;' Add transaction 1&#xD;&#xA;transaction = New QueueItem&#xD;&#xA;transaction.Reference = &quot;001&quot;&#xD;&#xA;transaction.Status = QueueItemStatus.Successful&#xD;&#xA;&#xD;&#xA;Transactions = Transactions.Append(transaction)&#xD;&#xA;&#xD;&#xA;' Add transaction 4&#xD;&#xA;transaction = New QueueItem&#xD;&#xA;transaction.Reference = &quot;004&quot;&#xD;&#xA;transaction.Status = QueueItemStatus.Successful&#xD;&#xA;&#xD;&#xA;Transactions = Transactions.Append(transaction)&#xD;&#xA;&#xD;&#xA;' Add transaction 2&#xD;&#xA;transaction = New QueueItem&#xD;&#xA;transaction.Reference = &quot;002&quot;&#xD;&#xA;transaction.Status = QueueItemStatus.Failed&#xD;&#xA;&#xD;&#xA;transaction.ProcessingException = New ProcessingException&#xD;&#xA;transaction.ProcessingException.Type = ProcessingExceptionType.BusinessException&#xD;&#xA;transaction.ProcessingException.Reason = &quot;2.0&quot; + vbTab + &quot;Rule Alpha&quot; + vbNewLine + &quot;Details of first failure&quot;&#xD;&#xA;&#xD;&#xA;Transactions = Transactions.Append(transaction)&#xD;&#xA;&#xD;&#xA;' Add transaction 5&#xD;&#xA;transaction = New QueueItem&#xD;&#xA;transaction.Reference = &quot;005&quot;&#xD;&#xA;transaction.Status = QueueItemStatus.Failed&#xD;&#xA;&#xD;&#xA;transaction.ProcessingException = New ProcessingException&#xD;&#xA;transaction.ProcessingException.Type = ProcessingExceptionType.BusinessException&#xD;&#xA;transaction.ProcessingException.Reason = &quot;5.0&quot; + vbTab + &quot;Rule Beta&quot; + vbNewLine + &quot;Details of second failure&quot;&#xD;&#xA;&#xD;&#xA;Transactions = Transactions.Append(transaction)&#xD;&#xA;&#xD;&#xA;' Add transaction 3&#xD;&#xA;transaction = New QueueItem&#xD;&#xA;transaction.Reference = &quot;003&quot;&#xD;&#xA;transaction.Status = QueueItemStatus.Failed&#xD;&#xA;&#xD;&#xA;transaction.ProcessingException = New ProcessingException&#xD;&#xA;transaction.ProcessingException.Type = ProcessingExceptionType.ApplicationException&#xD;&#xA;transaction.ProcessingException.Reason = &quot;3.0&quot; + vbTab + &quot;Error Gamma&quot; + vbNewLine + &quot;Point of third fallover&quot;&#xD;&#xA;&#xD;&#xA;Transactions = Transactions.Append(transaction)&#xD;&#xA;&#xD;&#xA;' Add transaction 6&#xD;&#xA;transaction = New QueueItem&#xD;&#xA;transaction.Reference = &quot;006&quot;&#xD;&#xA;transaction.Status = QueueItemStatus.Failed&#xD;&#xA;&#xD;&#xA;transaction.ProcessingException = New ProcessingException&#xD;&#xA;transaction.ProcessingException.Type = ProcessingExceptionType.ApplicationException&#xD;&#xA;transaction.ProcessingException.Reason = &quot;6.0&quot; + vbTab + &quot;Error Delta&quot; + vbNewLine + &quot;Point of fourth fallover&quot;&#xD;&#xA;&#xD;&#xA;Transactions = Transactions.Append(transaction)&#xD;&#xA;" DisplayName="Invoke Code" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
        <ui:InvokeCode.Arguments>
          <OutArgument x:TypeArguments="scg:IEnumerable(ui:QueueItem)" x:Key="Transactions">[TransactionData]</OutArgument>
        </ui:InvokeCode.Arguments>
      </ui:InvokeCode>
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Testing on &quot; &amp; TransactionData.Count &amp; &quot; items&quot;]" />
      <Sequence DisplayName="Build Report Messages" sap2010:WorkflowViewState.IdRef="Sequence_65">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Int32" Default="0" Name="successes" />
          <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="systemErrorList" />
          <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="ruleExceptionList" />
          <Variable x:TypeArguments="x:String" Name="systemErrorMessages" />
          <Variable x:TypeArguments="x:String" Name="ruleExceptionMessages" />
          <Variable x:TypeArguments="x:String" Name="exceptionMessage" />
          <Variable x:TypeArguments="x:String" Name="messageStatus" />
        </Sequence.Variables>
        <Sequence DisplayName="Unpack template" sap2010:WorkflowViewState.IdRef="Sequence_66">
          <Sequence.Variables>
            <Variable x:TypeArguments="s:String[]" Name="parts" />
            <Variable x:TypeArguments="x:String" Name="template" />
          </Sequence.Variables>
          <ui:ReadTextFile Content="[template]" DisplayName="Read Text File" FileName="Data\ReportTemplate.html" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Trace" Message="[template]" />
          <Assign DisplayName="Assign parts of template" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[parts]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]">[template.Split({"--"}, StringSplitOptions.RemoveEmptyEntries)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign message body" sap2010:WorkflowViewState.IdRef="Assign_12">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[messageBody]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[parts(0)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign status of process" sap2010:WorkflowViewState.IdRef="Assign_29">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[messageStatus]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[If(TransactionData.Count &gt; 0, parts(1), parts(2))]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign message header" sap2010:WorkflowViewState.IdRef="Assign_13">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[exceptionMessage]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[parts(3)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign rule exception header" sap2010:WorkflowViewState.IdRef="Assign_14">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[ruleExceptionMessages]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[parts(4)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign system error header" sap2010:WorkflowViewState.IdRef="Assign_15">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[systemErrorMessages]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[parts(5)]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
        <ui:ForEach x:TypeArguments="ui:QueueItem" CurrentIndex="{x:Null}" DisplayName="For Each transaction item" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[TransactionData]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="ui:QueueItem">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:QueueItem" Name="item" />
              </ActivityAction.Argument>
              <If Condition="[item.Status = QueueItemStatus.Failed]" DisplayName="If item failed" sap2010:WorkflowViewState.IdRef="If_2">
                <If.Then>
                  <Sequence DisplayName="Build exception and error message" sap2010:WorkflowViewState.IdRef="Sequence_82">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="reason" />
                    </Sequence.Variables>
                    <Assign DisplayName="Assign failure reason" sap2010:WorkflowViewState.IdRef="Assign_44">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[reason]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[item.ProcessingException.Reason]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[item.ProcessingException.Type = ProcessingExceptionType.BusinessException]" DisplayName="If rule exception" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Then>
                        <Sequence DisplayName="Rule Exception row entry" sap2010:WorkflowViewState.IdRef="Sequence_80">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="row" />
                            <Variable x:TypeArguments="x:Int32" Name="tab" />
                            <Variable x:TypeArguments="x:Int32" Name="newline" />
                          </Sequence.Variables>
                          <Assign DisplayName="Assign tab position" sap2010:WorkflowViewState.IdRef="Assign_50">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[tab]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[reason.IndexOf(vbTab)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign newline position" sap2010:WorkflowViewState.IdRef="Assign_51">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[newline]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[reason.IndexOf(vbNewLine)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign table row" sap2010:WorkflowViewState.IdRef="Assign_42">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[row]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String" xml:space="preserve">[String.Format("&lt;tr&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;{1}&lt;/td&gt;&lt;td&gt;{2}&lt;/td&gt;&lt;td&gt;{3}&lt;/td&gt;&lt;/tr&gt;",
item.Reference,
reason.Substring(0, tab),
reason.Substring(tab, newline - 1),
reason.Substring(newline))]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <AddToCollection x:TypeArguments="x:String" Collection="[ruleExceptionList]" DisplayName="Add To Rule Exceptions" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[row]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="System error row entry" sap2010:WorkflowViewState.IdRef="Sequence_81">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="row" />
                            <Variable x:TypeArguments="x:Int32" Name="tab" />
                            <Variable x:TypeArguments="x:Int32" Name="newline" />
                          </Sequence.Variables>
                          <Assign DisplayName="Assign tab position" sap2010:WorkflowViewState.IdRef="Assign_47">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[tab]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[reason.IndexOf(vbTab)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign newline position" sap2010:WorkflowViewState.IdRef="Assign_48">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[newline]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[reason.IndexOf(vbNewLine)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign table row" sap2010:WorkflowViewState.IdRef="Assign_49">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[row]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String" xml:space="preserve">[String.Format("&lt;tr&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;{1}&lt;/td&gt;&lt;td&gt;{2}&lt;/td&gt;&lt;td&gt;{3}&lt;/td&gt;&lt;/tr&gt;",
item.Reference,
reason.Substring(0, tab),
reason.Substring(tab, newline - 1),
reason.Substring(newline))]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <AddToCollection x:TypeArguments="x:String" Collection="[systemErrorList]" DisplayName="Add To Sytem Errors" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[row]" />
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Assign DisplayName="Increment success counter" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[successes]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[successes + 1]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Updated &quot; &amp; successes &amp; &quot; out of &quot; &amp; TransactionData.Count]" />
        <If Condition="[ruleExceptionList.Count &gt; 0]" DisplayName="If any rule exceptions" sap2010:WorkflowViewState.IdRef="If_4">
          <If.Then>
            <Sequence DisplayName="Build rule exception messages" sap2010:WorkflowViewState.IdRef="Sequence_78">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="table" />
              </Sequence.Variables>
              <Assign DisplayName="Assign table header" sap2010:WorkflowViewState.IdRef="Assign_40">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[table]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[String.Join("", ruleExceptionList)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign rule exception messages" sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[ruleExceptionMessages]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[ruleExceptionMessages.
Replace("{TABLE_MESSAGES}", table)]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Assign no rule exceptions" sap2010:WorkflowViewState.IdRef="Assign_37">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[ruleExceptionMessages]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <If Condition="[systemErrorList.Count &gt; 0]" DisplayName="If any system errors" sap2010:WorkflowViewState.IdRef="If_9">
          <If.Then>
            <Sequence DisplayName="Build system error messages" sap2010:WorkflowViewState.IdRef="Sequence_79">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="table" />
              </Sequence.Variables>
              <Assign DisplayName="Assign table header" sap2010:WorkflowViewState.IdRef="Assign_41">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[table]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[String.Join("", systemErrorList)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign system error messages" sap2010:WorkflowViewState.IdRef="Assign_38">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[systemErrorMessages]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[systemErrorMessages.
Replace("{TABLE_MESSAGES}", table).
Replace("{ALSO}", If(ruleExceptionList.Count &gt; 0, "also ", ""))]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Assign no system errors" sap2010:WorkflowViewState.IdRef="Assign_39">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[systemErrorMessages]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <If Condition="[successes &lt;&gt; TransactionData.Count]" DisplayName="If any errors or exceptions" sap2010:WorkflowViewState.IdRef="If_8">
          <If.Then>
            <Sequence DisplayName="Set exception message" sap2010:WorkflowViewState.IdRef="Sequence_77">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Name="failed" />
              </Sequence.Variables>
              <Assign DisplayName="Assign number of failed" sap2010:WorkflowViewState.IdRef="Assign_36">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[failed]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[ruleExceptionList.Count + systemErrorList.Count]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign exception messages" sap2010:WorkflowViewState.IdRef="Assign_33">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[exceptionMessage]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[exceptionMessage.
Replace("{FAILED}", failed.ToString).
Replace("{F}", If(failed &lt;&gt; 1, "s", "")).
Replace("{RULES_EXCEPTIONS}", ruleExceptionMessages).
Replace("{SYSTEM_ERRORS}", systemErrorMessages)]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Assign no messages" sap2010:WorkflowViewState.IdRef="Assign_35">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[exceptionMessage]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <Assign DisplayName="Assign message status" sap2010:WorkflowViewState.IdRef="Assign_34">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[messageStatus]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String" xml:space="preserve">[messageStatus.
Replace("{ALL}", If(successes &lt;&gt; TransactionData.Count, "", If(successes = 1, "the ", "all "))).
Replace("{SUCCESS}", successes.ToString).
Replace("{S}", If(successes &lt;&gt; TransactionData.Count, "s", ""))]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign recipient names" sap2010:WorkflowViewState.IdRef="Assign_18">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[messageBody]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[messageBody.Replace("{NAMES}", names)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign success status" sap2010:WorkflowViewState.IdRef="Assign_26">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[messageBody]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[messageBody.Replace("{STATUS}", messageStatus)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign timestamp" sap2010:WorkflowViewState.IdRef="Assign_28">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[messageBody]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[messageBody.Replace("{TIMESTAMP}", Now.ToString("hh:mm:ss tt"))]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign exceptions and errors" sap2010:WorkflowViewState.IdRef="Assign_32">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[messageBody]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[messageBody.Replace("{EXCEPTIONS}", exceptionMessage)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign logo">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[messageBody]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[messageBody.Replace("{LOGO}", Path.GetFullPath("Data\logo.png"))]</InArgument>
          </Assign.Value>
          <sap2010:WorkflowViewState.IdRef>Assign_52</sap2010:WorkflowViewState.IdRef>
        </Assign>
      </Sequence>
      <ui:WriteTextFile DisplayName="Write Text File" FileName="tempReport.html" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[messageBody]" />
      <ui:OpenBrowser UiBrowser="{x:Null}" BrowserType="IE" DisplayName="Open Browser" Hidden="False" sap2010:WorkflowViewState.IdRef="OpenBrowser_1" NewSession="True" Private="False" Url="[Path.GetFullPath(&quot;tempReport.html&quot;)]">
        <ui:OpenBrowser.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
            </ActivityAction.Argument>
          </ActivityAction>
        </ui:OpenBrowser.Body>
      </ui:OpenBrowser>
    </Sequence>
    <sads:DebugSymbol.Symbol>d2xDOlxVc2Vyc1xzcGFtaXNoXERvY3VtZW50c1xVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcUlBBVGFzazEtQ2hhcnRTdHJpbmdQcm9mb3JtYURldGFpbFxTYW5kYm94LnhhbWyGAUcDyQMOAgEBSAXHAxACAQJOB06fAwMBygFPB1YQAwHGAVcHWxcDAcQBXAdcxwEDAcIBXQe8AxICAQm9Awe9A5sBAgEFvgMHxgMYAgEDTvQBToEDAwHMAU5RTlcDAcsBVDJUNgMByQFRM1E6AwHHAVldWW4DAcUBXHRcxAEDAcMBXzdfOgIBDGBCYFkCAQthQmFZAgEKZwmeARQDAZ4BnwEJkAIWAgFqkQIJkQLYAQIBaJICCbcCDgIBVbgCCd4CDgIBQd8CCYcDDgIBK4gDCZIDEgIBJ5MDCZoDEgIBIZsDCaIDEgIBG6MDCaoDEgIBF6sDCbIDEgIBEbMDCbsDEgIBDb0DiQG9A5gBAgEHvQNAvQNRAgEGvgO9Ab4D7gECAQRsC2ylAQMBvgFtC22IAQMBuwFuC3UUAwG3AXYLfRQDAbIBfguFARQDAa4BhgELjQEUAwGpAY4BC5UBFAMBpAGWAQudARQDAZ8BnwGpAZ8BvAEDAZ0BpQEPjQIUAgFrkQJ2kQLVAQIBaZICF5ICOQIBVpQCDakCGAIBXKwCDbUCFgIBWLgCF7gCNwIBQroCDdACGAIBSNMCDdwCFgIBRN8CF98CQwIBLOECDfkCGAIBMfwCDYUDFgIBLYoDNYoDRAIBKJgDNJgDWwIBJJUDNZUDQgIBIqADNKADZAIBHp0DNZ0DQgIBHKgDNKgDdQIBGqUDNaUDQgIBGLADNLADawIBFK0DNa0DQgIBErgDNLgDdgIBELUDNbUDQgIBDmxXbHEDAcEBbCRsMAMBvwFteW2FAQMBvAFzOHN3AwG6AXA5cEADAbgBezZ7QAMBtQF4N3hEAwGzAYMBNoMBbAMBsQGAATeAAUYDAa8BiwE2iwFAAwGsAYgBN4gBSQMBqgGTATaTAUADAacBkAE3kAFOAwGlAZsBNpsBQAMBogGYATeYAUwDAaABpQEdpQFFAgFspwETgQIeAgFyhAITiwIcAgFtmAIPnwIYAgFjoAIPqAIYAgFdsgITsgJCAgFbrgI5rgJQAgFZvgIPxQIYAgFQxgIPzwIYAgFJ2QIT2QJCAgFH1QI51QJOAgFF5QIP7AIYAgE77QIP+AIYAgEyggMTggNCAgEw/gI5/gJLAgEuqwEVsgEeAwGZAbMBFYACGgIBc4kCPYkCTAIBcIYCPoYCSQIBbp0COp0CXgIBZpoCO5oCQgIBZKICO6ICUgIBXsMCOsMCXAIBU8ACO8ACQgIBUcgCO8gCUAIBSuoCOeoCagIBPucCOucCQgIBPO8CO+8CTQIBM7ABQLABYQMBnAGtAUGtAUkDAZoBswEjswFwAgF0tQEZ2AEkAwGHAdsBGf4BJAIBdbsBG8IBJAMBlQHDARvKASQDAZEBywEb1gEkAwGNAdcBG9cB0gEDAYgB4QEb6AEkAwGDAekBG/ABJAIBf/EBG/wBJAIBe/0BG/0BzQECAXbAAUXAAVwDAZgBvQFGvQFLAwGWAcgBRcgBYAMBlAHFAUbFAU8DAZIBzQFHzQFMAwGOAdcBUtcBZwMBiwHXAcgB1wHPAQMBiQHmAUXmAVwDAYYB4wFG4wFLAwGEAe4BRe4BYAMBggHrAUbrAU8DAYAB8wFH8wFMAgF8/QFS/QFlAgF5/QHDAf0BygECAXc=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="CloseWindow_1" sap:VirtualizedContainerService.HintSize="880,106" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="880,60" />
      <sap2010:ViewStateData Id="InvokeCode_1" sap:VirtualizedContainerService.HintSize="880,191">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="880,91" />
      <sap2010:ViewStateData Id="ReadTextFile_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_66" sap:VirtualizedContainerService.HintSize="858,914">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_50" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_51" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="242,64" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_80" sap:VirtualizedContainerService.HintSize="264,450">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_47" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_48" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_49" sap:VirtualizedContainerService.HintSize="242,64" />
      <sap2010:ViewStateData Id="AddToCollection`1_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_81" sap:VirtualizedContainerService.HintSize="264,450">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="553,598" />
      <sap2010:ViewStateData Id="Sequence_82" sap:VirtualizedContainerService.HintSize="575,822">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="842,970" />
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="858,1104">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="858,91" />
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,64" />
      <sap2010:ViewStateData Id="Sequence_78" sap:VirtualizedContainerService.HintSize="264,288">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="858,436">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="242,64" />
      <sap2010:ViewStateData Id="Sequence_79" sap:VirtualizedContainerService.HintSize="264,288">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="858,436">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="242,64" />
      <sap2010:ViewStateData Id="Sequence_77" sap:VirtualizedContainerService.HintSize="264,288">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="858,436" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="858,64" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="858,60" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="858,60" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="858,60" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="858,60" />
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="858,60" />
      <sap2010:ViewStateData Id="Sequence_65" sap:VirtualizedContainerService.HintSize="880,4345">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTextFile_1" sap:VirtualizedContainerService.HintSize="880,87" />
      <sap2010:ViewStateData Id="OpenBrowser_1" sap:VirtualizedContainerService.HintSize="880,114" />
      <sap2010:ViewStateData Id="Sequence_68" sap:VirtualizedContainerService.HintSize="902,5358">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="924,5719">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sandbox_1" sap:VirtualizedContainerService.HintSize="964,5799" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>