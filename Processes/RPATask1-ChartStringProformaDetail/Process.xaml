<Activity mc:Ignorable="sap sap2010 sads" x:Class="ProcessTransaction"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="in_TransactionMessage" Type="InArgument(snm:MailMessage)" />
    <x:Property Name="out_TransactionRM" Type="OutArgument(x:String)" />
    <x:Property Name="out_TransactionCounted" Type="OutArgument(x:Int32)" />
    <x:Property Name="out_TransactionSkipped" Type="OutArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: In this file all other process specific files will be invoked. If an application exception occurs, the current transaction can be retried. If a BRE is thrown, the transaction will be skipped. Can be a flowchart or sequence. &#xA;&#xA;Inputs: NA or&#xA;in_Argument (Type): Input argument.&#xA;io_Argument (Type): An argument passed by reference.&#xA;&#xA;Outputs: NA or&#xA;io_Argument (Type): An argument passed by reference.&#xA;out_Argument (Type): An returned argument.&#xA;&#xA;Pre Condition: NA or&#xA;The requirements of a document entering this workflow.&#xA;&#xA;Post Condition: NA or&#xA;The conditions of exiting without error and description of errors thrown." DisplayName="ProcessTransaction" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="proposals" />
      <Variable x:TypeArguments="x:Int32" Name="index" />
      <Variable x:TypeArguments="x:String" Name="shortDescription" />
      <Variable x:TypeArguments="x:String" Name="oucFaculty" />
      <Variable x:TypeArguments="x:String" Name="oucSchool" />
      <Variable x:TypeArguments="x:String" Name="oucSection" />
      <Variable x:TypeArguments="x:String" Name="oucSite" />
      <Variable x:TypeArguments="x:String" Name="uaOpUnit" />
      <Variable x:TypeArguments="x:String" Name="uaSite" />
      <Variable x:TypeArguments="x:String" Name="uaFund" />
      <Variable x:TypeArguments="x:String" Name="uaFunction" />
      <Variable x:TypeArguments="x:String" Name="proJustification" />
      <Variable x:TypeArguments="x:String" Name="proSubdivision" />
      <Variable x:TypeArguments="x:String" Name="proDepartment" />
      <Variable x:TypeArguments="x:String" Name="proIntegration" />
      <Variable x:TypeArguments="x:String" Name="proPostAdmin" />
    </Sequence.Variables>
    <Sequence DisplayName="save temp email for scraping" sap2010:WorkflowViewState.IdRef="Sequence_19">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="temporary" />
      </Sequence.Variables>
      <Assign DisplayName="Assign temporary" sap2010:WorkflowViewState.IdRef="Assign_24">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[temporary]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["temp_" + in_TransactionItem.Reference + ".mht"]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Saving email for scraping at: &quot; + temporary]" />
      <ui:SaveMail DisplayName="Save Mail Message" FilePath="[temporary]" sap2010:WorkflowViewState.IdRef="SaveMail_1" MailMessage="[in_TransactionMessage]" />
      <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_4">
        <TryCatch.Try>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ScrapeEmail workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Exchange\ScrapeEmail.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_TempMessage">[temporary]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_ShortDescription">[shortDescription]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_RMNumber">[out_TransactionRM]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_OUCFaculty">[oucFaculty]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_OUCSchool">[oucSchool]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_OUCSection">[oucSection]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_OUCSiteCode">[oucSite]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_UAOpUnitCode">[uaOpUnit]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_UASiteCode">[uaSite]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_UAFundCode">[uaFund]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_UAFunctionCode">[uaFunction]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_6">
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Throw DisplayName="Throw unhandled error" Exception="[New System.Exception(in_Config(&quot;SystemError_UnhandledExchange&quot;), exception)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <ui:Delete ContinueOnError="{x:Null}" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[temporary]" />
    </Sequence>
    <Sequence DisplayName="validate data" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="oucErrors" />
        <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="uaErrors" />
        <Variable x:TypeArguments="x:String" Name="oucMessage" />
      </Sequence.Variables>
      <If Condition="[shortDescription.Length &gt; 30]" DisplayName="If long description" sap2010:WorkflowViewState.IdRef="If_4">
        <If.Then>
          <Assign DisplayName="Assign truncated" sap2010:WorkflowViewState.IdRef="Assign_11">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[shortDescription]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[shortDescription.Substring(0, 30)]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
      </If>
      <If Condition="[oucSchool &lt;&gt; &quot;&quot;]" DisplayName="If valid school" sap2010:WorkflowViewState.IdRef="If_5">
        <If.Then>
          <Assign DisplayName="Assign integration" sap2010:WorkflowViewState.IdRef="Assign_13">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[proIntegration]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[oucSchool + "00"]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <AddToCollection x:TypeArguments="x:String" Collection="[oucErrors]" DisplayName="Add School to OUC" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="School" />
        </If.Else>
      </If>
      <If Condition="[oucFaculty &lt;&gt; &quot;&quot; And oucSchool &lt;&gt; &quot;&quot; And oucSection &lt;&gt; &quot;&quot;]" DisplayName="If valid faculty school section" sap2010:WorkflowViewState.IdRef="If_6">
        <If.Then>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
            <Assign DisplayName="Assign department" sap2010:WorkflowViewState.IdRef="Assign_14">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[proDepartment]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[oucFaculty + oucSchool + oucSection]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign subdivision" sap2010:WorkflowViewState.IdRef="Assign_17">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[proSubdivision]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[oucFaculty + oucSchool + oucSection]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
            <AddToCollection x:TypeArguments="x:String" Collection="[oucErrors]" DisplayName="Add Faculty to OUC" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="Faculty" />
            <AddToCollection x:TypeArguments="x:String" Collection="[oucErrors]" DisplayName="Add School to OUC" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="School" />
            <AddToCollection x:TypeArguments="x:String" Collection="[oucErrors]" DisplayName="Add Section to OUC" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6" Item="Section" />
          </Sequence>
        </If.Else>
      </If>
      <If Condition="[oucSite &lt;&gt; &quot;&quot;]" DisplayName="If valid site" sap2010:WorkflowViewState.IdRef="If_7">
        <If.Else>
          <AddToCollection x:TypeArguments="x:String" Collection="[oucErrors]" DisplayName="Add Site to OUC" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="Site" />
        </If.Else>
      </If>
      <If Condition="[uaOpUnit &lt;&gt; &quot;&quot; And uaSite &lt;&gt; &quot;&quot; And uaFund &lt;&gt; &quot;&quot; And uaFunction &lt;&gt; &quot;&quot;]" DisplayName="If valid op unit site fund function" sap2010:WorkflowViewState.IdRef="If_8">
        <If.Then>
          <Assign DisplayName="Assign justification" sap2010:WorkflowViewState.IdRef="Assign_16">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[proJustification]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[String.Format("{0}-{1}-{2}-{3}", uaOpUnit, uaSite, uaFund, uaFunction)]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_16">
            <AddToCollection x:TypeArguments="x:String" Collection="[uaErrors]" DisplayName="Add op unit to UA" sap2010:WorkflowViewState.IdRef="AddToCollection`1_7" Item="Op Unit" />
            <AddToCollection x:TypeArguments="x:String" Collection="[uaErrors]" DisplayName="Add site to UA" sap2010:WorkflowViewState.IdRef="AddToCollection`1_10" Item="Site" />
            <AddToCollection x:TypeArguments="x:String" Collection="[uaErrors]" DisplayName="Add fund to UA" sap2010:WorkflowViewState.IdRef="AddToCollection`1_11" Item="Fund" />
            <AddToCollection x:TypeArguments="x:String" Collection="[uaErrors]" DisplayName="Add function to UA" sap2010:WorkflowViewState.IdRef="AddToCollection`1_12" Item="Function" />
          </Sequence>
        </If.Else>
      </If>
      <If Condition="[oucErrors.Count + uaErrors.Count &gt; 0]" DisplayName="If op unit or under acc errors" sap2010:WorkflowViewState.IdRef="If_9">
        <If.Then>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_18">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="uaMessage" />
            </Sequence.Variables>
            <Assign DisplayName="Assign error message" sap2010:WorkflowViewState.IdRef="Assign_19">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[oucMessage]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[If(oucErrors.Count &gt; 0, "Op Unit Codes: " + String.Join(", ", oucErrors), "")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[uaMessage]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[If(uaErrors.Count &gt; 0, "Underwrite Acc: " + String.Join(", ", uaErrors), "")]</InArgument>
              </Assign.Value>
            </Assign>
            <TerminateWorkflow DisplayName="Terminate Invalid data" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_3" Reason="[String.Format(in_Config(&quot;RuleException_ValidateProforma&quot;), out_TransactionRM,&#xD;&#xA;If(oucErrors.Count &gt; 0 And uaErrors.Count &gt; 0,&#xD;&#xA; oucMessage + &quot; &amp; &quot; + uaMessage,&#xD;&#xA; oucMessage + uaMessage&#xD;&#xA;))]" />
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <Sequence DisplayName="Lookup accountant username" sap2010:WorkflowViewState.IdRef="Sequence_21">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="accountantLookup" />
      </Sequence.Variables>
      <ui:ReadRange AddHeaders="True" DataTable="[accountantLookup]" DisplayName="Read Accountant Lookup" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="[in_Config(&quot;Accountant_LookupSheet&quot;)]" WorkbookPath="[in_Config(&quot;Accountant_LookupWorkbook&quot;)]">
        <ui:ReadRange.Range>
          <InArgument x:TypeArguments="x:String">
            <Literal x:TypeArguments="x:String" Value="" />
          </InArgument>
        </ui:ReadRange.Range>
      </ui:ReadRange>
      <ui:LookupDataTable CellValue="{x:Null}" LookupColumnIndex="{x:Null}" LookupColumnName="{x:Null}" LookupDataColumn="{x:Null}" LookupValue="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[accountantLookup]" DisplayName="Lookup Data Table" sap2010:WorkflowViewState.IdRef="LookupDataTable_1" />
      <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[proPostAdmin]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">UQILEE</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <TryCatch DisplayName="Try Catch - Search RM Number" sap2010:WorkflowViewState.IdRef="TryCatch_3">
      <TryCatch.Try>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_20">
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke NavTo - Navigate Maintain Staged Proposals" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="UniFi\NavToMainMenuItem.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_NavigationSteps">[in_Config("UniFiPath_MaintainStagedProposals").Split("\"c).ToList]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SearchRMNumber workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="UniFi\SearchRMNumber.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_RMNumber">[out_TransactionRM]</InArgument>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_ProposalResults">[proposals]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="WorkflowTerminatedException" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <ActivityAction x:TypeArguments="WorkflowTerminatedException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="WorkflowTerminatedException" Name="exception" />
            </ActivityAction.Argument>
            <TerminateWorkflow DisplayName="Terminate Workflow SearchRM" Exception="[exception]" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_2" Reason="[String.Format(in_Config(&quot;RuleException_SearchRMNum&quot;), out_TransactionRM)]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:ForEachRow CurrentIndex="[index]" DataTable="[proposals]" DisplayName="For Each Proposal Row" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Process each proposal" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="loadStatus" />
              <Variable x:TypeArguments="x:String" Name="contractNum" />
              <Variable x:TypeArguments="x:String" Name="projectID" />
              <Variable x:TypeArguments="x:String" Name="stageLoadID" />
              <Variable x:TypeArguments="x:String" Name="sequenceNumber" />
            </Sequence.Variables>
            <Assign DisplayName="Assign RM Stage Load ID" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[stageLoadID]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[row("RM Stage Load ID").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign Record Sequence Number " sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[sequenceNumber]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[row("Record Sequence Number").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign RM Load Status" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[loadStatus]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[row("RM Load Status").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign Contract Number" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[contractNum]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[row("Contract Number").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign Project ID" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[projectID]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[row("Project ID").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign initial status" sap2010:WorkflowViewState.IdRef="Assign_21">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[row("Status")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[loadStatus]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[loadStatus &lt;&gt; &quot;Edit&quot;]" DisplayName="If not edit" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
                  <Assign DisplayName="Assign skipped status" sap2010:WorkflowViewState.IdRef="Assign_8">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[row("Status")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["status is: " + loadStatus]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[String.Format(in_Config(&quot;LogMessage_SkippedProforma&quot;), index + 1, row(&quot;Status&quot;).ToString)]" />
                  <ui:Continue sap2010:WorkflowViewState.IdRef="Continue_2" />
                </Sequence>
              </If.Then>
            </If>
            <If Condition="[contractNum &lt;&gt; &quot;(blank)&quot; Or projectID &lt;&gt; &quot;(blank)&quot;]" DisplayName="If contract or project set" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <Assign DisplayName="Assign skipped status" sap2010:WorkflowViewState.IdRef="Assign_10">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[row("Status")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[If(contractNum &lt;&gt; "(blank)" And projectID &lt;&gt; "(blank)",
"Contract and Project set", If(contractNum &lt;&gt; "(blank)",
"Contract set", "Project set"))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Warn" Message="[String.Format(in_Config(&quot;LogMessage_SkippedProforma&quot;), index + 1, row(&quot;Status&quot;).ToString)]" />
                  <ui:Continue sap2010:WorkflowViewState.IdRef="Continue_1" />
                </Sequence>
              </If.Then>
            </If>
            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click item based on index num" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[&quot;&lt;html app='chrome.exe' title='Maintain Staged Proposals' /&gt;&lt;webctrl tag='IFRAME' parentclass='PSPAGE' /&gt;&lt;webctrl id='PTSRCHRESULTS' tag='TABLE' /&gt;&lt;webctrl tag='A' colName='Process Instance' tableRow='&quot; &amp; index + 2 &amp; &quot;' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
              </ui:Click.Target>
            </ui:Click>
            <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
              <TryCatch.Try>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateRMProposal workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="UniFi\UpdateRMProposal.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_UpdatingRow">[row]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_PostAdmin">[proPostAdmin]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Integration">[proIntegration]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Department">[proDepartment]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Subdivision">[proSubdivision]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Site">[oucSite]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Justification">[proJustification]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Description">[shortDescription]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Assign DisplayName="Assign editing status" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[row("Status")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["Updated"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[String.Format(in_Config(&quot;LogMessage_UpdatedProforma&quot;), index + 1, row(&quot;Status&quot;).ToString)]" />
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="WorkflowTerminatedException" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                  <ActivityAction x:TypeArguments="WorkflowTerminatedException">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="WorkflowTerminatedException" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
                      <Assign DisplayName="Assign editing status" sap2010:WorkflowViewState.IdRef="Assign_7">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[row("Status")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[exception.Message]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn" Message="[String.Format(in_Config(&quot;LogMessage_SkippedProforma&quot;), index + 1, row(&quot;Status&quot;).ToString)]" />
                    </Sequence>
                  </ActivityAction>
                </Catch>
                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_13">
                      <Assign DisplayName="Assign editing status" sap2010:WorkflowViewState.IdRef="Assign_9">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[row("Status")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[String.Format(in_Config("SystemError_ProformaEntry"), index + 2, exception)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[String.Format(in_Config(&quot;LogMessage_SkippedProforma&quot;), index + 1, row(&quot;Status&quot;).ToString)]" />
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <If Condition="[proposals.AsEnumerable.All(Function(r) r(&quot;Status&quot;).ToString &lt;&gt; &quot;Updated&quot;)]" DisplayName="If no rows updated" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <TerminateWorkflow DisplayName="Terminate No Results" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="[String.Format(in_Config(&quot;RuleException_UpdateProforma&quot;),&#xA;  out_TransactionRM,&#xA;  String.Join(&quot;, &quot;, proposals.AsEnumerable.Select(Function(r) r(&quot;Status&quot;).ToString))&#xA;)]" />
      </If.Then>
    </If>
    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser UniFi MSP" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="a857d010ca5cd785a1b89381c4170024" Selector="&lt;html app='chrome.exe' title='Maintain Staged Proposals' /&gt;">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click clear button" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
            <ui:Click.CursorPosition>
              <ui:CursorPosition Position="Center">
                <ui:CursorPosition.OffsetX>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetX>
                <ui:CursorPosition.OffsetY>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetY>
              </ui:CursorPosition>
            </ui:Click.CursorPosition>
            <ui:Click.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="4c7529f5e350d18af22ec71022d6058d" Selector="&lt;webctrl tag='IFRAME' parentclass='PSPAGE' /&gt;&lt;webctrl tag='INPUT' aaname='Clear' type='button' /&gt;" WaitForReady="INTERACTIVE" />
            </ui:Click.Target>
          </ui:Click>
        </ActivityAction>
      </ui:BrowserScope.Body>
    </ui:BrowserScope>
    <Sequence DisplayName="save email" sap2010:WorkflowViewState.IdRef="Sequence_7">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="filename" />
        <Variable x:TypeArguments="x:String" Name="folder" />
      </Sequence.Variables>
      <Assign DisplayName="Assign filename" sap2010:WorkflowViewState.IdRef="Assign_22">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[filename]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_TransactionItem.Reference + ".eml"]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign folder" sap2010:WorkflowViewState.IdRef="Assign_23">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[folder]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[String.Format(in_Config("Trimm_StorageFolder"), out_TransactionRM)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create RM Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[folder]" />
      <ui:SaveMail DisplayName="Save Mail Message to Network" FilePath="[folder + filename]" sap2010:WorkflowViewState.IdRef="SaveMail_2" MailMessage="[in_TransactionMessage]" />
    </Sequence>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="414,60" />
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="414,91" />
      <sap2010:ViewStateData Id="SaveMail_1" sap:VirtualizedContainerService.HintSize="414,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_6" sap:VirtualizedContainerService.HintSize="400,104">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="414,266" />
      <sap2010:ViewStateData Id="Delete_1" sap:VirtualizedContainerService.HintSize="414,22" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="511,208" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="511,208" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="222,270">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="511,432" />
      <sap2010:ViewStateData Id="AddToCollection`1_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="511,208" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_10" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_11" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_12" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="222,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="511,480" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="TerminateWorkflow_3" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="264,346">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="511,494" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadRange_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LookupDataTable_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="464,373">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TerminateWorkflow_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="464,565">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Continue_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="336,377">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,525" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="314,64" />
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Continue_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="336,381">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,529" />
      <sap2010:ViewStateData Id="Click_1" sap:VirtualizedContainerService.HintSize="464,68" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="336,442">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="464,691" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="486,2657">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TerminateWorkflow_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Click_2" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="BrowserScope_1" sap:VirtualizedContainerService.HintSize="464,252">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="CreateDirectory_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="SaveMail_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="486,2273">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ProcessTransaction_1" sap:VirtualizedContainerService.HintSize="526,2353" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>