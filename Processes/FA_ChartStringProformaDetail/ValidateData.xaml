<Activity mc:Ignorable="sap sap2010 sads" x:Class="ValidateData"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_OUCFaculty" Type="InArgument(x:String)" />
    <x:Property Name="in_OUCSchool" Type="InArgument(x:String)" />
    <x:Property Name="in_OUCSection" Type="InArgument(x:String)" />
    <x:Property Name="in_OUCSite" Type="InArgument(x:String)" />
    <x:Property Name="in_UAOpal" Type="InArgument(x:String)" />
    <x:Property Name="in_UASite" Type="InArgument(x:String)" />
    <x:Property Name="in_UAFund" Type="InArgument(x:String)" />
    <x:Property Name="in_UAFunction" Type="InArgument(x:String)" />
    <x:Property Name="out_ProformaIntegration" Type="OutArgument(x:String)" />
    <x:Property Name="out_ProformaDepartment" Type="OutArgument(x:String)" />
    <x:Property Name="out_ProformaSubdivision" Type="OutArgument(x:String)" />
    <x:Property Name="out_ProformaJustification" Type="OutArgument(x:String)" />
    <x:Property Name="io_ShortDescription" Type="InOutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ValidateData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: A brief overview of what happens within the workflow.&#xA;&#xA;Inputs: &#xA;in_ShortDescription (String).&#xA;in_OUCFaculty (String): Operational Unit Code Faculty.&#xA;in_OUCSchool (String): Operational Unit Code School.&#xA;in_OUCSection (String): Operational Unit Code Section.&#xA;in_OUCSite (String): Operational Unit Code Site.&#xA;in_UAOpal (String): Underwriting Account Opal.&#xA;in_UASite (String): Underwriting Account Site.&#xA;in_UAFund (String): Underwriting Account Fund.&#xA;in_UAFunction (String): Underwriting Account Function.&#xA;&#xA;Outputs:&#xA;out_ProformaIntegration (String): Project Data Integration.&#xA;out_ProformaDepartment (String): Project Data Department.&#xA;out_ProformaSubdivision (String): Project Data Subdivision.&#xA;out_ProformaJustification (String): Project Data Justification.&#xA;&#xA;Pre Condition:&#xA;All inputs are either set with valid data or blank.&#xA;&#xA;Post Condition:&#xA;Short description is truncated to 30 characters.&#xA;Integration = OUC School + &quot;00&quot;&#xA;Department = OUC Faculty + OUC School + OUC Section&#xA;Subdivision = Department&#xA;OUC Site &lt;&gt; &quot;&quot;&#xA;Justification = UA Opal + &quot;-&quot; + UA Site + &quot;-&quot; + UA Fund + &quot;-&quot; + UA Function" DisplayName="validate data" sap2010:WorkflowViewState.IdRef="Sequence_3">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="oucErrors" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="uaErrors" />
      <Variable x:TypeArguments="x:String" Name="oucMessage" />
      <Variable x:TypeArguments="x:String" Name="uaMessage" />
    </Sequence.Variables>
    <If Condition="[io_ShortDescription.Length &gt; 30]" DisplayName="If long description" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Then>
        <Assign DisplayName="Assign truncated" sap2010:WorkflowViewState.IdRef="Assign_11">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[io_ShortDescription]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[io_ShortDescription.Substring(0, 30).Trim]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
    </If>
    <If Condition="[in_OUCFaculty &lt;&gt; &quot;&quot;]" DisplayName="If valid faculty" sap2010:WorkflowViewState.IdRef="If_6">
      <If.Then>
        <Assign DisplayName="Assign department faculty" sap2010:WorkflowViewState.IdRef="Assign_14">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[out_ProformaDepartment]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[out_ProformaDepartment + in_OUCFaculty]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <AddToCollection x:TypeArguments="x:String" Collection="[oucErrors]" DisplayName="Add Faculty to OUC" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="Faculty" />
      </If.Else>
    </If>
    <If Condition="[in_OUCSchool &lt;&gt; &quot;&quot;]" DisplayName="If valid school" sap2010:WorkflowViewState.IdRef="If_5">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_27">
          <Assign DisplayName="Assign integration" sap2010:WorkflowViewState.IdRef="Assign_13">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_ProformaIntegration]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_OUCSchool + "00"]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign department school" sap2010:WorkflowViewState.IdRef="Assign_25">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_ProformaDepartment]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[out_ProformaDepartment + in_OUCSchool]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <AddToCollection x:TypeArguments="x:String" Collection="[oucErrors]" DisplayName="Add School to OUC" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="School" />
      </If.Else>
    </If>
    <If Condition="[in_OUCSection &lt;&gt; &quot;&quot;]" DisplayName="If valid section" sap2010:WorkflowViewState.IdRef="If_13">
      <If.Then>
        <Assign DisplayName="Assign department section" sap2010:WorkflowViewState.IdRef="Assign_27">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[out_ProformaDepartment]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[out_ProformaDepartment + in_OUCSection]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <AddToCollection x:TypeArguments="x:String" Collection="[oucErrors]" DisplayName="Add Section to OUC" sap2010:WorkflowViewState.IdRef="AddToCollection`1_18" Item="Section" />
      </If.Else>
    </If>
    <Assign DisplayName="Assign subdivision" sap2010:WorkflowViewState.IdRef="Assign_28">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_ProformaSubdivision]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[out_ProformaDepartment]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[in_OUCSite &lt;&gt; &quot;&quot;]" DisplayName="If valid site" sap2010:WorkflowViewState.IdRef="If_7">
      <If.Else>
        <AddToCollection x:TypeArguments="x:String" Collection="[oucErrors]" DisplayName="Add Site to OUC" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="Site" />
      </If.Else>
    </If>
    <If Condition="[in_UAOpal &lt;&gt; &quot;&quot;]" DisplayName="If valid opal" sap2010:WorkflowViewState.IdRef="If_8">
      <If.Then>
        <Assign DisplayName="Assign justification opal" sap2010:WorkflowViewState.IdRef="Assign_16">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[out_ProformaJustification]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_UAOpal]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <AddToCollection x:TypeArguments="x:String" Collection="[uaErrors]" DisplayName="Add opal to UA" sap2010:WorkflowViewState.IdRef="AddToCollection`1_7" Item="Opal" />
      </If.Else>
    </If>
    <If Condition="[in_UASite &lt;&gt; &quot;&quot;]" DisplayName="If valid site" sap2010:WorkflowViewState.IdRef="If_14">
      <If.Then>
        <Assign DisplayName="Assign justification site" sap2010:WorkflowViewState.IdRef="Assign_29">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[out_ProformaJustification]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[out_ProformaJustification + "-" + in_UASite]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <AddToCollection x:TypeArguments="x:String" Collection="[uaErrors]" DisplayName="Add site to UA" sap2010:WorkflowViewState.IdRef="AddToCollection`1_19" Item="Site" />
      </If.Else>
    </If>
    <If Condition="[in_UAFund &lt;&gt; &quot;&quot;]" DisplayName="If valid fund" sap2010:WorkflowViewState.IdRef="If_15">
      <If.Then>
        <Assign DisplayName="Assign justification fund" sap2010:WorkflowViewState.IdRef="Assign_30">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[out_ProformaJustification]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[out_ProformaJustification + "-" + in_UAFund]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <AddToCollection x:TypeArguments="x:String" Collection="[uaErrors]" DisplayName="Add fund to UA" sap2010:WorkflowViewState.IdRef="AddToCollection`1_20" Item="Fund" />
      </If.Else>
    </If>
    <If Condition="[in_UAFunction &lt;&gt; &quot;&quot;]" DisplayName="If valid function" sap2010:WorkflowViewState.IdRef="If_16">
      <If.Then>
        <Assign DisplayName="Assign justification func" sap2010:WorkflowViewState.IdRef="Assign_31">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[out_ProformaJustification]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[out_ProformaJustification + "-" + in_UAFunction]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <AddToCollection x:TypeArguments="x:String" Collection="[uaErrors]" DisplayName="Add function to UA" sap2010:WorkflowViewState.IdRef="AddToCollection`1_21" Item="Function" />
      </If.Else>
    </If>
    <Assign DisplayName="Assign op unit codes" sap2010:WorkflowViewState.IdRef="Assign_19">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[oucMessage]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["Op Unit: " + String.Join(", ", oucErrors)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign under acc codes" sap2010:WorkflowViewState.IdRef="Assign_20">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[uaMessage]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["Under Acc: " + String.Join(", ", uaErrors)]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[oucErrors.Count &gt; 0 And uaErrors.Count &gt; 0]" DisplayName="If op unit and under acc errors" sap2010:WorkflowViewState.IdRef="If_9">
      <If.Then>
        <TerminateWorkflow DisplayName="Terminate Invalid OUC UA" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_4" Reason="[oucMessage + &quot; &amp; &quot; + uaMessage]" />
      </If.Then>
    </If>
    <If Condition="[oucErrors.Count &gt; 0]" DisplayName="If op unit errors only" sap2010:WorkflowViewState.IdRef="If_17">
      <If.Then>
        <TerminateWorkflow DisplayName="Terminate Invalid OUC" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_5" Reason="[oucMessage]" />
      </If.Then>
    </If>
    <If Condition="[uaErrors.Count &gt; 0]" DisplayName="If under acc errors only" sap2010:WorkflowViewState.IdRef="If_18">
      <If.Then>
        <TerminateWorkflow DisplayName="Terminate Invalid UA" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_6" Reason="[uaMessage]" />
      </If.Then>
    </If>
    <sads:DebugSymbol.Symbol>d1NDOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcRkFfQ2hhcnRTdHJpbmdQcm9mb3JtYURldGFpbFxWYWxpZGF0ZURhdGEueGFtbF5RA4QCDgIBAVM+U1UCAQNUPlRVAgECWAVjCgMBjgFkBXIKAwGBAXMFiwEKAgFujAEFmgEKAgFhmwEFogEOAgFcowEFpwEKAgFVqAEFtgEKAgFJtwEFxQEKAgE8xgEF1AEKAgEv1QEF4wEKAgEi5AEF6wEOAgEd7AEF8wEOAgEY9AEF+AEKAgEQ+QEF/QEKAgEK/gEFggIKAgEEWBNYOQMBjwFaCWESAwGRAWQTZDoDAYIBZgltEgMBiAFwCXC2AQMBhAFzE3M5AgFvdQmGARQCAXWJAQmJAbQBAgFxjAETjAE6AgFijgEJlQESAgFomAEJmAG3AQIBZKABMKABSAIBX50BMZ0BSgIBXaMBE6MBNwIBVqUBCaUBsAECAVioAROoATYCAUqqAQmxARICAVC0AQm0Aa4BAgFMtwETtwE2AgE9uQEJwAESAgFDwwEJwwGvAQIBP8YBE8YBNgIBMMgBCc8BEgIBNtIBCdIBrwECATLVARPVAToCASPXAQneARICASnhAQnhAbcBAgEl6QEw6QFcAgEg5gEx5gE9AgEe8QEw8QFdAgEb7gEx7gE8AgEZ9AET9AFHAgER9gEJ9gGzAQIBFPkBE/kBLQIBC/sBCfsBjgECAQ3+ARP+ASwCAQWAAgmAAowBAgEHXzRfXwMBlAFcNVxKAwGSAWs0a1wDAYsBaDVoTQMBiQFwQHBNAwGGAXCqAXCzAQMBhQF2C30UAgF8fguFARQCAXaJAUCJAU0CAXOJAakBiQGxAQIBcpMBNJMBXAIBa5ABNZABTQIBaZgBQJgBTQIBZpgBqwGYAbQBAgFlpQFApQFNAgFapQGnAaUBrQECAVmvATSvAT8CAVOsATWsAVACAVG0AUC0AUwCAU60AaUBtAGrAQIBTb4BNL4BYQIBRrsBNbsBUAIBRMMBQMMBTAIBQcMBpgHDAawBAgFAzQE0zQFhAgE5ygE1ygFQAgE30gFA0gFMAgE00gGmAdIBrAECATPcATTcAWUCASzZATXZAVACASrhAUDhAUwCASfhAaoB4QG0AQIBJvYBgAH2AbABAgEV+wF9+wGLAQIBDoACfIACiQECAQh7NntLAgF/eDd4UAIBfYMBNoMBXQIBeYABN4ABTwIBdw==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="489,208" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="489,208" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="489,432" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_18" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="489,208" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="489,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="489,208" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="489,208" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_19" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="489,208" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_20" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_15" sap:VirtualizedContainerService.HintSize="489,208" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_21" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="489,208" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="489,60" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="489,60" />
      <sap2010:ViewStateData Id="TerminateWorkflow_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="489,208" />
      <sap2010:ViewStateData Id="TerminateWorkflow_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_17" sap:VirtualizedContainerService.HintSize="489,208" />
      <sap2010:ViewStateData Id="TerminateWorkflow_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_18" sap:VirtualizedContainerService.HintSize="489,208" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="511,4031">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ValidateData_1" sap:VirtualizedContainerService.HintSize="551,4111" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>