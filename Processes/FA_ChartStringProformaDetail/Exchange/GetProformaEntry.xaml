<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetProformaEntry"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_FoundValue" Type="OutArgument(x:String)" />
    <x:Property Name="in_BackupSelector" Type="InArgument(x:String)" />
    <x:Property Name="in_PrimarySelector" Type="InArgument(x:String)" />
    <x:Property Name="in_RegexMatcher" Type="InArgument(str:Regex)" />
    <x:Property Name="in_TableScope" Type="InArgument(ui:UiElement)" />
    <x:Property Name="in_Offset" Type="InArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetProformaEntry_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>UiPath.Orchestrator.Client.Models</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Credentials.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Credentials.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: Checks if the primary selector contains the regex pattern, then checks if the backup selector that's offset from the primary contains the regex pattern.&#xA;&#xA;Inputs:&#xA;in_PrimarySelector (String): Cell with field title.&#xA;in_BackupSelector (String): Cell below primary, is some offset row below.&#xA;in_TableScope (UiElement): HTML table containing cells to search.&#xA;in_RegexMatcher (Regex): regex pattern to match data with.&#xA;in_Offset (Integer) [optional]: defaults to look for backup selector 1 row below the primary.&#xA;&#xA;Outputs:&#xA;out_FoundValue (String): An returned argument.&#xA;&#xA;Pre Condition: NA&#xA;&#xA;Post Condition:&#xA;Matched text from the primary selector is returned or matched text from the backup selector is returned, or an empty string is returned." sap2010:WorkflowViewState.IdRef="Sequence_59">
    <If Condition="[in_Offset = 0]" DisplayName="If set default offset" sap2010:WorkflowViewState.IdRef="If_7">
      <If.Then>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[in_Offset]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
    </If>
    <ui:ElementScope UiElement="{x:Null}" DisplayName="Element Scope" sap2010:WorkflowViewState.IdRef="ElementScope_1">
      <ui:ElementScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Sequence" sap2010:WorkflowViewState.IdRef="Sequence_58">
            <Sequence.Variables>
              <Variable x:TypeArguments="str:Match" Name="matches" />
            </Sequence.Variables>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_35" Level="Trace" Message="[&quot;Selecting &quot; + in_PrimarySelector]" />
            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text primary" sap2010:WorkflowViewState.IdRef="GetValue_21">
              <ui:GetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="5c486b645137e5787b02463b87fa53ef" Selector="[in_PrimarySelector]" WaitForReady="INTERACTIVE" />
              </ui:GetValue.Target>
              <ui:GetValue.Value>
                <OutArgument x:TypeArguments="x:String">[out_FoundValue]</OutArgument>
              </ui:GetValue.Value>
            </ui:GetValue>
            <Assign DisplayName="Assign regex match" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="str:Match">[matches]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="str:Match">[in_RegexMatcher.Match(out_FoundValue)]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[matches.Success]" DisplayName="If primary match" sap2010:WorkflowViewState.IdRef="If_6">
              <If.Then>
                <Assign DisplayName="Assign primary value" sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[out_FoundValue]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[matches.Groups(2).Value]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_57">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="row" />
                  </Sequence.Variables>
                  <ui:GetAttribute ContinueOnError="{x:Null}" Attribute="tableRow" DisplayName="Get row Attribute" sap2010:WorkflowViewState.IdRef="GetAttribute_6">
                    <ui:GetAttribute.Result>
                      <OutArgument x:TypeArguments="x:Int32">[row]</OutArgument>
                    </ui:GetAttribute.Result>
                    <ui:GetAttribute.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" Selector="[in_PrimarySelector]" WaitForReady="INTERACTIVE" />
                    </ui:GetAttribute.Target>
                  </ui:GetAttribute>
                  <Assign DisplayName="Assign selector row" sap2010:WorkflowViewState.IdRef="Assign_11">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[in_BackupSelector]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[in_BackupSelector.Replace("#", (row + in_Offset).ToString)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Trace" Message="[&quot;Selecting &quot; + in_BackupSelector]" />
                  <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text backup" sap2010:WorkflowViewState.IdRef="GetValue_22">
                    <ui:GetValue.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="5c486b645137e5787b02463b87fa53ef" Selector="[in_BackupSelector]" TimeoutMS="1000" WaitForReady="INTERACTIVE" />
                    </ui:GetValue.Target>
                    <ui:GetValue.Value>
                      <OutArgument x:TypeArguments="x:String">[out_FoundValue]</OutArgument>
                    </ui:GetValue.Value>
                  </ui:GetValue>
                  <Assign DisplayName="Assign regex match" sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="str:Match">[matches]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="str:Match">[in_RegexMatcher.Match(out_FoundValue)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[matches.Success]" DisplayName="If backup match" sap2010:WorkflowViewState.IdRef="If_8">
                    <If.Then>
                      <Assign DisplayName="Assign backup value" sap2010:WorkflowViewState.IdRef="Assign_15">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_FoundValue]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[matches.Groups(2).Value]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <Assign DisplayName="Assign not found" sap2010:WorkflowViewState.IdRef="Assign_17">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_FoundValue]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ElementScope.Body>
      <ui:ElementScope.Target>
        <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[in_TableScope]" WaitForReady="INTERACTIVE" />
      </ui:ElementScope.Target>
    </ui:ElementScope>
    <Assign DisplayName="Assign single line" sap2010:WorkflowViewState.IdRef="Assign_12">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_FoundValue]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[String.Join("", out_FoundValue.Where(function(c) Not Char.IsWhiteSpace(c)))]</InArgument>
      </Assign.Value>
    </Assign>
    <sads:DebugSymbol.Symbol>d2BDOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcRkFfQ2hhcnRTdHJpbmdQcm9mb3JtYURldGFpbFxFeGNoYW5nZVxHZXRQcm9mb3JtYUVudHJ5LnhhbWwyYAPkAQ4CAQFhBWwKAgFJbQXaARcCAQbbAQXiAQ4CAQJhE2EkAgFKYwlqEgIBTNgBX9gBcAIBR3ML1AEWAgEH4AEw4AF9AgEF3QEx3QFBAgEDaDNoNgIBT2U0ZT8CAU13DXeuAQIBRHgNfxsCAT+AAQ2HARYCATmIAQ3TARICAQh3fHerAQIBRX05fUkCAUB6oAF6tgECAUKFATmFAWACATyCATqCAUMCATqIARuIAS4CAQmKARGRARoCATSUARHRARwCAQuPATyPAVUCATeMAT2MAU0CATWYAROfASUCAS6gAROnARwCASeoAROoAbMBAgEkqQETsAEhAgEesQETuAEcAgEYuQET0AEYAgEMmAFJmAFTAgExmgE+mgFDAgEvnQFtnQGDAQIBMqUBPqUBegIBKqIBP6IBUgIBKKgBggGoAbABAgElrgE/rgFPAgEfqwGRAasBpgECASKrAbEBqwG3AQIBIbYBP7YBZgIBG7MBQLMBSQIBGbkBIbkBNAIBDbsBF8IBIAIBE8UBF84BIAIBD8ABQsABWwIBFr0BQ70BUwIBFMsBHcsBTAIBEscBQ8cBUwIBEA==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="834,208" />
      <sap2010:ViewStateData Id="LogMessage_35" sap:VirtualizedContainerService.HintSize="798,91" />
      <sap2010:ViewStateData Id="GetValue_21" sap:VirtualizedContainerService.HintSize="798,106" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="798,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="GetAttribute_6" sap:VirtualizedContainerService.HintSize="509,96" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="LogMessage_36" sap:VirtualizedContainerService.HintSize="509,91" />
      <sap2010:ViewStateData Id="GetValue_22" sap:VirtualizedContainerService.HintSize="509,106" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="509,207" />
      <sap2010:ViewStateData Id="Sequence_57" sap:VirtualizedContainerService.HintSize="531,944">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="798,1091" />
      <sap2010:ViewStateData Id="Sequence_58" sap:VirtualizedContainerService.HintSize="820,1592">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ElementScope_1" sap:VirtualizedContainerService.HintSize="834,1700" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="834,60" />
      <sap2010:ViewStateData Id="Sequence_59" sap:VirtualizedContainerService.HintSize="856,2439">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetProformaEntry_1" sap:VirtualizedContainerService.HintSize="896,2519" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>