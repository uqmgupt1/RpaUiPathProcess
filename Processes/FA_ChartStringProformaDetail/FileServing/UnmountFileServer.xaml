<Activity mc:Ignorable="sap sap2010 sads" x:Class="UnmountFileServer"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_MappedDrive" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Main_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security.Principal</x:String>
      <x:String>System.DirectoryServices.AccountManagement</x:String>
      <x:String>Microsoft.IdentityModel.Clients.ActiveDirectory</x:String>
      <x:String>System.Net</x:String>
      <x:String>SimpleImpersonation</x:String>
      <x:String>Dapplo.Windows.Advapi32</x:String>
      <x:String>PInvoke</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.DirectoryServices.AccountManagement</AssemblyReference>
      <AssemblyReference>Microsoft.IdentityModel.Clients.ActiveDirectory</AssemblyReference>
      <AssemblyReference>SimpleImpersonation</AssemblyReference>
      <AssemblyReference>Dapplo.Windows.Advapi32</AssemblyReference>
      <AssemblyReference>PInvoke.AdvApi32</AssemblyReference>
      <AssemblyReference>PInvoke.Kernel32</AssemblyReference>
      <AssemblyReference>PInvoke.Windows.Core</AssemblyReference>
      <AssemblyReference>System.Reactive</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: Removed all mapped drives from the robot if there's any.&#xA;&#xA;Inputs:&#xA;in_MappedDrive (String): Path of the drive to remove.&#xA;&#xA;Outputs: NA&#xA;Pre Condition: NA&#xA;&#xA;Post Condition:&#xA;No mapped drives can remain." DisplayName="Unmount File Server" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sco:Collection(x:String)" Name="response" />
      <Variable x:TypeArguments="x:Uri" Name="folder" />
    </Sequence.Variables>
    <Assign DisplayName="Assign folder" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Uri">[folder]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Uri">[New Uri(in_MappedDrive)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Start UnmountFileServer.xaml, mapped: &quot; + Path.GetPathRoot(folder.LocalPath)]" />
    <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="net use" DisplayName="Invoke List Mapped Drives" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_5" IsScript="True" Output="[response]" />
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Trace" Message="[&quot;Currently mapped:&quot; + vbNewLine + String.Join(vbNewLine, response).Trim]" />
    <If Condition="[response.Any(Function(r) r.Contains(Path.GetPathRoot(folder.LocalPath)))]" DisplayName="If not already mapped" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
          <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="net use $drive /delete /yes" DisplayName="Invoke Remove Existing Mapping" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_10" IsScript="True" Output="[response]">
            <ui:InvokePowerShell.PowerShellVariables>
              <InArgument x:TypeArguments="x:String" x:Key="drive">[Path.GetPathRoot(folder.LocalPath)]</InArgument>
            </ui:InvokePowerShell.PowerShellVariables>
          </ui:InvokePowerShell>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Trace" Message="[&quot;Removed drives:&quot; + vbNewLine + String.Join(vbNewLine, response).Trim]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Trace" Message="[&quot;No mapping to: &quot; + Path.GetPathRoot(folder.LocalPath)]" />
      </If.Else>
    </If>
    <ui:InvokePowerShell x:TypeArguments="x:String" ContinueOnError="{x:Null}" CommandText="net use" DisplayName="Invoke List Mapped Drives" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_11" IsScript="True" Output="[response]" />
    <ui:CheckFalse DisplayName="Check Mappings Removed" ErrorMessage="[&quot;Errors removing mapping to: &quot; + Path.GetPathRoot(folder.LocalPath)]" Expression="[response.Any(Function(r) r.Contains(Path.GetPathRoot(folder.LocalPath)))]" sap2010:WorkflowViewState.IdRef="CheckFalse_1" />
    <sads:DebugSymbol.Symbol>d2RDOlxVaVBhdGhcUnBhVWlQYXRoUHJvY2Vzc1xQcm9jZXNzZXNcRkFfQ2hhcnRTdHJpbmdQcm9mb3JtYURldGFpbFxGaWxlU2VydmluZ1xVbm1vdW50RmlsZVNlcnZlci54YW1sHFkDew4CAQFeBWUOAgEdZgVm0AECARtnBWfrAQIBF2gFaMwBAgEVaQV3CgIBCXgFeOwBAgEFeQV5oQICAQJjLWNGAgEgYC5gNgIBHmZyZs0BAgEcZ9wBZ+gBAgEZZ1xnZQIBGGh0aMkBAgEWaRNpXwIBCmsJchQCAQ11CXW/AQIBC3jdAXjpAQIBB3hceGUCAQZ5owF57wECAQR5RnmXAQIBA2wLcCECARBxC3HQAQIBDnV4dbwBAgEMbPwBbIgCAgETbGJsfwIBEm5EbmgCARFxenHNAQIBDw==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="InvokePowerShell`1_5" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="LogMessage_21" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="InvokePowerShell`1_10" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="LogMessage_20" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="336,314">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_19" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="675,462" />
      <sap2010:ViewStateData Id="InvokePowerShell`1_11" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="CheckFalse_1" sap:VirtualizedContainerService.HintSize="675,87" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="697,1435">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="737,1515" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>